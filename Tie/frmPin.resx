<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cwD6+fIA8vLgALy3ZAC1sFwAtrFdALezYAC6tmUAsapCAIV3CgCrpEQAvrpuAMG9dADCvnUAvbpsAM7L
        jgDIxYQAvrpvAL25bQCrpEMAgHkdALOrUQCqoj0Ao5s5AKOaNQCknDgAoJgwAKKZMgCkmzcAopo1AKWd
        OQCooD0AcHRpAG4GDwBtb28AaCByAHNhbQBsZQcAaGVjAGVkCQBFbmEAbGVkAAVTdAB0ZQcAY2JDAGVj
        awBkCFQAYk9yAGVyAgAAAAkAQ2hlAGtCbwAIY2IAemFzAHMETABmdAIAA1RvAAISBQBpZHQAAjwGAGVp
        ZwB0AhEAQ2FwAGlvbgAGJkEAIGlzAFRhYgByZGUAAggAAAlUQwBlY2sAb3gGAGJzegA2BEwAZnQCAANU
        bwACJwUAaWR0AAI+BgBlaWcAdAIRAENhcABpb24ABiYxAHgxNgBDaGUAa2VkAAVTdAAAAAAAAAAAAAAA
        AAAAAAAAAAC9vr/AwcLDxMXGxwAAAACxsrO0tba3uLm1tLq7vACio6SlpqeoqaqrrK2ur7AAlZaXmJma
        mwEBnJ2emJ+goYmKi4yMjY6BgY+QkZKTlAB6e3x9fn+AgYGCg4SFhoeIbW5vcHFycwEBdHV2d3Z4eT9e
        X2BhYmNkZWZnaGlqa2xPQlFSU1RVVldYRVlaW1xdQUJDREVGR0hJSktMTU5PUDIzNDU2Nzg5Ojs8PTQ+
        P0AjJCUmJygpKissLS4vMDEAFBUWFxgZGhscHR4fICEiAAAACgsMDQ4PEA4RERITAAAAAAACAwQFBgYF
        BwgJAAAA//8AAMAHAACAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAB
        AADAAwAA4AcAACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAAAAAAAAAAAAAAAAAAAACRhQgAz8yMANfV
        ngHk5LkAubRfAIZ5AAB1ZwAAdmgAAHZoAAB2aAAAdmgAAHZoAAB2aAAAdmgAAHZoAAB2aAAAdmgAAHRk
        AACVihEAtKxRALKqTgickx4A19ebAKOaLwCFeAAAzcmHA9jWoQDe3awQtrFZc4yAAHB9cABzf3EAc35x
        AHN+cQBzfnEAc4BzAHN/cgBzfnEAc35xAHN+cQBzf3EAc3xuAHCajxpzsalMN7KqTgCmnTQAx8R5Aop8
        AACAcgACtrBZANfWnw2ro0HPp585/7KrUf+zrVb/s61V/7StVv+0rVb/tK5X/7GrUv+zrVT/tK5X/7St
        Vv+0rVb/s61V/7OsVv+2sFr/opkx8KifPLrf3LcP2tqgAH1sAAGWihIIkocKJZSID9CrpET/wLx09sK+
        ePnEwXv5xMF7+cTBe/nEwXz5wr91+dHOkfnHxIP5wb51+cTBe/nEwXr5xMF7+cTBe/nBvXX4v7x0/6yl
        Rv+mnjfPrqdII66oSQSUiA0BkYUNeqefOv++uW32uLRh/7izYf64s2H/uLNg/7m0Yv+1sFr/xMB4//v6
        8P/t7Nj/u7dn/7i0ZP+6tmb/t7Jf/7izYf64s2H/ubRi/by3afWnnzr/m5EndaCXNQCDdwaAnpQn9Ley
        Xf22sVz+trFc/reyXf+3sl3/t7Nf/7OuVv++uW3/9vXq////////////6ejD/7exWP+0r1n/t7Ne/7ay
        Xf+3sl3/trFc/ri0YP6wqk/7pZw19MC9axd6awCKn5Uo/7SuVf+wqUz/satP/7GrT/+xq1D/sapP/7Ks
        Tv/n5cT///////39+v/8/Pv//////93bqv+tpkf/satR/7GqT/+xq0//sapP/7CqTf+zrVP8m5Ij/2ZW
        ABmDdQCHnZMj/q+oSv+spET+raVF/62lRf+tpUb/q6NC/7OsT//w7tT//v7+//7++//8/Pr//v79/9nW
        rf+nnjj/rqZI/62lRv+tpUX/raVG/6ykQ/6wqU39lYsa/k47Ahh8bQCInJMe/62lQf+qojr/q6M8/6uj
        PP+rozz/rKQ//6SdMv/b2LD///////z8+v/9/P3//////8zHhP+kmy7/rKQ//6ujPP+rozz/q6M8/6qi
        O/+up0L9lIkW/11MABmDdACImY8Y/6SbMP+imSz/o5ot/6KaLf+jmi3/pZwx/5qQGv/RzJb//v7+//z8
        +f/+/v7//f32/7+4Yf+elCP/pJsv/6KaLf+jmi3/o5ot/6KZK/+lnTH9kYYR/2NTABmGeACIl4wX/6CX
        KP+flSf/n5Yn/6CWJ/+flif/oZgr/5iNGP/JxXb///////z8+//+/v7/9fXo/66nSP+ckiH/n5Yo/5+W
        Jv+flSf/n5Um/5+VJv+hlyn9kYcR/2JSABmLfgGIk4gN/52TH/+YjRT/mpAa/5iNFf+Zjhj/mo8Z/5OI
        DP+0rVD/+fr0////////////7+7e/5uRHf+ajxf/m5Eb/5uQGv+akBj/nJIc/5mOFf+elCD9jYIH/3Bi
        ABl9cQCIjIEE/5aLD/+WixT/nJIb/56UG/+elBv/n5Uc/5ySFf+noDj/7+7X//n56//6+u3/4+C6/5iO
        EP+XjBL/k4gM/5aLEP+Vig7/lYoP/5SJDf+Wiw/9jIAF/3RnABl9bwCImI0T/6igKf+ooC7/rqc1/7Gq
        Nv+xqjb/sas3/7GqNf+wqjr/4uGn//Dwwv/u7sD/0s+E/66nMf+ooCv/oJcg/5OHDv+OggP/kIQH/4+D
        Bv+QhAf9in4C/3tvABmEdgCIopgg/7StOv+wqTP/sKkz/6+oM/+vqDP/r6gz/6+pNf+royn/4N6h/+fn
        tv/r673/yMV6/62lLP+xqzf/sao1/6ykMf+WixH/j4ME/5GFCP+RhQf9i38D/3puABl8bQCInZMa/7Gr
        N/+upzH/r6gz/7CpNP+vqDP/sKk0/6+oMv+qoyf/ysZ6/+DfqP/f3ab/urRe/6qjKP+vqDP/rqcy/7Gq
        NP+spTP/lIkQ/4yAA/+RhQj9i38D/3puABl9bgCInZMb/7GrN/+upzL/r6g0/6+oM/+vqTX/raYu/7iy
        Sv/U0Iv/4eCo//Hxxv/q6rn/4N6k/8nFef+tpjb/r6gz/66nMv+xqjf/oJci/4t/Av+MgAT9i38D/3tv
        ARl/cAKInpQb/7CrN/+upzL/r6gz/6+oNP+upjH/rKU2/9vaof/t7cH/6ei1//Dwxf/w8cX/5OKs//T1
        zv/JxHb/qaIo/66nNP+vqDP/q6Qx/5KGDP6FeQD9hnkA/IN2ABhuXgCFmI4V/LCqOf+spTH+raY0/62m
        Mv+rozT/1NGT//Hxyf/k4q3/yMR8/8/Mif/Oy4j/0c6K/+zrvP/t7MD/ysRx/6ukMP+spTP/r6o4/5CG
        DP+EeAH8lYsY/7OsShq7tWGUpJsz/6afK/2upzb/rKU0/6qiLv63sU3/0c6F/7iyWf+rpDj/q6Qx/6uj
        Mf+rozH/q6Qx/7CpQf+/u2f/y8d8/7GrQ/+qoy/+r6k5/5CFC/yIfAD7p540z7q2YhDBvW8wp544oJ+W
        I/+vqDn3raY0/qukMv6rpDH/p6Ap/6qjLv+spTL/rKUz/62lNP+tpjT/rKUz/6ykMf+poiz/qKEq/6uk
        Mf6spTH/q6U1/I2BCfOakSH/s61SW7CpTACJfAAAkocOAJeMG5SbkRz/qaIw/K+oOf+tpzT/rqg2/66n
        Nf+tpzT/rac0/62nNP+tpzT/rac0/62nNP+upzX/rqc2/62mM/+wqT3+pJsq/6SaM/+5s2CTsqxTC6uk
        RAWAcgABxL9xAdrYoADKxXmSsqtN/52UHvunnzD/p58x/6efMf+nnzH/p58x/6efMf+nnzH/p58x/6ef
        Mf+nnzH/p58x/6aeLvyjmTD+qqE/wqyjQXHHwn8AvrhpALm0ZACVihEA9/bOA///8wkAAAAAzcl+kX1u
        AI2eky+RnZMskZ2TLJGdkyyRnZMskZ2TLJGdkyyRnZMskZ2TLJGdkyyRnZMskZqQKIyMfwCRtK1UKrKq
        UQCNgQAOwLtwAaukQgD///8A8AAfAOAABwDAAAMAgAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAA
        AQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAIAAAQDAAAMA4AAHAPAAHwAoAAAAEAAAACAA
        AAABACAAAAAAAEAEAAAAAAAAAAAAAAAAAAAAAAAA+v3iAGJOHAaglSYAqqI+ALizYQC2sFoAt7FdAK+o
        SwCyq1AAt7FcALavWQC6tGIAp587ALavXwAmJzsGf3IAAL64aQiTh0UAs6tRe6qiPdKjmznOo5o10qSc
        ONKgmDDSopky0qSbN9KimjXRpZ050aigPcXU0KFOkI+NAIZ6AAOflisAhXcKfaukRP++um7/wb10/8K+
        df+9umz/zsuO/8jFhP++um//wr51/8G9dP+9uW3/q6RD/4B5HXyakB8ArKVJaq2mP/O6t2b9t7Jf+7ey
        Xv20r1f8wLxz/Pr58vzy8uD8vLdk/LWwXPy2sV39t7Ng+rq2ZfuxqkL1sapLLId5ANOqokL/sqtR/rCp
        Tf+wqU7+sapN/+3s0////////////+Phvf+tpUX/sapQ/rCpTf+yrFL7pp47/4BzBliPgwO+pZww/auj
        Pf+qojv+qqI7/6mhOf/q6M///v79//7+/f/d26//pZwv/6yjPv+qoTv+raQ//KGXK/1xYgBPjoECxJ+V
        Jv+jmi7/opkt/6ScMP+ckh7/29ir//7+/f/+/v3/y8eD/52TIP+jmy//opkr/6SbLvyckiH/emwAUo2A
        AsSYjRj/mpAb/5mOGf+akBz/k4cL/8rFgP///////////7StWf+Vig//nJMf/5uRHf+ckx/8l4wW/3xv
        AFKFeQDElosQ/52THf+imiP/pZwl/6CWGf+7tmD/+Pjj//Tz2v+wqED/l4wO/5OIDP+Shgn/lIgM/JCE
        CP+BdQBSjoIFxKmhK/+xqjf/sKo1/7GrN/+vqDH/uLJH/+rpt//f3aT/sqs7/6+oMv+mnSj/kYUJ/5CD
        BvyNgQX/g3cAUoyAAsSpoSv/sKk1/66nMv+vqDL/rKQt/8O9Y//j4a3/396o/7mzU/+royv/tK06/6Wc
        J/6OgQT8joIF/oR4AVGIegDAp58q/bCpNv+vqDT+qaIq/8vHeP/t7cH/7u7C/+3sv//r67//vrlc/6qj
        Kf+wqTb/lIkQ+4V5AP6IfABTlIod1KaeLv+vqDf9qqIt/7mzUv7c2qL/yMNz/7y2Xf+9uF7/zsyC/9nW
        mf6zrET+r6g2/pSKEfmOgw3+sKlITaykRFickyHcp58r/6ymM/ywqjv/rKU0/6igKv+qoy3/qqIs/6ih
        Kv+tpjb/r6g5/62nNPySiA7/n5YoyKKaNASjmS0AnpMoHaukP9Crozb8qKEu/KqjM/+spDX/q6Q0/6uk
        Nf+spDX/qaIx/qmiMf2ooDT3tq9avqKYRx6hmCoA9PPLFOTjrwDi4aw8pJoyyZyRIsOjmjHIoJctyKKY
        LsiimC7IoJctyKKZMcadlCfHn5QpsAAAAAD+/v8AvbdlAf//AADABwAAgAEAAAABAAAAAAAAAAEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAwAMAAOAHAAA=
</value>
  </data>
</root>