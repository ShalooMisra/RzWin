#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SensibleDAL.dbml
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ComponentIQ")]
	public partial class gcatDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountManager(AccountManager instance);
    partial void UpdateAccountManager(AccountManager instance);
    partial void DeleteAccountManager(AccountManager instance);
    partial void InsertXRF(XRF instance);
    partial void UpdateXRF(XRF instance);
    partial void DeleteXRF(XRF instance);
    partial void InsertCustomerPart(CustomerPart instance);
    partial void UpdateCustomerPart(CustomerPart instance);
    partial void DeleteCustomerPart(CustomerPart instance);
    partial void InsertDateCode(DateCode instance);
    partial void UpdateDateCode(DateCode instance);
    partial void DeleteDateCode(DateCode instance);
    partial void InsertDecapsulation(Decapsulation instance);
    partial void UpdateDecapsulation(Decapsulation instance);
    partial void DeleteDecapsulation(Decapsulation instance);
    partial void InsertEPROM(EPROM instance);
    partial void UpdateEPROM(EPROM instance);
    partial void DeleteEPROM(EPROM instance);
    partial void InsertExtendedTesting(ExtendedTesting instance);
    partial void UpdateExtendedTesting(ExtendedTesting instance);
    partial void DeleteExtendedTesting(ExtendedTesting instance);
    partial void InsertHeatedSolvent(HeatedSolvent instance);
    partial void UpdateHeatedSolvent(HeatedSolvent instance);
    partial void DeleteHeatedSolvent(HeatedSolvent instance);
    partial void InsertManufacturerPart(ManufacturerPart instance);
    partial void UpdateManufacturerPart(ManufacturerPart instance);
    partial void DeleteManufacturerPart(ManufacturerPart instance);
    partial void InsertMarkingPermanency(MarkingPermanency instance);
    partial void UpdateMarkingPermanency(MarkingPermanency instance);
    partial void DeleteMarkingPermanency(MarkingPermanency instance);
    partial void InsertSentryVI(SentryVI instance);
    partial void UpdateSentryVI(SentryVI instance);
    partial void DeleteSentryVI(SentryVI instance);
    partial void InsertSolderability(Solderability instance);
    partial void UpdateSolderability(Solderability instance);
    partial void DeleteSolderability(Solderability instance);
    partial void InsertValidationReport(ValidationReport instance);
    partial void UpdateValidationReport(ValidationReport instance);
    partial void DeleteValidationReport(ValidationReport instance);
    partial void InsertXRay(XRay instance);
    partial void UpdateXRay(XRay instance);
    partial void DeleteXRay(XRay instance);
    partial void InsertSummary_new(Summary_new instance);
    partial void UpdateSummary_new(Summary_new instance);
    partial void DeleteSummary_new(Summary_new instance);
    partial void InsertMoistureBaking(MoistureBaking instance);
    partial void UpdateMoistureBaking(MoistureBaking instance);
    partial void DeleteMoistureBaking(MoistureBaking instance);
    partial void InsertBasicElectrical(BasicElectrical instance);
    partial void UpdateBasicElectrical(BasicElectrical instance);
    partial void DeleteBasicElectrical(BasicElectrical instance);
    #endregion
		
		public gcatDataContext() : 
				base(global::SensibleDAL.Properties.Settings.Default.ComponentIQConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public gcatDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public gcatDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public gcatDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public gcatDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountManager> AccountManagers
		{
			get
			{
				return this.GetTable<AccountManager>();
			}
		}
		
		public System.Data.Linq.Table<XRF> XRFs
		{
			get
			{
				return this.GetTable<XRF>();
			}
		}
		
		public System.Data.Linq.Table<CustomerPart> CustomerParts
		{
			get
			{
				return this.GetTable<CustomerPart>();
			}
		}
		
		public System.Data.Linq.Table<DateCode> DateCodes
		{
			get
			{
				return this.GetTable<DateCode>();
			}
		}
		
		public System.Data.Linq.Table<Decapsulation> Decapsulations
		{
			get
			{
				return this.GetTable<Decapsulation>();
			}
		}
		
		public System.Data.Linq.Table<EPROM> EPROMs
		{
			get
			{
				return this.GetTable<EPROM>();
			}
		}
		
		public System.Data.Linq.Table<ExtendedTesting> ExtendedTestings
		{
			get
			{
				return this.GetTable<ExtendedTesting>();
			}
		}
		
		public System.Data.Linq.Table<HeatedSolvent> HeatedSolvents
		{
			get
			{
				return this.GetTable<HeatedSolvent>();
			}
		}
		
		public System.Data.Linq.Table<ManufacturerPart> ManufacturerParts
		{
			get
			{
				return this.GetTable<ManufacturerPart>();
			}
		}
		
		public System.Data.Linq.Table<MarkingPermanency> MarkingPermanencies
		{
			get
			{
				return this.GetTable<MarkingPermanency>();
			}
		}
		
		public System.Data.Linq.Table<SentryVI> SentryVIs
		{
			get
			{
				return this.GetTable<SentryVI>();
			}
		}
		
		public System.Data.Linq.Table<Solderability> Solderabilities
		{
			get
			{
				return this.GetTable<Solderability>();
			}
		}
		
		public System.Data.Linq.Table<ValidationReport> ValidationReports
		{
			get
			{
				return this.GetTable<ValidationReport>();
			}
		}
		
		public System.Data.Linq.Table<XRay> XRays
		{
			get
			{
				return this.GetTable<XRay>();
			}
		}
		
		public System.Data.Linq.Table<Summary_new> Summary_news
		{
			get
			{
				return this.GetTable<Summary_new>();
			}
		}
		
		public System.Data.Linq.Table<MoistureBaking> MoistureBakings
		{
			get
			{
				return this.GetTable<MoistureBaking>();
			}
		}
		
		public System.Data.Linq.Table<BasicElectrical> BasicElectricals
		{
			get
			{
				return this.GetTable<BasicElectrical>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountManager")]
	public partial class AccountManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountManagerID;
		
		private string _FullName;
		
		private System.Data.Linq.Binary _upsize_ts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountManagerIDChanging(int value);
    partial void OnAccountManagerIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    #endregion
		
		public AccountManager()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountManagerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int AccountManagerID
		{
			get
			{
				return this._AccountManagerID;
			}
			set
			{
				if ((this._AccountManagerID != value))
				{
					this.OnAccountManagerIDChanging(value);
					this.SendPropertyChanging();
					this._AccountManagerID = value;
					this.SendPropertyChanged("AccountManagerID");
					this.OnAccountManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XRF")]
	public partial class XRF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XRFID;
		
		private System.Nullable<short> _XRFSampleQty;
		
		private string _PackageMountTypeXRF;
		
		private System.Nullable<bool> _XRFServiceProviderRequired;
		
		private string _XRFSPRequiredComments;
		
		private System.Nullable<short> _LeadMaterialsMatch;
		
		private string _LeadMaterialsMatchComments;
		
		private System.Nullable<short> _ForeignMaterials;
		
		private string _ForeignMaterialsComments;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXRFIDChanging(int value);
    partial void OnXRFIDChanged();
    partial void OnXRFSampleQtyChanging(System.Nullable<short> value);
    partial void OnXRFSampleQtyChanged();
    partial void OnPackageMountTypeXRFChanging(string value);
    partial void OnPackageMountTypeXRFChanged();
    partial void OnXRFServiceProviderRequiredChanging(System.Nullable<bool> value);
    partial void OnXRFServiceProviderRequiredChanged();
    partial void OnXRFSPRequiredCommentsChanging(string value);
    partial void OnXRFSPRequiredCommentsChanged();
    partial void OnLeadMaterialsMatchChanging(System.Nullable<short> value);
    partial void OnLeadMaterialsMatchChanged();
    partial void OnLeadMaterialsMatchCommentsChanging(string value);
    partial void OnLeadMaterialsMatchCommentsChanged();
    partial void OnForeignMaterialsChanging(System.Nullable<short> value);
    partial void OnForeignMaterialsChanged();
    partial void OnForeignMaterialsCommentsChanging(string value);
    partial void OnForeignMaterialsCommentsChanged();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    #endregion
		
		public XRF()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int XRFID
		{
			get
			{
				return this._XRFID;
			}
			set
			{
				if ((this._XRFID != value))
				{
					this.OnXRFIDChanging(value);
					this.SendPropertyChanging();
					this._XRFID = value;
					this.SendPropertyChanged("XRFID");
					this.OnXRFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFSampleQty", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> XRFSampleQty
		{
			get
			{
				return this._XRFSampleQty;
			}
			set
			{
				if ((this._XRFSampleQty != value))
				{
					this.OnXRFSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._XRFSampleQty = value;
					this.SendPropertyChanged("XRFSampleQty");
					this.OnXRFSampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageMountTypeXRF", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string PackageMountTypeXRF
		{
			get
			{
				return this._PackageMountTypeXRF;
			}
			set
			{
				if ((this._PackageMountTypeXRF != value))
				{
					this.OnPackageMountTypeXRFChanging(value);
					this.SendPropertyChanging();
					this._PackageMountTypeXRF = value;
					this.SendPropertyChanged("PackageMountTypeXRF");
					this.OnPackageMountTypeXRFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFServiceProviderRequired", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> XRFServiceProviderRequired
		{
			get
			{
				return this._XRFServiceProviderRequired;
			}
			set
			{
				if ((this._XRFServiceProviderRequired != value))
				{
					this.OnXRFServiceProviderRequiredChanging(value);
					this.SendPropertyChanging();
					this._XRFServiceProviderRequired = value;
					this.SendPropertyChanged("XRFServiceProviderRequired");
					this.OnXRFServiceProviderRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFSPRequiredComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string XRFSPRequiredComments
		{
			get
			{
				return this._XRFSPRequiredComments;
			}
			set
			{
				if ((this._XRFSPRequiredComments != value))
				{
					this.OnXRFSPRequiredCommentsChanging(value);
					this.SendPropertyChanging();
					this._XRFSPRequiredComments = value;
					this.SendPropertyChanged("XRFSPRequiredComments");
					this.OnXRFSPRequiredCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadMaterialsMatch", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> LeadMaterialsMatch
		{
			get
			{
				return this._LeadMaterialsMatch;
			}
			set
			{
				if ((this._LeadMaterialsMatch != value))
				{
					this.OnLeadMaterialsMatchChanging(value);
					this.SendPropertyChanging();
					this._LeadMaterialsMatch = value;
					this.SendPropertyChanged("LeadMaterialsMatch");
					this.OnLeadMaterialsMatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadMaterialsMatchComments", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string LeadMaterialsMatchComments
		{
			get
			{
				return this._LeadMaterialsMatchComments;
			}
			set
			{
				if ((this._LeadMaterialsMatchComments != value))
				{
					this.OnLeadMaterialsMatchCommentsChanging(value);
					this.SendPropertyChanging();
					this._LeadMaterialsMatchComments = value;
					this.SendPropertyChanged("LeadMaterialsMatchComments");
					this.OnLeadMaterialsMatchCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignMaterials", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ForeignMaterials
		{
			get
			{
				return this._ForeignMaterials;
			}
			set
			{
				if ((this._ForeignMaterials != value))
				{
					this.OnForeignMaterialsChanging(value);
					this.SendPropertyChanging();
					this._ForeignMaterials = value;
					this.SendPropertyChanged("ForeignMaterials");
					this.OnForeignMaterialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignMaterialsComments", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ForeignMaterialsComments
		{
			get
			{
				return this._ForeignMaterialsComments;
			}
			set
			{
				if ((this._ForeignMaterialsComments != value))
				{
					this.OnForeignMaterialsCommentsChanging(value);
					this.SendPropertyChanging();
					this._ForeignMaterialsComments = value;
					this.SendPropertyChanged("ForeignMaterialsComments");
					this.OnForeignMaterialsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_XRF", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.XRFs.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.XRFs.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerPart")]
	public partial class CustomerPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CPN;
		
		private string _Customer;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private int _CPNID;
		
		private System.Nullable<int> _MPNID;
		
		private EntitySet<ValidationReport> _ValidationReports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCPNChanging(string value);
    partial void OnCPNChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    partial void OnCPNIDChanging(int value);
    partial void OnCPNIDChanged();
    partial void OnMPNIDChanging(System.Nullable<int> value);
    partial void OnMPNIDChanged();
    #endregion
		
		public CustomerPart()
		{
			this._ValidationReports = new EntitySet<ValidationReport>(new Action<ValidationReport>(this.attach_ValidationReports), new Action<ValidationReport>(this.detach_ValidationReports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPN", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CPN
		{
			get
			{
				return this._CPN;
			}
			set
			{
				if ((this._CPN != value))
				{
					this.OnCPNChanging(value);
					this.SendPropertyChanging();
					this._CPN = value;
					this.SendPropertyChanged("CPN");
					this.OnCPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPNID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int CPNID
		{
			get
			{
				return this._CPNID;
			}
			set
			{
				if ((this._CPNID != value))
				{
					this.OnCPNIDChanging(value);
					this.SendPropertyChanging();
					this._CPNID = value;
					this.SendPropertyChanged("CPNID");
					this.OnCPNIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPNID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MPNID
		{
			get
			{
				return this._MPNID;
			}
			set
			{
				if ((this._MPNID != value))
				{
					this.OnMPNIDChanging(value);
					this.SendPropertyChanging();
					this._MPNID = value;
					this.SendPropertyChanged("MPNID");
					this.OnMPNIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerPart_ValidationReport", Storage="_ValidationReports", ThisKey="CPNID", OtherKey="CPNID")]
		public EntitySet<ValidationReport> ValidationReports
		{
			get
			{
				return this._ValidationReports;
			}
			set
			{
				this._ValidationReports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ValidationReports(ValidationReport entity)
		{
			this.SendPropertyChanging();
			entity.CustomerPart = this;
		}
		
		private void detach_ValidationReports(ValidationReport entity)
		{
			this.SendPropertyChanging();
			entity.CustomerPart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DateCode")]
	public partial class DateCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DateCodeID;
		
		private string _DateCodeA;
		
		private System.Nullable<int> _QtyA;
		
		private string _imgDateCodeA;
		
		private string _DateCodeB;
		
		private System.Nullable<int> _QtyB;
		
		private string _imgDateCodeB;
		
		private System.Nullable<int> _ValidationReportID;
		
		private string _DateCodeC;
		
		private System.Nullable<int> _QtyC;
		
		private string _imgDateCodeC;
		
		private string _DateCodeD;
		
		private System.Nullable<int> _QtyD;
		
		private string _imgDateCodeD;
		
		private string _DateCodeE;
		
		private System.Nullable<int> _QtyE;
		
		private string _imgDateCodeE;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateCodeIDChanging(int value);
    partial void OnDateCodeIDChanged();
    partial void OnDateCodeAChanging(string value);
    partial void OnDateCodeAChanged();
    partial void OnQtyAChanging(System.Nullable<int> value);
    partial void OnQtyAChanged();
    partial void OnimgDateCodeAChanging(string value);
    partial void OnimgDateCodeAChanged();
    partial void OnDateCodeBChanging(string value);
    partial void OnDateCodeBChanged();
    partial void OnQtyBChanging(System.Nullable<int> value);
    partial void OnQtyBChanged();
    partial void OnimgDateCodeBChanging(string value);
    partial void OnimgDateCodeBChanged();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void OnDateCodeCChanging(string value);
    partial void OnDateCodeCChanged();
    partial void OnQtyCChanging(System.Nullable<int> value);
    partial void OnQtyCChanged();
    partial void OnimgDateCodeCChanging(string value);
    partial void OnimgDateCodeCChanged();
    partial void OnDateCodeDChanging(string value);
    partial void OnDateCodeDChanged();
    partial void OnQtyDChanging(System.Nullable<int> value);
    partial void OnQtyDChanged();
    partial void OnimgDateCodeDChanging(string value);
    partial void OnimgDateCodeDChanged();
    partial void OnDateCodeEChanging(string value);
    partial void OnDateCodeEChanged();
    partial void OnQtyEChanging(System.Nullable<int> value);
    partial void OnQtyEChanged();
    partial void OnimgDateCodeEChanging(string value);
    partial void OnimgDateCodeEChanged();
    #endregion
		
		public DateCode()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DateCodeID
		{
			get
			{
				return this._DateCodeID;
			}
			set
			{
				if ((this._DateCodeID != value))
				{
					this.OnDateCodeIDChanging(value);
					this.SendPropertyChanging();
					this._DateCodeID = value;
					this.SendPropertyChanged("DateCodeID");
					this.OnDateCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCodeA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateCodeA
		{
			get
			{
				return this._DateCodeA;
			}
			set
			{
				if ((this._DateCodeA != value))
				{
					this.OnDateCodeAChanging(value);
					this.SendPropertyChanging();
					this._DateCodeA = value;
					this.SendPropertyChanged("DateCodeA");
					this.OnDateCodeAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyA", DbType="Int")]
		public System.Nullable<int> QtyA
		{
			get
			{
				return this._QtyA;
			}
			set
			{
				if ((this._QtyA != value))
				{
					this.OnQtyAChanging(value);
					this.SendPropertyChanging();
					this._QtyA = value;
					this.SendPropertyChanged("QtyA");
					this.OnQtyAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imgDateCodeA", DbType="VarChar(MAX)")]
		public string imgDateCodeA
		{
			get
			{
				return this._imgDateCodeA;
			}
			set
			{
				if ((this._imgDateCodeA != value))
				{
					this.OnimgDateCodeAChanging(value);
					this.SendPropertyChanging();
					this._imgDateCodeA = value;
					this.SendPropertyChanged("imgDateCodeA");
					this.OnimgDateCodeAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCodeB", DbType="VarChar(50)")]
		public string DateCodeB
		{
			get
			{
				return this._DateCodeB;
			}
			set
			{
				if ((this._DateCodeB != value))
				{
					this.OnDateCodeBChanging(value);
					this.SendPropertyChanging();
					this._DateCodeB = value;
					this.SendPropertyChanged("DateCodeB");
					this.OnDateCodeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyB", DbType="Int")]
		public System.Nullable<int> QtyB
		{
			get
			{
				return this._QtyB;
			}
			set
			{
				if ((this._QtyB != value))
				{
					this.OnQtyBChanging(value);
					this.SendPropertyChanging();
					this._QtyB = value;
					this.SendPropertyChanged("QtyB");
					this.OnQtyBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imgDateCodeB", DbType="VarChar(MAX)")]
		public string imgDateCodeB
		{
			get
			{
				return this._imgDateCodeB;
			}
			set
			{
				if ((this._imgDateCodeB != value))
				{
					this.OnimgDateCodeBChanging(value);
					this.SendPropertyChanging();
					this._imgDateCodeB = value;
					this.SendPropertyChanged("imgDateCodeB");
					this.OnimgDateCodeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int")]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCodeC", DbType="VarChar(8)")]
		public string DateCodeC
		{
			get
			{
				return this._DateCodeC;
			}
			set
			{
				if ((this._DateCodeC != value))
				{
					this.OnDateCodeCChanging(value);
					this.SendPropertyChanging();
					this._DateCodeC = value;
					this.SendPropertyChanged("DateCodeC");
					this.OnDateCodeCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyC", DbType="Int")]
		public System.Nullable<int> QtyC
		{
			get
			{
				return this._QtyC;
			}
			set
			{
				if ((this._QtyC != value))
				{
					this.OnQtyCChanging(value);
					this.SendPropertyChanging();
					this._QtyC = value;
					this.SendPropertyChanged("QtyC");
					this.OnQtyCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imgDateCodeC", DbType="VarChar(MAX)")]
		public string imgDateCodeC
		{
			get
			{
				return this._imgDateCodeC;
			}
			set
			{
				if ((this._imgDateCodeC != value))
				{
					this.OnimgDateCodeCChanging(value);
					this.SendPropertyChanging();
					this._imgDateCodeC = value;
					this.SendPropertyChanged("imgDateCodeC");
					this.OnimgDateCodeCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCodeD", DbType="VarChar(8)")]
		public string DateCodeD
		{
			get
			{
				return this._DateCodeD;
			}
			set
			{
				if ((this._DateCodeD != value))
				{
					this.OnDateCodeDChanging(value);
					this.SendPropertyChanging();
					this._DateCodeD = value;
					this.SendPropertyChanged("DateCodeD");
					this.OnDateCodeDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyD", DbType="Int")]
		public System.Nullable<int> QtyD
		{
			get
			{
				return this._QtyD;
			}
			set
			{
				if ((this._QtyD != value))
				{
					this.OnQtyDChanging(value);
					this.SendPropertyChanging();
					this._QtyD = value;
					this.SendPropertyChanged("QtyD");
					this.OnQtyDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imgDateCodeD", DbType="VarChar(MAX)")]
		public string imgDateCodeD
		{
			get
			{
				return this._imgDateCodeD;
			}
			set
			{
				if ((this._imgDateCodeD != value))
				{
					this.OnimgDateCodeDChanging(value);
					this.SendPropertyChanging();
					this._imgDateCodeD = value;
					this.SendPropertyChanged("imgDateCodeD");
					this.OnimgDateCodeDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCodeE", DbType="VarChar(8)")]
		public string DateCodeE
		{
			get
			{
				return this._DateCodeE;
			}
			set
			{
				if ((this._DateCodeE != value))
				{
					this.OnDateCodeEChanging(value);
					this.SendPropertyChanging();
					this._DateCodeE = value;
					this.SendPropertyChanged("DateCodeE");
					this.OnDateCodeEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyE", DbType="Int")]
		public System.Nullable<int> QtyE
		{
			get
			{
				return this._QtyE;
			}
			set
			{
				if ((this._QtyE != value))
				{
					this.OnQtyEChanging(value);
					this.SendPropertyChanging();
					this._QtyE = value;
					this.SendPropertyChanged("QtyE");
					this.OnQtyEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imgDateCodeE", DbType="VarChar(MAX)")]
		public string imgDateCodeE
		{
			get
			{
				return this._imgDateCodeE;
			}
			set
			{
				if ((this._imgDateCodeE != value))
				{
					this.OnimgDateCodeEChanging(value);
					this.SendPropertyChanging();
					this._imgDateCodeE = value;
					this.SendPropertyChanged("imgDateCodeE");
					this.OnimgDateCodeEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_DateCode", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.DateCodes.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.DateCodes.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Decapsulation")]
	public partial class Decapsulation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeCapID;
		
		private System.Nullable<int> _DeCap_SampleQty;
		
		private System.Nullable<short> _MFGLogoPass;
		
		private string _MFGLogoComments;
		
		private System.Nullable<short> _LogoMatchPass;
		
		private string _LogoMatchComments;
		
		private System.Nullable<short> _DiePNMatchPass;
		
		private string _DiePNMatchComments;
		
		private System.Nullable<short> _DieBondWiresPass;
		
		private string _DieBondWiresComments;
		
		private string _DeCapImage1;
		
		private string _DeCapImage2;
		
		private string _DeCapImage3;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private string _DeCapImage4;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeCapIDChanging(int value);
    partial void OnDeCapIDChanged();
    partial void OnDeCap_SampleQtyChanging(System.Nullable<int> value);
    partial void OnDeCap_SampleQtyChanged();
    partial void OnMFGLogoPassChanging(System.Nullable<short> value);
    partial void OnMFGLogoPassChanged();
    partial void OnMFGLogoCommentsChanging(string value);
    partial void OnMFGLogoCommentsChanged();
    partial void OnLogoMatchPassChanging(System.Nullable<short> value);
    partial void OnLogoMatchPassChanged();
    partial void OnLogoMatchCommentsChanging(string value);
    partial void OnLogoMatchCommentsChanged();
    partial void OnDiePNMatchPassChanging(System.Nullable<short> value);
    partial void OnDiePNMatchPassChanged();
    partial void OnDiePNMatchCommentsChanging(string value);
    partial void OnDiePNMatchCommentsChanged();
    partial void OnDieBondWiresPassChanging(System.Nullable<short> value);
    partial void OnDieBondWiresPassChanged();
    partial void OnDieBondWiresCommentsChanging(string value);
    partial void OnDieBondWiresCommentsChanged();
    partial void OnDeCapImage1Changing(string value);
    partial void OnDeCapImage1Changed();
    partial void OnDeCapImage2Changing(string value);
    partial void OnDeCapImage2Changed();
    partial void OnDeCapImage3Changing(string value);
    partial void OnDeCapImage3Changed();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    partial void OnDeCapImage4Changing(string value);
    partial void OnDeCapImage4Changed();
    #endregion
		
		public Decapsulation()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeCapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DeCapID
		{
			get
			{
				return this._DeCapID;
			}
			set
			{
				if ((this._DeCapID != value))
				{
					this.OnDeCapIDChanging(value);
					this.SendPropertyChanging();
					this._DeCapID = value;
					this.SendPropertyChanged("DeCapID");
					this.OnDeCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeCap_SampleQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DeCap_SampleQty
		{
			get
			{
				return this._DeCap_SampleQty;
			}
			set
			{
				if ((this._DeCap_SampleQty != value))
				{
					this.OnDeCap_SampleQtyChanging(value);
					this.SendPropertyChanging();
					this._DeCap_SampleQty = value;
					this.SendPropertyChanged("DeCap_SampleQty");
					this.OnDeCap_SampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFGLogoPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> MFGLogoPass
		{
			get
			{
				return this._MFGLogoPass;
			}
			set
			{
				if ((this._MFGLogoPass != value))
				{
					this.OnMFGLogoPassChanging(value);
					this.SendPropertyChanging();
					this._MFGLogoPass = value;
					this.SendPropertyChanged("MFGLogoPass");
					this.OnMFGLogoPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFGLogoComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string MFGLogoComments
		{
			get
			{
				return this._MFGLogoComments;
			}
			set
			{
				if ((this._MFGLogoComments != value))
				{
					this.OnMFGLogoCommentsChanging(value);
					this.SendPropertyChanging();
					this._MFGLogoComments = value;
					this.SendPropertyChanged("MFGLogoComments");
					this.OnMFGLogoCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoMatchPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> LogoMatchPass
		{
			get
			{
				return this._LogoMatchPass;
			}
			set
			{
				if ((this._LogoMatchPass != value))
				{
					this.OnLogoMatchPassChanging(value);
					this.SendPropertyChanging();
					this._LogoMatchPass = value;
					this.SendPropertyChanged("LogoMatchPass");
					this.OnLogoMatchPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoMatchComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string LogoMatchComments
		{
			get
			{
				return this._LogoMatchComments;
			}
			set
			{
				if ((this._LogoMatchComments != value))
				{
					this.OnLogoMatchCommentsChanging(value);
					this.SendPropertyChanging();
					this._LogoMatchComments = value;
					this.SendPropertyChanged("LogoMatchComments");
					this.OnLogoMatchCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiePNMatchPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DiePNMatchPass
		{
			get
			{
				return this._DiePNMatchPass;
			}
			set
			{
				if ((this._DiePNMatchPass != value))
				{
					this.OnDiePNMatchPassChanging(value);
					this.SendPropertyChanging();
					this._DiePNMatchPass = value;
					this.SendPropertyChanged("DiePNMatchPass");
					this.OnDiePNMatchPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiePNMatchComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string DiePNMatchComments
		{
			get
			{
				return this._DiePNMatchComments;
			}
			set
			{
				if ((this._DiePNMatchComments != value))
				{
					this.OnDiePNMatchCommentsChanging(value);
					this.SendPropertyChanging();
					this._DiePNMatchComments = value;
					this.SendPropertyChanged("DiePNMatchComments");
					this.OnDiePNMatchCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieBondWiresPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DieBondWiresPass
		{
			get
			{
				return this._DieBondWiresPass;
			}
			set
			{
				if ((this._DieBondWiresPass != value))
				{
					this.OnDieBondWiresPassChanging(value);
					this.SendPropertyChanging();
					this._DieBondWiresPass = value;
					this.SendPropertyChanged("DieBondWiresPass");
					this.OnDieBondWiresPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieBondWiresComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string DieBondWiresComments
		{
			get
			{
				return this._DieBondWiresComments;
			}
			set
			{
				if ((this._DieBondWiresComments != value))
				{
					this.OnDieBondWiresCommentsChanging(value);
					this.SendPropertyChanging();
					this._DieBondWiresComments = value;
					this.SendPropertyChanged("DieBondWiresComments");
					this.OnDieBondWiresCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeCapImage1", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DeCapImage1
		{
			get
			{
				return this._DeCapImage1;
			}
			set
			{
				if ((this._DeCapImage1 != value))
				{
					this.OnDeCapImage1Changing(value);
					this.SendPropertyChanging();
					this._DeCapImage1 = value;
					this.SendPropertyChanged("DeCapImage1");
					this.OnDeCapImage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeCapImage2", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DeCapImage2
		{
			get
			{
				return this._DeCapImage2;
			}
			set
			{
				if ((this._DeCapImage2 != value))
				{
					this.OnDeCapImage2Changing(value);
					this.SendPropertyChanging();
					this._DeCapImage2 = value;
					this.SendPropertyChanged("DeCapImage2");
					this.OnDeCapImage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeCapImage3", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DeCapImage3
		{
			get
			{
				return this._DeCapImage3;
			}
			set
			{
				if ((this._DeCapImage3 != value))
				{
					this.OnDeCapImage3Changing(value);
					this.SendPropertyChanging();
					this._DeCapImage3 = value;
					this.SendPropertyChanged("DeCapImage3");
					this.OnDeCapImage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeCapImage4", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DeCapImage4
		{
			get
			{
				return this._DeCapImage4;
			}
			set
			{
				if ((this._DeCapImage4 != value))
				{
					this.OnDeCapImage4Changing(value);
					this.SendPropertyChanging();
					this._DeCapImage4 = value;
					this.SendPropertyChanged("DeCapImage4");
					this.OnDeCapImage4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_Decapsulation", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.Decapsulations.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.Decapsulations.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EPROM")]
	public partial class EPROM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EPROMID;
		
		private System.Nullable<short> _EPROMSampleQty;
		
		private string _PackageMountTypeEPROM;
		
		private System.Nullable<bool> _EPROMServiceProviderRequired;
		
		private string _EPROMSPRequiredComments;
		
		private System.Nullable<short> _ChecksumAnalysis;
		
		private string _ChecksumComment;
		
		private System.Nullable<short> _ProgrammingRequired;
		
		private string _ProgrammingRequiredComment;
		
		private System.Nullable<short> _VerifyProgramLoad;
		
		private string _ProgramLoadComment;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEPROMIDChanging(int value);
    partial void OnEPROMIDChanged();
    partial void OnEPROMSampleQtyChanging(System.Nullable<short> value);
    partial void OnEPROMSampleQtyChanged();
    partial void OnPackageMountTypeEPROMChanging(string value);
    partial void OnPackageMountTypeEPROMChanged();
    partial void OnEPROMServiceProviderRequiredChanging(System.Nullable<bool> value);
    partial void OnEPROMServiceProviderRequiredChanged();
    partial void OnEPROMSPRequiredCommentsChanging(string value);
    partial void OnEPROMSPRequiredCommentsChanged();
    partial void OnChecksumAnalysisChanging(System.Nullable<short> value);
    partial void OnChecksumAnalysisChanged();
    partial void OnChecksumCommentChanging(string value);
    partial void OnChecksumCommentChanged();
    partial void OnProgrammingRequiredChanging(System.Nullable<short> value);
    partial void OnProgrammingRequiredChanged();
    partial void OnProgrammingRequiredCommentChanging(string value);
    partial void OnProgrammingRequiredCommentChanged();
    partial void OnVerifyProgramLoadChanging(System.Nullable<short> value);
    partial void OnVerifyProgramLoadChanged();
    partial void OnProgramLoadCommentChanging(string value);
    partial void OnProgramLoadCommentChanged();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    #endregion
		
		public EPROM()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EPROMID
		{
			get
			{
				return this._EPROMID;
			}
			set
			{
				if ((this._EPROMID != value))
				{
					this.OnEPROMIDChanging(value);
					this.SendPropertyChanging();
					this._EPROMID = value;
					this.SendPropertyChanged("EPROMID");
					this.OnEPROMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMSampleQty", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> EPROMSampleQty
		{
			get
			{
				return this._EPROMSampleQty;
			}
			set
			{
				if ((this._EPROMSampleQty != value))
				{
					this.OnEPROMSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._EPROMSampleQty = value;
					this.SendPropertyChanged("EPROMSampleQty");
					this.OnEPROMSampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageMountTypeEPROM", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string PackageMountTypeEPROM
		{
			get
			{
				return this._PackageMountTypeEPROM;
			}
			set
			{
				if ((this._PackageMountTypeEPROM != value))
				{
					this.OnPackageMountTypeEPROMChanging(value);
					this.SendPropertyChanging();
					this._PackageMountTypeEPROM = value;
					this.SendPropertyChanged("PackageMountTypeEPROM");
					this.OnPackageMountTypeEPROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMServiceProviderRequired", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> EPROMServiceProviderRequired
		{
			get
			{
				return this._EPROMServiceProviderRequired;
			}
			set
			{
				if ((this._EPROMServiceProviderRequired != value))
				{
					this.OnEPROMServiceProviderRequiredChanging(value);
					this.SendPropertyChanging();
					this._EPROMServiceProviderRequired = value;
					this.SendPropertyChanged("EPROMServiceProviderRequired");
					this.OnEPROMServiceProviderRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMSPRequiredComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string EPROMSPRequiredComments
		{
			get
			{
				return this._EPROMSPRequiredComments;
			}
			set
			{
				if ((this._EPROMSPRequiredComments != value))
				{
					this.OnEPROMSPRequiredCommentsChanging(value);
					this.SendPropertyChanging();
					this._EPROMSPRequiredComments = value;
					this.SendPropertyChanged("EPROMSPRequiredComments");
					this.OnEPROMSPRequiredCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChecksumAnalysis", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ChecksumAnalysis
		{
			get
			{
				return this._ChecksumAnalysis;
			}
			set
			{
				if ((this._ChecksumAnalysis != value))
				{
					this.OnChecksumAnalysisChanging(value);
					this.SendPropertyChanging();
					this._ChecksumAnalysis = value;
					this.SendPropertyChanged("ChecksumAnalysis");
					this.OnChecksumAnalysisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChecksumComment", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ChecksumComment
		{
			get
			{
				return this._ChecksumComment;
			}
			set
			{
				if ((this._ChecksumComment != value))
				{
					this.OnChecksumCommentChanging(value);
					this.SendPropertyChanging();
					this._ChecksumComment = value;
					this.SendPropertyChanged("ChecksumComment");
					this.OnChecksumCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammingRequired", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ProgrammingRequired
		{
			get
			{
				return this._ProgrammingRequired;
			}
			set
			{
				if ((this._ProgrammingRequired != value))
				{
					this.OnProgrammingRequiredChanging(value);
					this.SendPropertyChanging();
					this._ProgrammingRequired = value;
					this.SendPropertyChanged("ProgrammingRequired");
					this.OnProgrammingRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammingRequiredComment", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ProgrammingRequiredComment
		{
			get
			{
				return this._ProgrammingRequiredComment;
			}
			set
			{
				if ((this._ProgrammingRequiredComment != value))
				{
					this.OnProgrammingRequiredCommentChanging(value);
					this.SendPropertyChanging();
					this._ProgrammingRequiredComment = value;
					this.SendPropertyChanged("ProgrammingRequiredComment");
					this.OnProgrammingRequiredCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyProgramLoad", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> VerifyProgramLoad
		{
			get
			{
				return this._VerifyProgramLoad;
			}
			set
			{
				if ((this._VerifyProgramLoad != value))
				{
					this.OnVerifyProgramLoadChanging(value);
					this.SendPropertyChanging();
					this._VerifyProgramLoad = value;
					this.SendPropertyChanged("VerifyProgramLoad");
					this.OnVerifyProgramLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramLoadComment", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ProgramLoadComment
		{
			get
			{
				return this._ProgramLoadComment;
			}
			set
			{
				if ((this._ProgramLoadComment != value))
				{
					this.OnProgramLoadCommentChanging(value);
					this.SendPropertyChanging();
					this._ProgramLoadComment = value;
					this.SendPropertyChanged("ProgramLoadComment");
					this.OnProgramLoadCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_EPROM", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.EPROMs.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.EPROMs.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtendedTesting")]
	public partial class ExtendedTesting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ExtCategory;
		
		private string _ExtTitle;
		
		private string _ExtImage;
		
		private int _ValidationReportID;
		
		private int _ExtID;
		
		private int _SampleQty;
		
		private string _Test1;
		
		private string _Cond1;
		
		private string _Res1;
		
		private string _Actual1;
		
		private string _Test2;
		
		private string _Cond2;
		
		private string _Res2;
		
		private string _Actual2;
		
		private string _Test3;
		
		private string _Cond3;
		
		private string _Res3;
		
		private string _Actual3;
		
		private string _Test4;
		
		private string _Cond4;
		
		private string _Res4;
		
		private string _Actual4;
		
		private string _Test5;
		
		private string _Cond5;
		
		private string _Res5;
		
		private string _Actual5;
		
		private string _Test6;
		
		private string _Cond6;
		
		private string _Res6;
		
		private string _Actual6;
		
		private string _Test7;
		
		private string _Cond7;
		
		private string _Res7;
		
		private string _Actual7;
		
		private string _Test8;
		
		private string _Cond8;
		
		private string _Res8;
		
		private string _Actual8;
		
		private string _Test9;
		
		private string _Cond9;
		
		private string _Res9;
		
		private string _Actual9;
		
		private string _Test10;
		
		private string _Cond10;
		
		private string _Res10;
		
		private string _Actual10;
		
		private System.DateTime _timestamp;
		
		private string _notes;
		
		private string _ExtCategoryOther;
		
		private string _ExtTestingResult;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtCategoryChanging(string value);
    partial void OnExtCategoryChanged();
    partial void OnExtTitleChanging(string value);
    partial void OnExtTitleChanged();
    partial void OnExtImageChanging(string value);
    partial void OnExtImageChanged();
    partial void OnValidationReportIDChanging(int value);
    partial void OnValidationReportIDChanged();
    partial void OnExtIDChanging(int value);
    partial void OnExtIDChanged();
    partial void OnSampleQtyChanging(int value);
    partial void OnSampleQtyChanged();
    partial void OnTest1Changing(string value);
    partial void OnTest1Changed();
    partial void OnCond1Changing(string value);
    partial void OnCond1Changed();
    partial void OnRes1Changing(string value);
    partial void OnRes1Changed();
    partial void OnActual1Changing(string value);
    partial void OnActual1Changed();
    partial void OnTest2Changing(string value);
    partial void OnTest2Changed();
    partial void OnCond2Changing(string value);
    partial void OnCond2Changed();
    partial void OnRes2Changing(string value);
    partial void OnRes2Changed();
    partial void OnActual2Changing(string value);
    partial void OnActual2Changed();
    partial void OnTest3Changing(string value);
    partial void OnTest3Changed();
    partial void OnCond3Changing(string value);
    partial void OnCond3Changed();
    partial void OnRes3Changing(string value);
    partial void OnRes3Changed();
    partial void OnActual3Changing(string value);
    partial void OnActual3Changed();
    partial void OnTest4Changing(string value);
    partial void OnTest4Changed();
    partial void OnCond4Changing(string value);
    partial void OnCond4Changed();
    partial void OnRes4Changing(string value);
    partial void OnRes4Changed();
    partial void OnActual4Changing(string value);
    partial void OnActual4Changed();
    partial void OnTest5Changing(string value);
    partial void OnTest5Changed();
    partial void OnCond5Changing(string value);
    partial void OnCond5Changed();
    partial void OnRes5Changing(string value);
    partial void OnRes5Changed();
    partial void OnActual5Changing(string value);
    partial void OnActual5Changed();
    partial void OnTest6Changing(string value);
    partial void OnTest6Changed();
    partial void OnCond6Changing(string value);
    partial void OnCond6Changed();
    partial void OnRes6Changing(string value);
    partial void OnRes6Changed();
    partial void OnActual6Changing(string value);
    partial void OnActual6Changed();
    partial void OnTest7Changing(string value);
    partial void OnTest7Changed();
    partial void OnCond7Changing(string value);
    partial void OnCond7Changed();
    partial void OnRes7Changing(string value);
    partial void OnRes7Changed();
    partial void OnActual7Changing(string value);
    partial void OnActual7Changed();
    partial void OnTest8Changing(string value);
    partial void OnTest8Changed();
    partial void OnCond8Changing(string value);
    partial void OnCond8Changed();
    partial void OnRes8Changing(string value);
    partial void OnRes8Changed();
    partial void OnActual8Changing(string value);
    partial void OnActual8Changed();
    partial void OnTest9Changing(string value);
    partial void OnTest9Changed();
    partial void OnCond9Changing(string value);
    partial void OnCond9Changed();
    partial void OnRes9Changing(string value);
    partial void OnRes9Changed();
    partial void OnActual9Changing(string value);
    partial void OnActual9Changed();
    partial void OnTest10Changing(string value);
    partial void OnTest10Changed();
    partial void OnCond10Changing(string value);
    partial void OnCond10Changed();
    partial void OnRes10Changing(string value);
    partial void OnRes10Changed();
    partial void OnActual10Changing(string value);
    partial void OnActual10Changed();
    partial void OntimestampChanging(System.DateTime value);
    partial void OntimestampChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnExtCategoryOtherChanging(string value);
    partial void OnExtCategoryOtherChanged();
    partial void OnExtTestingResultChanging(string value);
    partial void OnExtTestingResultChanged();
    #endregion
		
		public ExtendedTesting()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtCategory", DbType="VarChar(50)")]
		public string ExtCategory
		{
			get
			{
				return this._ExtCategory;
			}
			set
			{
				if ((this._ExtCategory != value))
				{
					this.OnExtCategoryChanging(value);
					this.SendPropertyChanging();
					this._ExtCategory = value;
					this.SendPropertyChanged("ExtCategory");
					this.OnExtCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtTitle", DbType="VarChar(50)")]
		public string ExtTitle
		{
			get
			{
				return this._ExtTitle;
			}
			set
			{
				if ((this._ExtTitle != value))
				{
					this.OnExtTitleChanging(value);
					this.SendPropertyChanging();
					this._ExtTitle = value;
					this.SendPropertyChanged("ExtTitle");
					this.OnExtTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtImage", DbType="VarChar(200)")]
		public string ExtImage
		{
			get
			{
				return this._ExtImage;
			}
			set
			{
				if ((this._ExtImage != value))
				{
					this.OnExtImageChanging(value);
					this.SendPropertyChanging();
					this._ExtImage = value;
					this.SendPropertyChanged("ExtImage");
					this.OnExtImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int NOT NULL")]
		public int ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtID
		{
			get
			{
				return this._ExtID;
			}
			set
			{
				if ((this._ExtID != value))
				{
					this.OnExtIDChanging(value);
					this.SendPropertyChanging();
					this._ExtID = value;
					this.SendPropertyChanged("ExtID");
					this.OnExtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleQty", DbType="Int NOT NULL")]
		public int SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this.OnSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleQty = value;
					this.SendPropertyChanged("SampleQty");
					this.OnSampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test1", DbType="VarChar(50)")]
		public string Test1
		{
			get
			{
				return this._Test1;
			}
			set
			{
				if ((this._Test1 != value))
				{
					this.OnTest1Changing(value);
					this.SendPropertyChanging();
					this._Test1 = value;
					this.SendPropertyChanged("Test1");
					this.OnTest1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond1", DbType="VarChar(50)")]
		public string Cond1
		{
			get
			{
				return this._Cond1;
			}
			set
			{
				if ((this._Cond1 != value))
				{
					this.OnCond1Changing(value);
					this.SendPropertyChanging();
					this._Cond1 = value;
					this.SendPropertyChanged("Cond1");
					this.OnCond1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res1", DbType="VarChar(50)")]
		public string Res1
		{
			get
			{
				return this._Res1;
			}
			set
			{
				if ((this._Res1 != value))
				{
					this.OnRes1Changing(value);
					this.SendPropertyChanging();
					this._Res1 = value;
					this.SendPropertyChanged("Res1");
					this.OnRes1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual1", DbType="VarChar(50)")]
		public string Actual1
		{
			get
			{
				return this._Actual1;
			}
			set
			{
				if ((this._Actual1 != value))
				{
					this.OnActual1Changing(value);
					this.SendPropertyChanging();
					this._Actual1 = value;
					this.SendPropertyChanged("Actual1");
					this.OnActual1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test2", DbType="VarChar(50)")]
		public string Test2
		{
			get
			{
				return this._Test2;
			}
			set
			{
				if ((this._Test2 != value))
				{
					this.OnTest2Changing(value);
					this.SendPropertyChanging();
					this._Test2 = value;
					this.SendPropertyChanged("Test2");
					this.OnTest2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond2", DbType="VarChar(50)")]
		public string Cond2
		{
			get
			{
				return this._Cond2;
			}
			set
			{
				if ((this._Cond2 != value))
				{
					this.OnCond2Changing(value);
					this.SendPropertyChanging();
					this._Cond2 = value;
					this.SendPropertyChanged("Cond2");
					this.OnCond2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res2", DbType="VarChar(50)")]
		public string Res2
		{
			get
			{
				return this._Res2;
			}
			set
			{
				if ((this._Res2 != value))
				{
					this.OnRes2Changing(value);
					this.SendPropertyChanging();
					this._Res2 = value;
					this.SendPropertyChanged("Res2");
					this.OnRes2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual2", DbType="VarChar(50)")]
		public string Actual2
		{
			get
			{
				return this._Actual2;
			}
			set
			{
				if ((this._Actual2 != value))
				{
					this.OnActual2Changing(value);
					this.SendPropertyChanging();
					this._Actual2 = value;
					this.SendPropertyChanged("Actual2");
					this.OnActual2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test3", DbType="VarChar(50)")]
		public string Test3
		{
			get
			{
				return this._Test3;
			}
			set
			{
				if ((this._Test3 != value))
				{
					this.OnTest3Changing(value);
					this.SendPropertyChanging();
					this._Test3 = value;
					this.SendPropertyChanged("Test3");
					this.OnTest3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond3", DbType="VarChar(50)")]
		public string Cond3
		{
			get
			{
				return this._Cond3;
			}
			set
			{
				if ((this._Cond3 != value))
				{
					this.OnCond3Changing(value);
					this.SendPropertyChanging();
					this._Cond3 = value;
					this.SendPropertyChanged("Cond3");
					this.OnCond3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res3", DbType="VarChar(50)")]
		public string Res3
		{
			get
			{
				return this._Res3;
			}
			set
			{
				if ((this._Res3 != value))
				{
					this.OnRes3Changing(value);
					this.SendPropertyChanging();
					this._Res3 = value;
					this.SendPropertyChanged("Res3");
					this.OnRes3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual3", DbType="VarChar(50)")]
		public string Actual3
		{
			get
			{
				return this._Actual3;
			}
			set
			{
				if ((this._Actual3 != value))
				{
					this.OnActual3Changing(value);
					this.SendPropertyChanging();
					this._Actual3 = value;
					this.SendPropertyChanged("Actual3");
					this.OnActual3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test4", DbType="VarChar(50)")]
		public string Test4
		{
			get
			{
				return this._Test4;
			}
			set
			{
				if ((this._Test4 != value))
				{
					this.OnTest4Changing(value);
					this.SendPropertyChanging();
					this._Test4 = value;
					this.SendPropertyChanged("Test4");
					this.OnTest4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond4", DbType="VarChar(50)")]
		public string Cond4
		{
			get
			{
				return this._Cond4;
			}
			set
			{
				if ((this._Cond4 != value))
				{
					this.OnCond4Changing(value);
					this.SendPropertyChanging();
					this._Cond4 = value;
					this.SendPropertyChanged("Cond4");
					this.OnCond4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res4", DbType="VarChar(50)")]
		public string Res4
		{
			get
			{
				return this._Res4;
			}
			set
			{
				if ((this._Res4 != value))
				{
					this.OnRes4Changing(value);
					this.SendPropertyChanging();
					this._Res4 = value;
					this.SendPropertyChanged("Res4");
					this.OnRes4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual4", DbType="VarChar(50)")]
		public string Actual4
		{
			get
			{
				return this._Actual4;
			}
			set
			{
				if ((this._Actual4 != value))
				{
					this.OnActual4Changing(value);
					this.SendPropertyChanging();
					this._Actual4 = value;
					this.SendPropertyChanged("Actual4");
					this.OnActual4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test5", DbType="VarChar(50)")]
		public string Test5
		{
			get
			{
				return this._Test5;
			}
			set
			{
				if ((this._Test5 != value))
				{
					this.OnTest5Changing(value);
					this.SendPropertyChanging();
					this._Test5 = value;
					this.SendPropertyChanged("Test5");
					this.OnTest5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond5", DbType="VarChar(50)")]
		public string Cond5
		{
			get
			{
				return this._Cond5;
			}
			set
			{
				if ((this._Cond5 != value))
				{
					this.OnCond5Changing(value);
					this.SendPropertyChanging();
					this._Cond5 = value;
					this.SendPropertyChanged("Cond5");
					this.OnCond5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res5", DbType="VarChar(50)")]
		public string Res5
		{
			get
			{
				return this._Res5;
			}
			set
			{
				if ((this._Res5 != value))
				{
					this.OnRes5Changing(value);
					this.SendPropertyChanging();
					this._Res5 = value;
					this.SendPropertyChanged("Res5");
					this.OnRes5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual5", DbType="VarChar(50)")]
		public string Actual5
		{
			get
			{
				return this._Actual5;
			}
			set
			{
				if ((this._Actual5 != value))
				{
					this.OnActual5Changing(value);
					this.SendPropertyChanging();
					this._Actual5 = value;
					this.SendPropertyChanged("Actual5");
					this.OnActual5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test6", DbType="VarChar(50)")]
		public string Test6
		{
			get
			{
				return this._Test6;
			}
			set
			{
				if ((this._Test6 != value))
				{
					this.OnTest6Changing(value);
					this.SendPropertyChanging();
					this._Test6 = value;
					this.SendPropertyChanged("Test6");
					this.OnTest6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond6", DbType="VarChar(50)")]
		public string Cond6
		{
			get
			{
				return this._Cond6;
			}
			set
			{
				if ((this._Cond6 != value))
				{
					this.OnCond6Changing(value);
					this.SendPropertyChanging();
					this._Cond6 = value;
					this.SendPropertyChanged("Cond6");
					this.OnCond6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res6", DbType="VarChar(50)")]
		public string Res6
		{
			get
			{
				return this._Res6;
			}
			set
			{
				if ((this._Res6 != value))
				{
					this.OnRes6Changing(value);
					this.SendPropertyChanging();
					this._Res6 = value;
					this.SendPropertyChanged("Res6");
					this.OnRes6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual6", DbType="VarChar(50)")]
		public string Actual6
		{
			get
			{
				return this._Actual6;
			}
			set
			{
				if ((this._Actual6 != value))
				{
					this.OnActual6Changing(value);
					this.SendPropertyChanging();
					this._Actual6 = value;
					this.SendPropertyChanged("Actual6");
					this.OnActual6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test7", DbType="VarChar(50)")]
		public string Test7
		{
			get
			{
				return this._Test7;
			}
			set
			{
				if ((this._Test7 != value))
				{
					this.OnTest7Changing(value);
					this.SendPropertyChanging();
					this._Test7 = value;
					this.SendPropertyChanged("Test7");
					this.OnTest7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond7", DbType="VarChar(50)")]
		public string Cond7
		{
			get
			{
				return this._Cond7;
			}
			set
			{
				if ((this._Cond7 != value))
				{
					this.OnCond7Changing(value);
					this.SendPropertyChanging();
					this._Cond7 = value;
					this.SendPropertyChanged("Cond7");
					this.OnCond7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res7", DbType="VarChar(50)")]
		public string Res7
		{
			get
			{
				return this._Res7;
			}
			set
			{
				if ((this._Res7 != value))
				{
					this.OnRes7Changing(value);
					this.SendPropertyChanging();
					this._Res7 = value;
					this.SendPropertyChanged("Res7");
					this.OnRes7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual7", DbType="VarChar(50)")]
		public string Actual7
		{
			get
			{
				return this._Actual7;
			}
			set
			{
				if ((this._Actual7 != value))
				{
					this.OnActual7Changing(value);
					this.SendPropertyChanging();
					this._Actual7 = value;
					this.SendPropertyChanged("Actual7");
					this.OnActual7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test8", DbType="VarChar(50)")]
		public string Test8
		{
			get
			{
				return this._Test8;
			}
			set
			{
				if ((this._Test8 != value))
				{
					this.OnTest8Changing(value);
					this.SendPropertyChanging();
					this._Test8 = value;
					this.SendPropertyChanged("Test8");
					this.OnTest8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond8", DbType="VarChar(50)")]
		public string Cond8
		{
			get
			{
				return this._Cond8;
			}
			set
			{
				if ((this._Cond8 != value))
				{
					this.OnCond8Changing(value);
					this.SendPropertyChanging();
					this._Cond8 = value;
					this.SendPropertyChanged("Cond8");
					this.OnCond8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res8", DbType="VarChar(50)")]
		public string Res8
		{
			get
			{
				return this._Res8;
			}
			set
			{
				if ((this._Res8 != value))
				{
					this.OnRes8Changing(value);
					this.SendPropertyChanging();
					this._Res8 = value;
					this.SendPropertyChanged("Res8");
					this.OnRes8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual8", DbType="VarChar(50)")]
		public string Actual8
		{
			get
			{
				return this._Actual8;
			}
			set
			{
				if ((this._Actual8 != value))
				{
					this.OnActual8Changing(value);
					this.SendPropertyChanging();
					this._Actual8 = value;
					this.SendPropertyChanged("Actual8");
					this.OnActual8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test9", DbType="VarChar(50)")]
		public string Test9
		{
			get
			{
				return this._Test9;
			}
			set
			{
				if ((this._Test9 != value))
				{
					this.OnTest9Changing(value);
					this.SendPropertyChanging();
					this._Test9 = value;
					this.SendPropertyChanged("Test9");
					this.OnTest9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond9", DbType="VarChar(50)")]
		public string Cond9
		{
			get
			{
				return this._Cond9;
			}
			set
			{
				if ((this._Cond9 != value))
				{
					this.OnCond9Changing(value);
					this.SendPropertyChanging();
					this._Cond9 = value;
					this.SendPropertyChanged("Cond9");
					this.OnCond9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res9", DbType="VarChar(50)")]
		public string Res9
		{
			get
			{
				return this._Res9;
			}
			set
			{
				if ((this._Res9 != value))
				{
					this.OnRes9Changing(value);
					this.SendPropertyChanging();
					this._Res9 = value;
					this.SendPropertyChanged("Res9");
					this.OnRes9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual9", DbType="VarChar(50)")]
		public string Actual9
		{
			get
			{
				return this._Actual9;
			}
			set
			{
				if ((this._Actual9 != value))
				{
					this.OnActual9Changing(value);
					this.SendPropertyChanging();
					this._Actual9 = value;
					this.SendPropertyChanged("Actual9");
					this.OnActual9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test10", DbType="VarChar(50)")]
		public string Test10
		{
			get
			{
				return this._Test10;
			}
			set
			{
				if ((this._Test10 != value))
				{
					this.OnTest10Changing(value);
					this.SendPropertyChanging();
					this._Test10 = value;
					this.SendPropertyChanged("Test10");
					this.OnTest10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond10", DbType="VarChar(50)")]
		public string Cond10
		{
			get
			{
				return this._Cond10;
			}
			set
			{
				if ((this._Cond10 != value))
				{
					this.OnCond10Changing(value);
					this.SendPropertyChanging();
					this._Cond10 = value;
					this.SendPropertyChanged("Cond10");
					this.OnCond10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res10", DbType="VarChar(50)")]
		public string Res10
		{
			get
			{
				return this._Res10;
			}
			set
			{
				if ((this._Res10 != value))
				{
					this.OnRes10Changing(value);
					this.SendPropertyChanging();
					this._Res10 = value;
					this.SendPropertyChanged("Res10");
					this.OnRes10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual10", DbType="VarChar(50)")]
		public string Actual10
		{
			get
			{
				return this._Actual10;
			}
			set
			{
				if ((this._Actual10 != value))
				{
					this.OnActual10Changing(value);
					this.SendPropertyChanging();
					this._Actual10 = value;
					this.SendPropertyChanged("Actual10");
					this.OnActual10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtCategoryOther", DbType="NVarChar(MAX)")]
		public string ExtCategoryOther
		{
			get
			{
				return this._ExtCategoryOther;
			}
			set
			{
				if ((this._ExtCategoryOther != value))
				{
					this.OnExtCategoryOtherChanging(value);
					this.SendPropertyChanging();
					this._ExtCategoryOther = value;
					this.SendPropertyChanged("ExtCategoryOther");
					this.OnExtCategoryOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtTestingResult", DbType="NVarChar(10)")]
		public string ExtTestingResult
		{
			get
			{
				return this._ExtTestingResult;
			}
			set
			{
				if ((this._ExtTestingResult != value))
				{
					this.OnExtTestingResultChanging(value);
					this.SendPropertyChanging();
					this._ExtTestingResult = value;
					this.SendPropertyChanged("ExtTestingResult");
					this.OnExtTestingResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_ExtendedTesting", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.ExtendedTestings.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.ExtendedTestings.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(int);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeatedSolvents")]
	public partial class HeatedSolvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeatedSolventId;
		
		private System.Nullable<int> _HeatedSolventSampleQty;
		
		private System.Nullable<short> _Methyl_PyrrolidinonePass;
		
		private string _Methyl_PyrrolidinoneComments;
		
		private System.Nullable<short> _DynasolvePass;
		
		private string _DynasolveComments;
		
		private System.Nullable<short> _SecondaryCoatingPass;
		
		private string _SecondaryCoatingComments;
		
		private string _Heated_SolventsImage1;
		
		private string _Heated_SolventsImage2;
		
		private string _Heated_SolventsImage3;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private System.Nullable<System.DateTime> _date_created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHeatedSolventIdChanging(int value);
    partial void OnHeatedSolventIdChanged();
    partial void OnHeatedSolventSampleQtyChanging(System.Nullable<int> value);
    partial void OnHeatedSolventSampleQtyChanged();
    partial void OnMethyl_PyrrolidinonePassChanging(System.Nullable<short> value);
    partial void OnMethyl_PyrrolidinonePassChanged();
    partial void OnMethyl_PyrrolidinoneCommentsChanging(string value);
    partial void OnMethyl_PyrrolidinoneCommentsChanged();
    partial void OnDynasolvePassChanging(System.Nullable<short> value);
    partial void OnDynasolvePassChanged();
    partial void OnDynasolveCommentsChanging(string value);
    partial void OnDynasolveCommentsChanged();
    partial void OnSecondaryCoatingPassChanging(System.Nullable<short> value);
    partial void OnSecondaryCoatingPassChanged();
    partial void OnSecondaryCoatingCommentsChanging(string value);
    partial void OnSecondaryCoatingCommentsChanged();
    partial void OnHeated_SolventsImage1Changing(string value);
    partial void OnHeated_SolventsImage1Changed();
    partial void OnHeated_SolventsImage2Changing(string value);
    partial void OnHeated_SolventsImage2Changed();
    partial void OnHeated_SolventsImage3Changing(string value);
    partial void OnHeated_SolventsImage3Changed();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    #endregion
		
		public HeatedSolvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedSolventId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int HeatedSolventId
		{
			get
			{
				return this._HeatedSolventId;
			}
			set
			{
				if ((this._HeatedSolventId != value))
				{
					this.OnHeatedSolventIdChanging(value);
					this.SendPropertyChanging();
					this._HeatedSolventId = value;
					this.SendPropertyChanged("HeatedSolventId");
					this.OnHeatedSolventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedSolventSampleQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HeatedSolventSampleQty
		{
			get
			{
				return this._HeatedSolventSampleQty;
			}
			set
			{
				if ((this._HeatedSolventSampleQty != value))
				{
					this.OnHeatedSolventSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._HeatedSolventSampleQty = value;
					this.SendPropertyChanged("HeatedSolventSampleQty");
					this.OnHeatedSolventSampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methyl_PyrrolidinonePass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Methyl_PyrrolidinonePass
		{
			get
			{
				return this._Methyl_PyrrolidinonePass;
			}
			set
			{
				if ((this._Methyl_PyrrolidinonePass != value))
				{
					this.OnMethyl_PyrrolidinonePassChanging(value);
					this.SendPropertyChanging();
					this._Methyl_PyrrolidinonePass = value;
					this.SendPropertyChanged("Methyl_PyrrolidinonePass");
					this.OnMethyl_PyrrolidinonePassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Methyl_PyrrolidinoneComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Methyl_PyrrolidinoneComments
		{
			get
			{
				return this._Methyl_PyrrolidinoneComments;
			}
			set
			{
				if ((this._Methyl_PyrrolidinoneComments != value))
				{
					this.OnMethyl_PyrrolidinoneCommentsChanging(value);
					this.SendPropertyChanging();
					this._Methyl_PyrrolidinoneComments = value;
					this.SendPropertyChanged("Methyl_PyrrolidinoneComments");
					this.OnMethyl_PyrrolidinoneCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynasolvePass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DynasolvePass
		{
			get
			{
				return this._DynasolvePass;
			}
			set
			{
				if ((this._DynasolvePass != value))
				{
					this.OnDynasolvePassChanging(value);
					this.SendPropertyChanging();
					this._DynasolvePass = value;
					this.SendPropertyChanged("DynasolvePass");
					this.OnDynasolvePassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynasolveComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string DynasolveComments
		{
			get
			{
				return this._DynasolveComments;
			}
			set
			{
				if ((this._DynasolveComments != value))
				{
					this.OnDynasolveCommentsChanging(value);
					this.SendPropertyChanging();
					this._DynasolveComments = value;
					this.SendPropertyChanged("DynasolveComments");
					this.OnDynasolveCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryCoatingPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SecondaryCoatingPass
		{
			get
			{
				return this._SecondaryCoatingPass;
			}
			set
			{
				if ((this._SecondaryCoatingPass != value))
				{
					this.OnSecondaryCoatingPassChanging(value);
					this.SendPropertyChanging();
					this._SecondaryCoatingPass = value;
					this.SendPropertyChanged("SecondaryCoatingPass");
					this.OnSecondaryCoatingPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryCoatingComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string SecondaryCoatingComments
		{
			get
			{
				return this._SecondaryCoatingComments;
			}
			set
			{
				if ((this._SecondaryCoatingComments != value))
				{
					this.OnSecondaryCoatingCommentsChanging(value);
					this.SendPropertyChanging();
					this._SecondaryCoatingComments = value;
					this.SendPropertyChanged("SecondaryCoatingComments");
					this.OnSecondaryCoatingCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heated_SolventsImage1", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Heated_SolventsImage1
		{
			get
			{
				return this._Heated_SolventsImage1;
			}
			set
			{
				if ((this._Heated_SolventsImage1 != value))
				{
					this.OnHeated_SolventsImage1Changing(value);
					this.SendPropertyChanging();
					this._Heated_SolventsImage1 = value;
					this.SendPropertyChanged("Heated_SolventsImage1");
					this.OnHeated_SolventsImage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heated_SolventsImage2", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Heated_SolventsImage2
		{
			get
			{
				return this._Heated_SolventsImage2;
			}
			set
			{
				if ((this._Heated_SolventsImage2 != value))
				{
					this.OnHeated_SolventsImage2Changing(value);
					this.SendPropertyChanging();
					this._Heated_SolventsImage2 = value;
					this.SendPropertyChanged("Heated_SolventsImage2");
					this.OnHeated_SolventsImage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heated_SolventsImage3", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Heated_SolventsImage3
		{
			get
			{
				return this._Heated_SolventsImage3;
			}
			set
			{
				if ((this._Heated_SolventsImage3 != value))
				{
					this.OnHeated_SolventsImage3Changing(value);
					this.SendPropertyChanging();
					this._Heated_SolventsImage3 = value;
					this.SendPropertyChanged("Heated_SolventsImage3");
					this.OnHeated_SolventsImage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManufacturerPart")]
	public partial class ManufacturerPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MPN;
		
		private string _Manufacturer;
		
		private string _ECCN;
		
		private string _HarmonizedCode;
		
		private string _PackageType;
		
		private string _Lead_PinCount;
		
		private string _Lead_PinPitch;
		
		private string _Width;
		
		private string _Length;
		
		private string _Thickness;
		
		private string _RoHS_Compliant;
		
		private System.Nullable<bool> _SurfaceMount;
		
		private System.Nullable<bool> _ThroughHole;
		
		private System.Nullable<bool> _BGA;
		
		private string _MemoryDevice;
		
		private string _MSD_MSL;
		
		private string _MoistureLevel;
		
		private string _Lead_Leadless;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private int _MPNID;
		
		private string _Import_ID;
		
		private string _Description;
		
		private System.DateTime _date_created;
		
		private EntitySet<ValidationReport> _ValidationReports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMPNChanging(string value);
    partial void OnMPNChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnECCNChanging(string value);
    partial void OnECCNChanged();
    partial void OnHarmonizedCodeChanging(string value);
    partial void OnHarmonizedCodeChanged();
    partial void OnPackageTypeChanging(string value);
    partial void OnPackageTypeChanged();
    partial void OnLead_PinCountChanging(string value);
    partial void OnLead_PinCountChanged();
    partial void OnLead_PinPitchChanging(string value);
    partial void OnLead_PinPitchChanged();
    partial void OnWidthChanging(string value);
    partial void OnWidthChanged();
    partial void OnLengthChanging(string value);
    partial void OnLengthChanged();
    partial void OnThicknessChanging(string value);
    partial void OnThicknessChanged();
    partial void OnRoHS_CompliantChanging(string value);
    partial void OnRoHS_CompliantChanged();
    partial void OnSurfaceMountChanging(System.Nullable<bool> value);
    partial void OnSurfaceMountChanged();
    partial void OnThroughHoleChanging(System.Nullable<bool> value);
    partial void OnThroughHoleChanged();
    partial void OnBGAChanging(System.Nullable<bool> value);
    partial void OnBGAChanged();
    partial void OnMemoryDeviceChanging(string value);
    partial void OnMemoryDeviceChanged();
    partial void OnMSD_MSLChanging(string value);
    partial void OnMSD_MSLChanged();
    partial void OnMoistureLevelChanging(string value);
    partial void OnMoistureLevelChanged();
    partial void OnLead_LeadlessChanging(string value);
    partial void OnLead_LeadlessChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    partial void OnMPNIDChanging(int value);
    partial void OnMPNIDChanged();
    partial void OnImport_IDChanging(string value);
    partial void OnImport_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    #endregion
		
		public ManufacturerPart()
		{
			this._ValidationReports = new EntitySet<ValidationReport>(new Action<ValidationReport>(this.attach_ValidationReports), new Action<ValidationReport>(this.detach_ValidationReports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPN", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MPN
		{
			get
			{
				return this._MPN;
			}
			set
			{
				if ((this._MPN != value))
				{
					this.OnMPNChanging(value);
					this.SendPropertyChanging();
					this._MPN = value;
					this.SendPropertyChanged("MPN");
					this.OnMPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECCN", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ECCN
		{
			get
			{
				return this._ECCN;
			}
			set
			{
				if ((this._ECCN != value))
				{
					this.OnECCNChanging(value);
					this.SendPropertyChanging();
					this._ECCN = value;
					this.SendPropertyChanged("ECCN");
					this.OnECCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmonizedCode", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string HarmonizedCode
		{
			get
			{
				return this._HarmonizedCode;
			}
			set
			{
				if ((this._HarmonizedCode != value))
				{
					this.OnHarmonizedCodeChanging(value);
					this.SendPropertyChanging();
					this._HarmonizedCode = value;
					this.SendPropertyChanged("HarmonizedCode");
					this.OnHarmonizedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageType", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string PackageType
		{
			get
			{
				return this._PackageType;
			}
			set
			{
				if ((this._PackageType != value))
				{
					this.OnPackageTypeChanging(value);
					this.SendPropertyChanging();
					this._PackageType = value;
					this.SendPropertyChanged("PackageType");
					this.OnPackageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lead_PinCount", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Lead_PinCount
		{
			get
			{
				return this._Lead_PinCount;
			}
			set
			{
				if ((this._Lead_PinCount != value))
				{
					this.OnLead_PinCountChanging(value);
					this.SendPropertyChanging();
					this._Lead_PinCount = value;
					this.SendPropertyChanged("Lead_PinCount");
					this.OnLead_PinCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lead_PinPitch", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Lead_PinPitch
		{
			get
			{
				return this._Lead_PinPitch;
			}
			set
			{
				if ((this._Lead_PinPitch != value))
				{
					this.OnLead_PinPitchChanging(value);
					this.SendPropertyChanging();
					this._Lead_PinPitch = value;
					this.SendPropertyChanged("Lead_PinPitch");
					this.OnLead_PinPitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoHS_Compliant", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string RoHS_Compliant
		{
			get
			{
				return this._RoHS_Compliant;
			}
			set
			{
				if ((this._RoHS_Compliant != value))
				{
					this.OnRoHS_CompliantChanging(value);
					this.SendPropertyChanging();
					this._RoHS_Compliant = value;
					this.SendPropertyChanged("RoHS_Compliant");
					this.OnRoHS_CompliantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceMount", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SurfaceMount
		{
			get
			{
				return this._SurfaceMount;
			}
			set
			{
				if ((this._SurfaceMount != value))
				{
					this.OnSurfaceMountChanging(value);
					this.SendPropertyChanging();
					this._SurfaceMount = value;
					this.SendPropertyChanged("SurfaceMount");
					this.OnSurfaceMountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThroughHole", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ThroughHole
		{
			get
			{
				return this._ThroughHole;
			}
			set
			{
				if ((this._ThroughHole != value))
				{
					this.OnThroughHoleChanging(value);
					this.SendPropertyChanging();
					this._ThroughHole = value;
					this.SendPropertyChanged("ThroughHole");
					this.OnThroughHoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BGA", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> BGA
		{
			get
			{
				return this._BGA;
			}
			set
			{
				if ((this._BGA != value))
				{
					this.OnBGAChanging(value);
					this.SendPropertyChanging();
					this._BGA = value;
					this.SendPropertyChanged("BGA");
					this.OnBGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoryDevice", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string MemoryDevice
		{
			get
			{
				return this._MemoryDevice;
			}
			set
			{
				if ((this._MemoryDevice != value))
				{
					this.OnMemoryDeviceChanging(value);
					this.SendPropertyChanging();
					this._MemoryDevice = value;
					this.SendPropertyChanged("MemoryDevice");
					this.OnMemoryDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSD_MSL", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string MSD_MSL
		{
			get
			{
				return this._MSD_MSL;
			}
			set
			{
				if ((this._MSD_MSL != value))
				{
					this.OnMSD_MSLChanging(value);
					this.SendPropertyChanging();
					this._MSD_MSL = value;
					this.SendPropertyChanged("MSD_MSL");
					this.OnMSD_MSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoistureLevel", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MoistureLevel
		{
			get
			{
				return this._MoistureLevel;
			}
			set
			{
				if ((this._MoistureLevel != value))
				{
					this.OnMoistureLevelChanging(value);
					this.SendPropertyChanging();
					this._MoistureLevel = value;
					this.SendPropertyChanged("MoistureLevel");
					this.OnMoistureLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Lead/Leadless]", Storage="_Lead_Leadless", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Lead_Leadless
		{
			get
			{
				return this._Lead_Leadless;
			}
			set
			{
				if ((this._Lead_Leadless != value))
				{
					this.OnLead_LeadlessChanging(value);
					this.SendPropertyChanging();
					this._Lead_Leadless = value;
					this.SendPropertyChanged("Lead_Leadless");
					this.OnLead_LeadlessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPNID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int MPNID
		{
			get
			{
				return this._MPNID;
			}
			set
			{
				if ((this._MPNID != value))
				{
					this.OnMPNIDChanging(value);
					this.SendPropertyChanging();
					this._MPNID = value;
					this.SendPropertyChanged("MPNID");
					this.OnMPNIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import_ID", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Import_ID
		{
			get
			{
				return this._Import_ID;
			}
			set
			{
				if ((this._Import_ID != value))
				{
					this.OnImport_IDChanging(value);
					this.SendPropertyChanging();
					this._Import_ID = value;
					this.SendPropertyChanged("Import_ID");
					this.OnImport_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManufacturerPart_ValidationReport", Storage="_ValidationReports", ThisKey="MPNID", OtherKey="MPNID")]
		public EntitySet<ValidationReport> ValidationReports
		{
			get
			{
				return this._ValidationReports;
			}
			set
			{
				this._ValidationReports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ValidationReports(ValidationReport entity)
		{
			this.SendPropertyChanging();
			entity.ManufacturerPart = this;
		}
		
		private void detach_ValidationReports(ValidationReport entity)
		{
			this.SendPropertyChanging();
			entity.ManufacturerPart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarkingPermanency")]
	public partial class MarkingPermanency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarkingPermanencyID;
		
		private System.Nullable<int> _MarkingSample_Qty;
		
		private System.Nullable<short> _AcetoneTestPass;
		
		private string _Comments_Acetone;
		
		private System.Nullable<short> _Alcohol_MineralSpiritsTestPass;
		
		private string _Comments_Alcohol;
		
		private System.Nullable<short> _ScrapeTestPass;
		
		private string _Comments_ScrapeTest;
		
		private System.Nullable<short> _SecondaryCoatingTestPass;
		
		private string _Comments_SecondaryCoating;
		
		private System.Nullable<int> _PartNumber_MarkingTestPass;
		
		private string _Comments_PartNumber;
		
		private System.Nullable<int> _CaseMarking_LogoTestPass;
		
		private string _Comments_CaseMarking;
		
		private string _Marking_Image1;
		
		private string _Marking_Image2;
		
		private string _Marking_Image3;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarkingPermanencyIDChanging(int value);
    partial void OnMarkingPermanencyIDChanged();
    partial void OnMarkingSample_QtyChanging(System.Nullable<int> value);
    partial void OnMarkingSample_QtyChanged();
    partial void OnAcetoneTestPassChanging(System.Nullable<short> value);
    partial void OnAcetoneTestPassChanged();
    partial void OnComments_AcetoneChanging(string value);
    partial void OnComments_AcetoneChanged();
    partial void OnAlcohol_MineralSpiritsTestPassChanging(System.Nullable<short> value);
    partial void OnAlcohol_MineralSpiritsTestPassChanged();
    partial void OnComments_AlcoholChanging(string value);
    partial void OnComments_AlcoholChanged();
    partial void OnScrapeTestPassChanging(System.Nullable<short> value);
    partial void OnScrapeTestPassChanged();
    partial void OnComments_ScrapeTestChanging(string value);
    partial void OnComments_ScrapeTestChanged();
    partial void OnSecondaryCoatingTestPassChanging(System.Nullable<short> value);
    partial void OnSecondaryCoatingTestPassChanged();
    partial void OnComments_SecondaryCoatingChanging(string value);
    partial void OnComments_SecondaryCoatingChanged();
    partial void OnPartNumber_MarkingTestPassChanging(System.Nullable<int> value);
    partial void OnPartNumber_MarkingTestPassChanged();
    partial void OnComments_PartNumberChanging(string value);
    partial void OnComments_PartNumberChanged();
    partial void OnCaseMarking_LogoTestPassChanging(System.Nullable<int> value);
    partial void OnCaseMarking_LogoTestPassChanged();
    partial void OnComments_CaseMarkingChanging(string value);
    partial void OnComments_CaseMarkingChanged();
    partial void OnMarking_Image1Changing(string value);
    partial void OnMarking_Image1Changed();
    partial void OnMarking_Image2Changing(string value);
    partial void OnMarking_Image2Changed();
    partial void OnMarking_Image3Changing(string value);
    partial void OnMarking_Image3Changed();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    #endregion
		
		public MarkingPermanency()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingPermanencyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int MarkingPermanencyID
		{
			get
			{
				return this._MarkingPermanencyID;
			}
			set
			{
				if ((this._MarkingPermanencyID != value))
				{
					this.OnMarkingPermanencyIDChanging(value);
					this.SendPropertyChanging();
					this._MarkingPermanencyID = value;
					this.SendPropertyChanged("MarkingPermanencyID");
					this.OnMarkingPermanencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingSample_Qty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MarkingSample_Qty
		{
			get
			{
				return this._MarkingSample_Qty;
			}
			set
			{
				if ((this._MarkingSample_Qty != value))
				{
					this.OnMarkingSample_QtyChanging(value);
					this.SendPropertyChanging();
					this._MarkingSample_Qty = value;
					this.SendPropertyChanged("MarkingSample_Qty");
					this.OnMarkingSample_QtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcetoneTestPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AcetoneTestPass
		{
			get
			{
				return this._AcetoneTestPass;
			}
			set
			{
				if ((this._AcetoneTestPass != value))
				{
					this.OnAcetoneTestPassChanging(value);
					this.SendPropertyChanging();
					this._AcetoneTestPass = value;
					this.SendPropertyChanged("AcetoneTestPass");
					this.OnAcetoneTestPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_Acetone", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_Acetone
		{
			get
			{
				return this._Comments_Acetone;
			}
			set
			{
				if ((this._Comments_Acetone != value))
				{
					this.OnComments_AcetoneChanging(value);
					this.SendPropertyChanging();
					this._Comments_Acetone = value;
					this.SendPropertyChanged("Comments_Acetone");
					this.OnComments_AcetoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alcohol_MineralSpiritsTestPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Alcohol_MineralSpiritsTestPass
		{
			get
			{
				return this._Alcohol_MineralSpiritsTestPass;
			}
			set
			{
				if ((this._Alcohol_MineralSpiritsTestPass != value))
				{
					this.OnAlcohol_MineralSpiritsTestPassChanging(value);
					this.SendPropertyChanging();
					this._Alcohol_MineralSpiritsTestPass = value;
					this.SendPropertyChanged("Alcohol_MineralSpiritsTestPass");
					this.OnAlcohol_MineralSpiritsTestPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_Alcohol", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_Alcohol
		{
			get
			{
				return this._Comments_Alcohol;
			}
			set
			{
				if ((this._Comments_Alcohol != value))
				{
					this.OnComments_AlcoholChanging(value);
					this.SendPropertyChanging();
					this._Comments_Alcohol = value;
					this.SendPropertyChanged("Comments_Alcohol");
					this.OnComments_AlcoholChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScrapeTestPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ScrapeTestPass
		{
			get
			{
				return this._ScrapeTestPass;
			}
			set
			{
				if ((this._ScrapeTestPass != value))
				{
					this.OnScrapeTestPassChanging(value);
					this.SendPropertyChanging();
					this._ScrapeTestPass = value;
					this.SendPropertyChanged("ScrapeTestPass");
					this.OnScrapeTestPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_ScrapeTest", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_ScrapeTest
		{
			get
			{
				return this._Comments_ScrapeTest;
			}
			set
			{
				if ((this._Comments_ScrapeTest != value))
				{
					this.OnComments_ScrapeTestChanging(value);
					this.SendPropertyChanging();
					this._Comments_ScrapeTest = value;
					this.SendPropertyChanged("Comments_ScrapeTest");
					this.OnComments_ScrapeTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryCoatingTestPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SecondaryCoatingTestPass
		{
			get
			{
				return this._SecondaryCoatingTestPass;
			}
			set
			{
				if ((this._SecondaryCoatingTestPass != value))
				{
					this.OnSecondaryCoatingTestPassChanging(value);
					this.SendPropertyChanging();
					this._SecondaryCoatingTestPass = value;
					this.SendPropertyChanged("SecondaryCoatingTestPass");
					this.OnSecondaryCoatingTestPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_SecondaryCoating", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_SecondaryCoating
		{
			get
			{
				return this._Comments_SecondaryCoating;
			}
			set
			{
				if ((this._Comments_SecondaryCoating != value))
				{
					this.OnComments_SecondaryCoatingChanging(value);
					this.SendPropertyChanging();
					this._Comments_SecondaryCoating = value;
					this.SendPropertyChanged("Comments_SecondaryCoating");
					this.OnComments_SecondaryCoatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber_MarkingTestPass", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PartNumber_MarkingTestPass
		{
			get
			{
				return this._PartNumber_MarkingTestPass;
			}
			set
			{
				if ((this._PartNumber_MarkingTestPass != value))
				{
					this.OnPartNumber_MarkingTestPassChanging(value);
					this.SendPropertyChanging();
					this._PartNumber_MarkingTestPass = value;
					this.SendPropertyChanged("PartNumber_MarkingTestPass");
					this.OnPartNumber_MarkingTestPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_PartNumber", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_PartNumber
		{
			get
			{
				return this._Comments_PartNumber;
			}
			set
			{
				if ((this._Comments_PartNumber != value))
				{
					this.OnComments_PartNumberChanging(value);
					this.SendPropertyChanging();
					this._Comments_PartNumber = value;
					this.SendPropertyChanged("Comments_PartNumber");
					this.OnComments_PartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseMarking_LogoTestPass", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CaseMarking_LogoTestPass
		{
			get
			{
				return this._CaseMarking_LogoTestPass;
			}
			set
			{
				if ((this._CaseMarking_LogoTestPass != value))
				{
					this.OnCaseMarking_LogoTestPassChanging(value);
					this.SendPropertyChanging();
					this._CaseMarking_LogoTestPass = value;
					this.SendPropertyChanged("CaseMarking_LogoTestPass");
					this.OnCaseMarking_LogoTestPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_CaseMarking", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_CaseMarking
		{
			get
			{
				return this._Comments_CaseMarking;
			}
			set
			{
				if ((this._Comments_CaseMarking != value))
				{
					this.OnComments_CaseMarkingChanging(value);
					this.SendPropertyChanging();
					this._Comments_CaseMarking = value;
					this.SendPropertyChanged("Comments_CaseMarking");
					this.OnComments_CaseMarkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marking_Image1", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Marking_Image1
		{
			get
			{
				return this._Marking_Image1;
			}
			set
			{
				if ((this._Marking_Image1 != value))
				{
					this.OnMarking_Image1Changing(value);
					this.SendPropertyChanging();
					this._Marking_Image1 = value;
					this.SendPropertyChanged("Marking_Image1");
					this.OnMarking_Image1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marking_Image2", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Marking_Image2
		{
			get
			{
				return this._Marking_Image2;
			}
			set
			{
				if ((this._Marking_Image2 != value))
				{
					this.OnMarking_Image2Changing(value);
					this.SendPropertyChanging();
					this._Marking_Image2 = value;
					this.SendPropertyChanged("Marking_Image2");
					this.OnMarking_Image2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marking_Image3", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Marking_Image3
		{
			get
			{
				return this._Marking_Image3;
			}
			set
			{
				if ((this._Marking_Image3 != value))
				{
					this.OnMarking_Image3Changing(value);
					this.SendPropertyChanging();
					this._Marking_Image3 = value;
					this.SendPropertyChanged("Marking_Image3");
					this.OnMarking_Image3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_MarkingPermanency", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.MarkingPermanencies.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.MarkingPermanencies.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SentryVI")]
	public partial class SentryVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SentryVISignatureID;
		
		private System.Nullable<short> _SentryVISampleQty;
		
		private string _PackageMountTypeSentryVI;
		
		private System.Nullable<bool> _ServiceProviderRequiredSentryVI;
		
		private string _SentryVISPRequiredComments;
		
		private System.Nullable<short> _SignaturesMatch;
		
		private string _SignatureMatchComments;
		
		private System.Nullable<short> _Open_Shorts_Detection;
		
		private string _OpenShortsComments;
		
		private System.Nullable<short> _SignatureAnalysisPass;
		
		private string _SignatureAnalysisComments;
		
		private System.Nullable<short> _SignatureReportRequired;
		
		private string _SignatureReportComments;
		
		private System.Nullable<short> _SentryOverAllResult;
		
		private string _SentryICResults;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSentryVISignatureIDChanging(int value);
    partial void OnSentryVISignatureIDChanged();
    partial void OnSentryVISampleQtyChanging(System.Nullable<short> value);
    partial void OnSentryVISampleQtyChanged();
    partial void OnPackageMountTypeSentryVIChanging(string value);
    partial void OnPackageMountTypeSentryVIChanged();
    partial void OnServiceProviderRequiredSentryVIChanging(System.Nullable<bool> value);
    partial void OnServiceProviderRequiredSentryVIChanged();
    partial void OnSentryVISPRequiredCommentsChanging(string value);
    partial void OnSentryVISPRequiredCommentsChanged();
    partial void OnSignaturesMatchChanging(System.Nullable<short> value);
    partial void OnSignaturesMatchChanged();
    partial void OnSignatureMatchCommentsChanging(string value);
    partial void OnSignatureMatchCommentsChanged();
    partial void OnOpen_Shorts_DetectionChanging(System.Nullable<short> value);
    partial void OnOpen_Shorts_DetectionChanged();
    partial void OnOpenShortsCommentsChanging(string value);
    partial void OnOpenShortsCommentsChanged();
    partial void OnSignatureAnalysisPassChanging(System.Nullable<short> value);
    partial void OnSignatureAnalysisPassChanged();
    partial void OnSignatureAnalysisCommentsChanging(string value);
    partial void OnSignatureAnalysisCommentsChanged();
    partial void OnSignatureReportRequiredChanging(System.Nullable<short> value);
    partial void OnSignatureReportRequiredChanged();
    partial void OnSignatureReportCommentsChanging(string value);
    partial void OnSignatureReportCommentsChanged();
    partial void OnSentryOverAllResultChanging(System.Nullable<short> value);
    partial void OnSentryOverAllResultChanged();
    partial void OnSentryICResultsChanging(string value);
    partial void OnSentryICResultsChanged();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    #endregion
		
		public SentryVI()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentryVISignatureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SentryVISignatureID
		{
			get
			{
				return this._SentryVISignatureID;
			}
			set
			{
				if ((this._SentryVISignatureID != value))
				{
					this.OnSentryVISignatureIDChanging(value);
					this.SendPropertyChanging();
					this._SentryVISignatureID = value;
					this.SendPropertyChanged("SentryVISignatureID");
					this.OnSentryVISignatureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentryVISampleQty", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SentryVISampleQty
		{
			get
			{
				return this._SentryVISampleQty;
			}
			set
			{
				if ((this._SentryVISampleQty != value))
				{
					this.OnSentryVISampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SentryVISampleQty = value;
					this.SendPropertyChanged("SentryVISampleQty");
					this.OnSentryVISampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageMountTypeSentryVI", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PackageMountTypeSentryVI
		{
			get
			{
				return this._PackageMountTypeSentryVI;
			}
			set
			{
				if ((this._PackageMountTypeSentryVI != value))
				{
					this.OnPackageMountTypeSentryVIChanging(value);
					this.SendPropertyChanging();
					this._PackageMountTypeSentryVI = value;
					this.SendPropertyChanged("PackageMountTypeSentryVI");
					this.OnPackageMountTypeSentryVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderRequiredSentryVI", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ServiceProviderRequiredSentryVI
		{
			get
			{
				return this._ServiceProviderRequiredSentryVI;
			}
			set
			{
				if ((this._ServiceProviderRequiredSentryVI != value))
				{
					this.OnServiceProviderRequiredSentryVIChanging(value);
					this.SendPropertyChanging();
					this._ServiceProviderRequiredSentryVI = value;
					this.SendPropertyChanged("ServiceProviderRequiredSentryVI");
					this.OnServiceProviderRequiredSentryVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentryVISPRequiredComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string SentryVISPRequiredComments
		{
			get
			{
				return this._SentryVISPRequiredComments;
			}
			set
			{
				if ((this._SentryVISPRequiredComments != value))
				{
					this.OnSentryVISPRequiredCommentsChanging(value);
					this.SendPropertyChanging();
					this._SentryVISPRequiredComments = value;
					this.SendPropertyChanged("SentryVISPRequiredComments");
					this.OnSentryVISPRequiredCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignaturesMatch", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SignaturesMatch
		{
			get
			{
				return this._SignaturesMatch;
			}
			set
			{
				if ((this._SignaturesMatch != value))
				{
					this.OnSignaturesMatchChanging(value);
					this.SendPropertyChanging();
					this._SignaturesMatch = value;
					this.SendPropertyChanged("SignaturesMatch");
					this.OnSignaturesMatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureMatchComments", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SignatureMatchComments
		{
			get
			{
				return this._SignatureMatchComments;
			}
			set
			{
				if ((this._SignatureMatchComments != value))
				{
					this.OnSignatureMatchCommentsChanging(value);
					this.SendPropertyChanging();
					this._SignatureMatchComments = value;
					this.SendPropertyChanged("SignatureMatchComments");
					this.OnSignatureMatchCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Open_Shorts_Detection", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Open_Shorts_Detection
		{
			get
			{
				return this._Open_Shorts_Detection;
			}
			set
			{
				if ((this._Open_Shorts_Detection != value))
				{
					this.OnOpen_Shorts_DetectionChanging(value);
					this.SendPropertyChanging();
					this._Open_Shorts_Detection = value;
					this.SendPropertyChanged("Open_Shorts_Detection");
					this.OnOpen_Shorts_DetectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenShortsComments", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string OpenShortsComments
		{
			get
			{
				return this._OpenShortsComments;
			}
			set
			{
				if ((this._OpenShortsComments != value))
				{
					this.OnOpenShortsCommentsChanging(value);
					this.SendPropertyChanging();
					this._OpenShortsComments = value;
					this.SendPropertyChanged("OpenShortsComments");
					this.OnOpenShortsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureAnalysisPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SignatureAnalysisPass
		{
			get
			{
				return this._SignatureAnalysisPass;
			}
			set
			{
				if ((this._SignatureAnalysisPass != value))
				{
					this.OnSignatureAnalysisPassChanging(value);
					this.SendPropertyChanging();
					this._SignatureAnalysisPass = value;
					this.SendPropertyChanged("SignatureAnalysisPass");
					this.OnSignatureAnalysisPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureAnalysisComments", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SignatureAnalysisComments
		{
			get
			{
				return this._SignatureAnalysisComments;
			}
			set
			{
				if ((this._SignatureAnalysisComments != value))
				{
					this.OnSignatureAnalysisCommentsChanging(value);
					this.SendPropertyChanging();
					this._SignatureAnalysisComments = value;
					this.SendPropertyChanged("SignatureAnalysisComments");
					this.OnSignatureAnalysisCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureReportRequired", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SignatureReportRequired
		{
			get
			{
				return this._SignatureReportRequired;
			}
			set
			{
				if ((this._SignatureReportRequired != value))
				{
					this.OnSignatureReportRequiredChanging(value);
					this.SendPropertyChanging();
					this._SignatureReportRequired = value;
					this.SendPropertyChanged("SignatureReportRequired");
					this.OnSignatureReportRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureReportComments", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SignatureReportComments
		{
			get
			{
				return this._SignatureReportComments;
			}
			set
			{
				if ((this._SignatureReportComments != value))
				{
					this.OnSignatureReportCommentsChanging(value);
					this.SendPropertyChanging();
					this._SignatureReportComments = value;
					this.SendPropertyChanged("SignatureReportComments");
					this.OnSignatureReportCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentryOverAllResult", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SentryOverAllResult
		{
			get
			{
				return this._SentryOverAllResult;
			}
			set
			{
				if ((this._SentryOverAllResult != value))
				{
					this.OnSentryOverAllResultChanging(value);
					this.SendPropertyChanging();
					this._SentryOverAllResult = value;
					this.SendPropertyChanged("SentryOverAllResult");
					this.OnSentryOverAllResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentryICResults", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SentryICResults
		{
			get
			{
				return this._SentryICResults;
			}
			set
			{
				if ((this._SentryICResults != value))
				{
					this.OnSentryICResultsChanging(value);
					this.SendPropertyChanging();
					this._SentryICResults = value;
					this.SendPropertyChanged("SentryICResults");
					this.OnSentryICResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_SentryVI", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.SentryVIs.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.SentryVIs.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solderability")]
	public partial class Solderability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SolderabilityID;
		
		private System.Nullable<short> _SolderabilitySampleQty;
		
		private string _PackageMountTypeSolderability;
		
		private System.Nullable<bool> _SolderabilityServiceProviderRequired;
		
		private string _SolderabilitySPRequiredComments;
		
		private System.Nullable<short> _RoHS;
		
		private string _RoHSComments;
		
		private System.Nullable<short> _SolderWettingAcceptable;
		
		private string _SolderWettingComments;
		
		private System.Nullable<short> _VoidFree;
		
		private string _VoidFreeComments;
		
		private System.Nullable<short> _ContaminantFree;
		
		private string _ContaminantFreeComments;
		
		private string _SolderabilityImage1;
		
		private string _SolderabilityImage2;
		
		private string _SolderabilityImage3;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolderabilityIDChanging(int value);
    partial void OnSolderabilityIDChanged();
    partial void OnSolderabilitySampleQtyChanging(System.Nullable<short> value);
    partial void OnSolderabilitySampleQtyChanged();
    partial void OnPackageMountTypeSolderabilityChanging(string value);
    partial void OnPackageMountTypeSolderabilityChanged();
    partial void OnSolderabilityServiceProviderRequiredChanging(System.Nullable<bool> value);
    partial void OnSolderabilityServiceProviderRequiredChanged();
    partial void OnSolderabilitySPRequiredCommentsChanging(string value);
    partial void OnSolderabilitySPRequiredCommentsChanged();
    partial void OnRoHSChanging(System.Nullable<short> value);
    partial void OnRoHSChanged();
    partial void OnRoHSCommentsChanging(string value);
    partial void OnRoHSCommentsChanged();
    partial void OnSolderWettingAcceptableChanging(System.Nullable<short> value);
    partial void OnSolderWettingAcceptableChanged();
    partial void OnSolderWettingCommentsChanging(string value);
    partial void OnSolderWettingCommentsChanged();
    partial void OnVoidFreeChanging(System.Nullable<short> value);
    partial void OnVoidFreeChanged();
    partial void OnVoidFreeCommentsChanging(string value);
    partial void OnVoidFreeCommentsChanged();
    partial void OnContaminantFreeChanging(System.Nullable<short> value);
    partial void OnContaminantFreeChanged();
    partial void OnContaminantFreeCommentsChanging(string value);
    partial void OnContaminantFreeCommentsChanged();
    partial void OnSolderabilityImage1Changing(string value);
    partial void OnSolderabilityImage1Changed();
    partial void OnSolderabilityImage2Changing(string value);
    partial void OnSolderabilityImage2Changed();
    partial void OnSolderabilityImage3Changing(string value);
    partial void OnSolderabilityImage3Changed();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    #endregion
		
		public Solderability()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderabilityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SolderabilityID
		{
			get
			{
				return this._SolderabilityID;
			}
			set
			{
				if ((this._SolderabilityID != value))
				{
					this.OnSolderabilityIDChanging(value);
					this.SendPropertyChanging();
					this._SolderabilityID = value;
					this.SendPropertyChanged("SolderabilityID");
					this.OnSolderabilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderabilitySampleQty", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SolderabilitySampleQty
		{
			get
			{
				return this._SolderabilitySampleQty;
			}
			set
			{
				if ((this._SolderabilitySampleQty != value))
				{
					this.OnSolderabilitySampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SolderabilitySampleQty = value;
					this.SendPropertyChanged("SolderabilitySampleQty");
					this.OnSolderabilitySampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageMountTypeSolderability", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string PackageMountTypeSolderability
		{
			get
			{
				return this._PackageMountTypeSolderability;
			}
			set
			{
				if ((this._PackageMountTypeSolderability != value))
				{
					this.OnPackageMountTypeSolderabilityChanging(value);
					this.SendPropertyChanging();
					this._PackageMountTypeSolderability = value;
					this.SendPropertyChanged("PackageMountTypeSolderability");
					this.OnPackageMountTypeSolderabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderabilityServiceProviderRequired", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SolderabilityServiceProviderRequired
		{
			get
			{
				return this._SolderabilityServiceProviderRequired;
			}
			set
			{
				if ((this._SolderabilityServiceProviderRequired != value))
				{
					this.OnSolderabilityServiceProviderRequiredChanging(value);
					this.SendPropertyChanging();
					this._SolderabilityServiceProviderRequired = value;
					this.SendPropertyChanged("SolderabilityServiceProviderRequired");
					this.OnSolderabilityServiceProviderRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderabilitySPRequiredComments", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string SolderabilitySPRequiredComments
		{
			get
			{
				return this._SolderabilitySPRequiredComments;
			}
			set
			{
				if ((this._SolderabilitySPRequiredComments != value))
				{
					this.OnSolderabilitySPRequiredCommentsChanging(value);
					this.SendPropertyChanging();
					this._SolderabilitySPRequiredComments = value;
					this.SendPropertyChanged("SolderabilitySPRequiredComments");
					this.OnSolderabilitySPRequiredCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoHS", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> RoHS
		{
			get
			{
				return this._RoHS;
			}
			set
			{
				if ((this._RoHS != value))
				{
					this.OnRoHSChanging(value);
					this.SendPropertyChanging();
					this._RoHS = value;
					this.SendPropertyChanged("RoHS");
					this.OnRoHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoHSComments", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string RoHSComments
		{
			get
			{
				return this._RoHSComments;
			}
			set
			{
				if ((this._RoHSComments != value))
				{
					this.OnRoHSCommentsChanging(value);
					this.SendPropertyChanging();
					this._RoHSComments = value;
					this.SendPropertyChanged("RoHSComments");
					this.OnRoHSCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderWettingAcceptable", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SolderWettingAcceptable
		{
			get
			{
				return this._SolderWettingAcceptable;
			}
			set
			{
				if ((this._SolderWettingAcceptable != value))
				{
					this.OnSolderWettingAcceptableChanging(value);
					this.SendPropertyChanging();
					this._SolderWettingAcceptable = value;
					this.SendPropertyChanged("SolderWettingAcceptable");
					this.OnSolderWettingAcceptableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderWettingComments", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SolderWettingComments
		{
			get
			{
				return this._SolderWettingComments;
			}
			set
			{
				if ((this._SolderWettingComments != value))
				{
					this.OnSolderWettingCommentsChanging(value);
					this.SendPropertyChanging();
					this._SolderWettingComments = value;
					this.SendPropertyChanged("SolderWettingComments");
					this.OnSolderWettingCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidFree", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> VoidFree
		{
			get
			{
				return this._VoidFree;
			}
			set
			{
				if ((this._VoidFree != value))
				{
					this.OnVoidFreeChanging(value);
					this.SendPropertyChanging();
					this._VoidFree = value;
					this.SendPropertyChanged("VoidFree");
					this.OnVoidFreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidFreeComments", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string VoidFreeComments
		{
			get
			{
				return this._VoidFreeComments;
			}
			set
			{
				if ((this._VoidFreeComments != value))
				{
					this.OnVoidFreeCommentsChanging(value);
					this.SendPropertyChanging();
					this._VoidFreeComments = value;
					this.SendPropertyChanged("VoidFreeComments");
					this.OnVoidFreeCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContaminantFree", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ContaminantFree
		{
			get
			{
				return this._ContaminantFree;
			}
			set
			{
				if ((this._ContaminantFree != value))
				{
					this.OnContaminantFreeChanging(value);
					this.SendPropertyChanging();
					this._ContaminantFree = value;
					this.SendPropertyChanged("ContaminantFree");
					this.OnContaminantFreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContaminantFreeComments", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ContaminantFreeComments
		{
			get
			{
				return this._ContaminantFreeComments;
			}
			set
			{
				if ((this._ContaminantFreeComments != value))
				{
					this.OnContaminantFreeCommentsChanging(value);
					this.SendPropertyChanging();
					this._ContaminantFreeComments = value;
					this.SendPropertyChanged("ContaminantFreeComments");
					this.OnContaminantFreeCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderabilityImage1", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SolderabilityImage1
		{
			get
			{
				return this._SolderabilityImage1;
			}
			set
			{
				if ((this._SolderabilityImage1 != value))
				{
					this.OnSolderabilityImage1Changing(value);
					this.SendPropertyChanging();
					this._SolderabilityImage1 = value;
					this.SendPropertyChanged("SolderabilityImage1");
					this.OnSolderabilityImage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderabilityImage2", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SolderabilityImage2
		{
			get
			{
				return this._SolderabilityImage2;
			}
			set
			{
				if ((this._SolderabilityImage2 != value))
				{
					this.OnSolderabilityImage2Changing(value);
					this.SendPropertyChanging();
					this._SolderabilityImage2 = value;
					this.SendPropertyChanged("SolderabilityImage2");
					this.OnSolderabilityImage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderabilityImage3", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SolderabilityImage3
		{
			get
			{
				return this._SolderabilityImage3;
			}
			set
			{
				if ((this._SolderabilityImage3 != value))
				{
					this.OnSolderabilityImage3Changing(value);
					this.SendPropertyChanging();
					this._SolderabilityImage3 = value;
					this.SendPropertyChanged("SolderabilityImage3");
					this.OnSolderabilityImage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_Solderability", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.Solderabilities.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.Solderabilities.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ValidationReport")]
	public partial class ValidationReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ValidationReportID;
		
		private System.Nullable<System.DateTime> _ReportDate;
		
		private string _Form;
		
		private string _company_uid;
		
		private string _company_name;
		
		private string _Rev;
		
		private string _MPN;
		
		private string _CPN;
		
		private System.Nullable<int> _SalesOrderNumberOLD;
		
		private string _CustomerPO;
		
		private System.Nullable<int> _AccountManagerID;
		
		private string _Image_Top;
		
		private string _Image_Bottom;
		
		private string _DateCode1;
		
		private System.Nullable<int> _Quantity1;
		
		private string _DateCode2;
		
		private System.Nullable<int> _Quantity2;
		
		private string _DateCode3;
		
		private System.Nullable<int> _Quantity3;
		
		private string _DateCode4;
		
		private System.Nullable<int> _Quantity4;
		
		private string _DateCode5;
		
		private System.Nullable<int> _Quantity5;
		
		private string _DateCode6;
		
		private System.Nullable<int> _Quantity6;
		
		private string _CustomerTypeA;
		
		private string _CustomerTypeB;
		
		private string _CustomerTypeC;
		
		private string _CustomerTypeD;
		
		private string _Test_StandardA;
		
		private string _Test_StandardB;
		
		private string _Test_StandardC;
		
		private string _Test_StandardD;
		
		private System.Nullable<bool> _is_AS6081;
		
		private System.Nullable<bool> _is_CCAP;
		
		private string _Customer_RequirementA;
		
		private string _Customer_RequirementB;
		
		private string _Customer_RequirementC;
		
		private string _Customer_RequirementD;
		
		private string _Test_TypeA;
		
		private string _Test_TypeB;
		
		private string _Test_TypeC;
		
		private string _Test_TypeD;
		
		private string _Test_TypeE;
		
		private string _Test_TypeF;
		
		private string _Test_TypeG;
		
		private string _Test_TypeH;
		
		private System.Nullable<bool> _New;
		
		private System.Nullable<bool> _Used;
		
		private System.Nullable<bool> _Refurbished;
		
		private string _VCA_Image1;
		
		private string _VCA_Image2;
		
		private string _VCA_Image3;
		
		private System.Nullable<int> _VisualComponentSampleQty;
		
		private System.Nullable<decimal> _Width_Actual;
		
		private string _UnitWidth;
		
		private System.Nullable<bool> _Pass_W;
		
		private string _CommentsWidth;
		
		private System.Nullable<decimal> _Length_Actual;
		
		private string _UnitLength;
		
		private System.Nullable<bool> _Pass_L;
		
		private string _CommentsLength;
		
		private System.Nullable<decimal> _Thickness_Actual;
		
		private string _UnitThickness;
		
		private System.Nullable<bool> _Pass_T;
		
		private string _CommentsThickness;
		
		private string _ComponentType;
		
		private string _SolderBalls_Spheres;
		
		private string _Uniform_Concentricity;
		
		private string _Crushed_Damages_Spheres;
		
		private string _CommentSolderBalls;
		
		private string _CommentUniformity;
		
		private string _CommentDamagedSpheres;
		
		private string _Lead_Count;
		
		private string _Lead_PadCondition;
		
		private string _LeadCoplanarity;
		
		private string _Oxidation_Discoloration;
		
		private string _SignsExposedBaseMetal;
		
		private string _CommentLeadCount;
		
		private string _CommentLead_Pad;
		
		private string _CommentLeadCoplanarity;
		
		private string _CommentO2Discoloration;
		
		private string _CommentExpBaseMetal;
		
		private string _VSA_Image1;
		
		private string _VSA_Image2;
		
		private string _VSA_Image3;
		
		private System.Nullable<int> _VisualSurfaceSampleQty;
		
		private System.Nullable<short> _Top_Pass;
		
		private System.Nullable<short> _Bottom_Pass;
		
		private string _Comments_Top;
		
		private string _Comments_Bottom;
		
		private System.Nullable<short> _LogosPartnumbersPass;
		
		private string _LogosPartnumbersComment;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private System.Nullable<short> _Traceability;
		
		private string _SalesOrderNumber;
		
		private int _MPNID;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<int> _CPNID;
		
		private System.Nullable<int> _EXTID;
		
		private string _Manufacturer;
		
		private string _Test_TypeI;
		
		private string _Test_TypeJ;
		
		private string _DateCodeUnltd;
		
		private string _summaryNotes;
		
		private string _orddet_line_fullpartnumber;
		
		private string _orddet_line_uid;
		
		private string _orderid_sales;
		
		private string _orderid_purchase;
		
		private string _agent_uid;
		
		private string _agent_name;
		
		private bool _is_deleted;
		
		private bool _is_imported;
		
		private System.Nullable<bool> _is_completed;
		
		private string _completed_by;
		
		private System.Nullable<System.DateTime> _completed_date;
		
		private System.Nullable<bool> _is_approved;
		
		private string _approved_by;
		
		private System.Nullable<System.DateTime> _approved_date;
		
		private System.Nullable<bool> _is_demo;
		
		private System.Nullable<int> _demo_source_id;
		
		private string _created_by;
		
		private EntitySet<XRF> _XRFs;
		
		private EntitySet<DateCode> _DateCodes;
		
		private EntitySet<Decapsulation> _Decapsulations;
		
		private EntitySet<EPROM> _EPROMs;
		
		private EntitySet<ExtendedTesting> _ExtendedTestings;
		
		private EntitySet<MarkingPermanency> _MarkingPermanencies;
		
		private EntitySet<SentryVI> _SentryVIs;
		
		private EntitySet<Solderability> _Solderabilities;
		
		private EntitySet<XRay> _XRays;
		
		private EntitySet<Summary_new> _Summary_news;
		
		private EntitySet<BasicElectrical> _BasicElectricals;
		
		private EntityRef<CustomerPart> _CustomerPart;
		
		private EntityRef<ManufacturerPart> _ManufacturerPart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValidationReportIDChanging(int value);
    partial void OnValidationReportIDChanged();
    partial void OnReportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReportDateChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void Oncompany_uidChanging(string value);
    partial void Oncompany_uidChanged();
    partial void Oncompany_nameChanging(string value);
    partial void Oncompany_nameChanged();
    partial void OnRevChanging(string value);
    partial void OnRevChanged();
    partial void OnMPNChanging(string value);
    partial void OnMPNChanged();
    partial void OnCPNChanging(string value);
    partial void OnCPNChanged();
    partial void OnSalesOrderNumberOLDChanging(System.Nullable<int> value);
    partial void OnSalesOrderNumberOLDChanged();
    partial void OnCustomerPOChanging(string value);
    partial void OnCustomerPOChanged();
    partial void OnAccountManagerIDChanging(System.Nullable<int> value);
    partial void OnAccountManagerIDChanged();
    partial void OnImage_TopChanging(string value);
    partial void OnImage_TopChanged();
    partial void OnImage_BottomChanging(string value);
    partial void OnImage_BottomChanged();
    partial void OnDateCode1Changing(string value);
    partial void OnDateCode1Changed();
    partial void OnQuantity1Changing(System.Nullable<int> value);
    partial void OnQuantity1Changed();
    partial void OnDateCode2Changing(string value);
    partial void OnDateCode2Changed();
    partial void OnQuantity2Changing(System.Nullable<int> value);
    partial void OnQuantity2Changed();
    partial void OnDateCode3Changing(string value);
    partial void OnDateCode3Changed();
    partial void OnQuantity3Changing(System.Nullable<int> value);
    partial void OnQuantity3Changed();
    partial void OnDateCode4Changing(string value);
    partial void OnDateCode4Changed();
    partial void OnQuantity4Changing(System.Nullable<int> value);
    partial void OnQuantity4Changed();
    partial void OnDateCode5Changing(string value);
    partial void OnDateCode5Changed();
    partial void OnQuantity5Changing(System.Nullable<int> value);
    partial void OnQuantity5Changed();
    partial void OnDateCode6Changing(string value);
    partial void OnDateCode6Changed();
    partial void OnQuantity6Changing(System.Nullable<int> value);
    partial void OnQuantity6Changed();
    partial void OnCustomerTypeAChanging(string value);
    partial void OnCustomerTypeAChanged();
    partial void OnCustomerTypeBChanging(string value);
    partial void OnCustomerTypeBChanged();
    partial void OnCustomerTypeCChanging(string value);
    partial void OnCustomerTypeCChanged();
    partial void OnCustomerTypeDChanging(string value);
    partial void OnCustomerTypeDChanged();
    partial void OnTest_StandardAChanging(string value);
    partial void OnTest_StandardAChanged();
    partial void OnTest_StandardBChanging(string value);
    partial void OnTest_StandardBChanged();
    partial void OnTest_StandardCChanging(string value);
    partial void OnTest_StandardCChanged();
    partial void OnTest_StandardDChanging(string value);
    partial void OnTest_StandardDChanged();
    partial void Onis_AS6081Changing(System.Nullable<bool> value);
    partial void Onis_AS6081Changed();
    partial void Onis_CCAPChanging(System.Nullable<bool> value);
    partial void Onis_CCAPChanged();
    partial void OnCustomer_RequirementAChanging(string value);
    partial void OnCustomer_RequirementAChanged();
    partial void OnCustomer_RequirementBChanging(string value);
    partial void OnCustomer_RequirementBChanged();
    partial void OnCustomer_RequirementCChanging(string value);
    partial void OnCustomer_RequirementCChanged();
    partial void OnCustomer_RequirementDChanging(string value);
    partial void OnCustomer_RequirementDChanged();
    partial void OnTest_TypeAChanging(string value);
    partial void OnTest_TypeAChanged();
    partial void OnTest_TypeBChanging(string value);
    partial void OnTest_TypeBChanged();
    partial void OnTest_TypeCChanging(string value);
    partial void OnTest_TypeCChanged();
    partial void OnTest_TypeDChanging(string value);
    partial void OnTest_TypeDChanged();
    partial void OnTest_TypeEChanging(string value);
    partial void OnTest_TypeEChanged();
    partial void OnTest_TypeFChanging(string value);
    partial void OnTest_TypeFChanged();
    partial void OnTest_TypeGChanging(string value);
    partial void OnTest_TypeGChanged();
    partial void OnTest_TypeHChanging(string value);
    partial void OnTest_TypeHChanged();
    partial void OnNewChanging(System.Nullable<bool> value);
    partial void OnNewChanged();
    partial void OnUsedChanging(System.Nullable<bool> value);
    partial void OnUsedChanged();
    partial void OnRefurbishedChanging(System.Nullable<bool> value);
    partial void OnRefurbishedChanged();
    partial void OnVCA_Image1Changing(string value);
    partial void OnVCA_Image1Changed();
    partial void OnVCA_Image2Changing(string value);
    partial void OnVCA_Image2Changed();
    partial void OnVCA_Image3Changing(string value);
    partial void OnVCA_Image3Changed();
    partial void OnVisualComponentSampleQtyChanging(System.Nullable<int> value);
    partial void OnVisualComponentSampleQtyChanged();
    partial void OnWidth_ActualChanging(System.Nullable<decimal> value);
    partial void OnWidth_ActualChanged();
    partial void OnUnitWidthChanging(string value);
    partial void OnUnitWidthChanged();
    partial void OnPass_WChanging(System.Nullable<bool> value);
    partial void OnPass_WChanged();
    partial void OnCommentsWidthChanging(string value);
    partial void OnCommentsWidthChanged();
    partial void OnLength_ActualChanging(System.Nullable<decimal> value);
    partial void OnLength_ActualChanged();
    partial void OnUnitLengthChanging(string value);
    partial void OnUnitLengthChanged();
    partial void OnPass_LChanging(System.Nullable<bool> value);
    partial void OnPass_LChanged();
    partial void OnCommentsLengthChanging(string value);
    partial void OnCommentsLengthChanged();
    partial void OnThickness_ActualChanging(System.Nullable<decimal> value);
    partial void OnThickness_ActualChanged();
    partial void OnUnitThicknessChanging(string value);
    partial void OnUnitThicknessChanged();
    partial void OnPass_TChanging(System.Nullable<bool> value);
    partial void OnPass_TChanged();
    partial void OnCommentsThicknessChanging(string value);
    partial void OnCommentsThicknessChanged();
    partial void OnComponentTypeChanging(string value);
    partial void OnComponentTypeChanged();
    partial void OnSolderBalls_SpheresChanging(string value);
    partial void OnSolderBalls_SpheresChanged();
    partial void OnUniform_ConcentricityChanging(string value);
    partial void OnUniform_ConcentricityChanged();
    partial void OnCrushed_Damages_SpheresChanging(string value);
    partial void OnCrushed_Damages_SpheresChanged();
    partial void OnCommentSolderBallsChanging(string value);
    partial void OnCommentSolderBallsChanged();
    partial void OnCommentUniformityChanging(string value);
    partial void OnCommentUniformityChanged();
    partial void OnCommentDamagedSpheresChanging(string value);
    partial void OnCommentDamagedSpheresChanged();
    partial void OnLead_CountChanging(string value);
    partial void OnLead_CountChanged();
    partial void OnLead_PadConditionChanging(string value);
    partial void OnLead_PadConditionChanged();
    partial void OnLeadCoplanarityChanging(string value);
    partial void OnLeadCoplanarityChanged();
    partial void OnOxidation_DiscolorationChanging(string value);
    partial void OnOxidation_DiscolorationChanged();
    partial void OnSignsExposedBaseMetalChanging(string value);
    partial void OnSignsExposedBaseMetalChanged();
    partial void OnCommentLeadCountChanging(string value);
    partial void OnCommentLeadCountChanged();
    partial void OnCommentLead_PadChanging(string value);
    partial void OnCommentLead_PadChanged();
    partial void OnCommentLeadCoplanarityChanging(string value);
    partial void OnCommentLeadCoplanarityChanged();
    partial void OnCommentO2DiscolorationChanging(string value);
    partial void OnCommentO2DiscolorationChanged();
    partial void OnCommentExpBaseMetalChanging(string value);
    partial void OnCommentExpBaseMetalChanged();
    partial void OnVSA_Image1Changing(string value);
    partial void OnVSA_Image1Changed();
    partial void OnVSA_Image2Changing(string value);
    partial void OnVSA_Image2Changed();
    partial void OnVSA_Image3Changing(string value);
    partial void OnVSA_Image3Changed();
    partial void OnVisualSurfaceSampleQtyChanging(System.Nullable<int> value);
    partial void OnVisualSurfaceSampleQtyChanged();
    partial void OnTop_PassChanging(System.Nullable<short> value);
    partial void OnTop_PassChanged();
    partial void OnBottom_PassChanging(System.Nullable<short> value);
    partial void OnBottom_PassChanged();
    partial void OnComments_TopChanging(string value);
    partial void OnComments_TopChanged();
    partial void OnComments_BottomChanging(string value);
    partial void OnComments_BottomChanged();
    partial void OnLogosPartnumbersPassChanging(System.Nullable<short> value);
    partial void OnLogosPartnumbersPassChanged();
    partial void OnLogosPartnumbersCommentChanging(string value);
    partial void OnLogosPartnumbersCommentChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    partial void OnTraceabilityChanging(System.Nullable<short> value);
    partial void OnTraceabilityChanged();
    partial void OnSalesOrderNumberChanging(string value);
    partial void OnSalesOrderNumberChanged();
    partial void OnMPNIDChanging(int value);
    partial void OnMPNIDChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void OnCPNIDChanging(System.Nullable<int> value);
    partial void OnCPNIDChanged();
    partial void OnEXTIDChanging(System.Nullable<int> value);
    partial void OnEXTIDChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnTest_TypeIChanging(string value);
    partial void OnTest_TypeIChanged();
    partial void OnTest_TypeJChanging(string value);
    partial void OnTest_TypeJChanged();
    partial void OnDateCodeUnltdChanging(string value);
    partial void OnDateCodeUnltdChanged();
    partial void OnsummaryNotesChanging(string value);
    partial void OnsummaryNotesChanged();
    partial void Onorddet_line_fullpartnumberChanging(string value);
    partial void Onorddet_line_fullpartnumberChanged();
    partial void Onorddet_line_uidChanging(string value);
    partial void Onorddet_line_uidChanged();
    partial void Onorderid_salesChanging(string value);
    partial void Onorderid_salesChanged();
    partial void Onorderid_purchaseChanging(string value);
    partial void Onorderid_purchaseChanged();
    partial void Onagent_uidChanging(string value);
    partial void Onagent_uidChanged();
    partial void Onagent_nameChanging(string value);
    partial void Onagent_nameChanged();
    partial void Onis_deletedChanging(bool value);
    partial void Onis_deletedChanged();
    partial void Onis_importedChanging(bool value);
    partial void Onis_importedChanged();
    partial void Onis_completedChanging(System.Nullable<bool> value);
    partial void Onis_completedChanged();
    partial void Oncompleted_byChanging(string value);
    partial void Oncompleted_byChanged();
    partial void Oncompleted_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncompleted_dateChanged();
    partial void Onis_approvedChanging(System.Nullable<bool> value);
    partial void Onis_approvedChanged();
    partial void Onapproved_byChanging(string value);
    partial void Onapproved_byChanged();
    partial void Onapproved_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onapproved_dateChanged();
    partial void Onis_demoChanging(System.Nullable<bool> value);
    partial void Onis_demoChanged();
    partial void Ondemo_source_idChanging(System.Nullable<int> value);
    partial void Ondemo_source_idChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    #endregion
		
		public ValidationReport()
		{
			this._XRFs = new EntitySet<XRF>(new Action<XRF>(this.attach_XRFs), new Action<XRF>(this.detach_XRFs));
			this._DateCodes = new EntitySet<DateCode>(new Action<DateCode>(this.attach_DateCodes), new Action<DateCode>(this.detach_DateCodes));
			this._Decapsulations = new EntitySet<Decapsulation>(new Action<Decapsulation>(this.attach_Decapsulations), new Action<Decapsulation>(this.detach_Decapsulations));
			this._EPROMs = new EntitySet<EPROM>(new Action<EPROM>(this.attach_EPROMs), new Action<EPROM>(this.detach_EPROMs));
			this._ExtendedTestings = new EntitySet<ExtendedTesting>(new Action<ExtendedTesting>(this.attach_ExtendedTestings), new Action<ExtendedTesting>(this.detach_ExtendedTestings));
			this._MarkingPermanencies = new EntitySet<MarkingPermanency>(new Action<MarkingPermanency>(this.attach_MarkingPermanencies), new Action<MarkingPermanency>(this.detach_MarkingPermanencies));
			this._SentryVIs = new EntitySet<SentryVI>(new Action<SentryVI>(this.attach_SentryVIs), new Action<SentryVI>(this.detach_SentryVIs));
			this._Solderabilities = new EntitySet<Solderability>(new Action<Solderability>(this.attach_Solderabilities), new Action<Solderability>(this.detach_Solderabilities));
			this._XRays = new EntitySet<XRay>(new Action<XRay>(this.attach_XRays), new Action<XRay>(this.detach_XRays));
			this._Summary_news = new EntitySet<Summary_new>(new Action<Summary_new>(this.attach_Summary_news), new Action<Summary_new>(this.detach_Summary_news));
			this._BasicElectricals = new EntitySet<BasicElectrical>(new Action<BasicElectrical>(this.attach_BasicElectricals), new Action<BasicElectrical>(this.detach_BasicElectricals));
			this._CustomerPart = default(EntityRef<CustomerPart>);
			this._ManufacturerPart = default(EntityRef<ManufacturerPart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this.OnFormChanging(value);
					this.SendPropertyChanging();
					this._Form = value;
					this.SendPropertyChanged("Form");
					this.OnFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company_uid", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string company_uid
		{
			get
			{
				return this._company_uid;
			}
			set
			{
				if ((this._company_uid != value))
				{
					this.Oncompany_uidChanging(value);
					this.SendPropertyChanging();
					this._company_uid = value;
					this.SendPropertyChanged("company_uid");
					this.Oncompany_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company_name", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string company_name
		{
			get
			{
				return this._company_name;
			}
			set
			{
				if ((this._company_name != value))
				{
					this.Oncompany_nameChanging(value);
					this.SendPropertyChanging();
					this._company_name = value;
					this.SendPropertyChanged("company_name");
					this.Oncompany_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rev", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Rev
		{
			get
			{
				return this._Rev;
			}
			set
			{
				if ((this._Rev != value))
				{
					this.OnRevChanging(value);
					this.SendPropertyChanging();
					this._Rev = value;
					this.SendPropertyChanged("Rev");
					this.OnRevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPN", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string MPN
		{
			get
			{
				return this._MPN;
			}
			set
			{
				if ((this._MPN != value))
				{
					this.OnMPNChanging(value);
					this.SendPropertyChanging();
					this._MPN = value;
					this.SendPropertyChanged("MPN");
					this.OnMPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPN", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CPN
		{
			get
			{
				return this._CPN;
			}
			set
			{
				if ((this._CPN != value))
				{
					this.OnCPNChanging(value);
					this.SendPropertyChanging();
					this._CPN = value;
					this.SendPropertyChanged("CPN");
					this.OnCPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderNumberOLD", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SalesOrderNumberOLD
		{
			get
			{
				return this._SalesOrderNumberOLD;
			}
			set
			{
				if ((this._SalesOrderNumberOLD != value))
				{
					this.OnSalesOrderNumberOLDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNumberOLD = value;
					this.SendPropertyChanged("SalesOrderNumberOLD");
					this.OnSalesOrderNumberOLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPO", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerPO
		{
			get
			{
				return this._CustomerPO;
			}
			set
			{
				if ((this._CustomerPO != value))
				{
					this.OnCustomerPOChanging(value);
					this.SendPropertyChanging();
					this._CustomerPO = value;
					this.SendPropertyChanged("CustomerPO");
					this.OnCustomerPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountManagerID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AccountManagerID
		{
			get
			{
				return this._AccountManagerID;
			}
			set
			{
				if ((this._AccountManagerID != value))
				{
					this.OnAccountManagerIDChanging(value);
					this.SendPropertyChanging();
					this._AccountManagerID = value;
					this.SendPropertyChanged("AccountManagerID");
					this.OnAccountManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Top", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Image_Top
		{
			get
			{
				return this._Image_Top;
			}
			set
			{
				if ((this._Image_Top != value))
				{
					this.OnImage_TopChanging(value);
					this.SendPropertyChanging();
					this._Image_Top = value;
					this.SendPropertyChanged("Image_Top");
					this.OnImage_TopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Bottom", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Image_Bottom
		{
			get
			{
				return this._Image_Bottom;
			}
			set
			{
				if ((this._Image_Bottom != value))
				{
					this.OnImage_BottomChanging(value);
					this.SendPropertyChanging();
					this._Image_Bottom = value;
					this.SendPropertyChanged("Image_Bottom");
					this.OnImage_BottomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode1", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DateCode1
		{
			get
			{
				return this._DateCode1;
			}
			set
			{
				if ((this._DateCode1 != value))
				{
					this.OnDateCode1Changing(value);
					this.SendPropertyChanging();
					this._DateCode1 = value;
					this.SendPropertyChanged("DateCode1");
					this.OnDateCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity1", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Quantity1
		{
			get
			{
				return this._Quantity1;
			}
			set
			{
				if ((this._Quantity1 != value))
				{
					this.OnQuantity1Changing(value);
					this.SendPropertyChanging();
					this._Quantity1 = value;
					this.SendPropertyChanged("Quantity1");
					this.OnQuantity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode2", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DateCode2
		{
			get
			{
				return this._DateCode2;
			}
			set
			{
				if ((this._DateCode2 != value))
				{
					this.OnDateCode2Changing(value);
					this.SendPropertyChanging();
					this._DateCode2 = value;
					this.SendPropertyChanged("DateCode2");
					this.OnDateCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity2", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Quantity2
		{
			get
			{
				return this._Quantity2;
			}
			set
			{
				if ((this._Quantity2 != value))
				{
					this.OnQuantity2Changing(value);
					this.SendPropertyChanging();
					this._Quantity2 = value;
					this.SendPropertyChanged("Quantity2");
					this.OnQuantity2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode3", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DateCode3
		{
			get
			{
				return this._DateCode3;
			}
			set
			{
				if ((this._DateCode3 != value))
				{
					this.OnDateCode3Changing(value);
					this.SendPropertyChanging();
					this._DateCode3 = value;
					this.SendPropertyChanged("DateCode3");
					this.OnDateCode3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity3", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Quantity3
		{
			get
			{
				return this._Quantity3;
			}
			set
			{
				if ((this._Quantity3 != value))
				{
					this.OnQuantity3Changing(value);
					this.SendPropertyChanging();
					this._Quantity3 = value;
					this.SendPropertyChanged("Quantity3");
					this.OnQuantity3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode4", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DateCode4
		{
			get
			{
				return this._DateCode4;
			}
			set
			{
				if ((this._DateCode4 != value))
				{
					this.OnDateCode4Changing(value);
					this.SendPropertyChanging();
					this._DateCode4 = value;
					this.SendPropertyChanged("DateCode4");
					this.OnDateCode4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity4", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Quantity4
		{
			get
			{
				return this._Quantity4;
			}
			set
			{
				if ((this._Quantity4 != value))
				{
					this.OnQuantity4Changing(value);
					this.SendPropertyChanging();
					this._Quantity4 = value;
					this.SendPropertyChanged("Quantity4");
					this.OnQuantity4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode5", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DateCode5
		{
			get
			{
				return this._DateCode5;
			}
			set
			{
				if ((this._DateCode5 != value))
				{
					this.OnDateCode5Changing(value);
					this.SendPropertyChanging();
					this._DateCode5 = value;
					this.SendPropertyChanged("DateCode5");
					this.OnDateCode5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity5", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Quantity5
		{
			get
			{
				return this._Quantity5;
			}
			set
			{
				if ((this._Quantity5 != value))
				{
					this.OnQuantity5Changing(value);
					this.SendPropertyChanging();
					this._Quantity5 = value;
					this.SendPropertyChanged("Quantity5");
					this.OnQuantity5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCode6", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DateCode6
		{
			get
			{
				return this._DateCode6;
			}
			set
			{
				if ((this._DateCode6 != value))
				{
					this.OnDateCode6Changing(value);
					this.SendPropertyChanging();
					this._DateCode6 = value;
					this.SendPropertyChanged("DateCode6");
					this.OnDateCode6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity6", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Quantity6
		{
			get
			{
				return this._Quantity6;
			}
			set
			{
				if ((this._Quantity6 != value))
				{
					this.OnQuantity6Changing(value);
					this.SendPropertyChanging();
					this._Quantity6 = value;
					this.SendPropertyChanged("Quantity6");
					this.OnQuantity6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeA", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerTypeA
		{
			get
			{
				return this._CustomerTypeA;
			}
			set
			{
				if ((this._CustomerTypeA != value))
				{
					this.OnCustomerTypeAChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeA = value;
					this.SendPropertyChanged("CustomerTypeA");
					this.OnCustomerTypeAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeB", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerTypeB
		{
			get
			{
				return this._CustomerTypeB;
			}
			set
			{
				if ((this._CustomerTypeB != value))
				{
					this.OnCustomerTypeBChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeB = value;
					this.SendPropertyChanged("CustomerTypeB");
					this.OnCustomerTypeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeC", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerTypeC
		{
			get
			{
				return this._CustomerTypeC;
			}
			set
			{
				if ((this._CustomerTypeC != value))
				{
					this.OnCustomerTypeCChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeC = value;
					this.SendPropertyChanged("CustomerTypeC");
					this.OnCustomerTypeCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeD", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerTypeD
		{
			get
			{
				return this._CustomerTypeD;
			}
			set
			{
				if ((this._CustomerTypeD != value))
				{
					this.OnCustomerTypeDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeD = value;
					this.SendPropertyChanged("CustomerTypeD");
					this.OnCustomerTypeDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_StandardA", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_StandardA
		{
			get
			{
				return this._Test_StandardA;
			}
			set
			{
				if ((this._Test_StandardA != value))
				{
					this.OnTest_StandardAChanging(value);
					this.SendPropertyChanging();
					this._Test_StandardA = value;
					this.SendPropertyChanged("Test_StandardA");
					this.OnTest_StandardAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_StandardB", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_StandardB
		{
			get
			{
				return this._Test_StandardB;
			}
			set
			{
				if ((this._Test_StandardB != value))
				{
					this.OnTest_StandardBChanging(value);
					this.SendPropertyChanging();
					this._Test_StandardB = value;
					this.SendPropertyChanged("Test_StandardB");
					this.OnTest_StandardBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_StandardC", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_StandardC
		{
			get
			{
				return this._Test_StandardC;
			}
			set
			{
				if ((this._Test_StandardC != value))
				{
					this.OnTest_StandardCChanging(value);
					this.SendPropertyChanging();
					this._Test_StandardC = value;
					this.SendPropertyChanged("Test_StandardC");
					this.OnTest_StandardCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_StandardD", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_StandardD
		{
			get
			{
				return this._Test_StandardD;
			}
			set
			{
				if ((this._Test_StandardD != value))
				{
					this.OnTest_StandardDChanging(value);
					this.SendPropertyChanging();
					this._Test_StandardD = value;
					this.SendPropertyChanged("Test_StandardD");
					this.OnTest_StandardDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_AS6081", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> is_AS6081
		{
			get
			{
				return this._is_AS6081;
			}
			set
			{
				if ((this._is_AS6081 != value))
				{
					this.Onis_AS6081Changing(value);
					this.SendPropertyChanging();
					this._is_AS6081 = value;
					this.SendPropertyChanged("is_AS6081");
					this.Onis_AS6081Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_CCAP", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> is_CCAP
		{
			get
			{
				return this._is_CCAP;
			}
			set
			{
				if ((this._is_CCAP != value))
				{
					this.Onis_CCAPChanging(value);
					this.SendPropertyChanging();
					this._is_CCAP = value;
					this.SendPropertyChanged("is_CCAP");
					this.Onis_CCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_RequirementA", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Customer_RequirementA
		{
			get
			{
				return this._Customer_RequirementA;
			}
			set
			{
				if ((this._Customer_RequirementA != value))
				{
					this.OnCustomer_RequirementAChanging(value);
					this.SendPropertyChanging();
					this._Customer_RequirementA = value;
					this.SendPropertyChanged("Customer_RequirementA");
					this.OnCustomer_RequirementAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_RequirementB", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Customer_RequirementB
		{
			get
			{
				return this._Customer_RequirementB;
			}
			set
			{
				if ((this._Customer_RequirementB != value))
				{
					this.OnCustomer_RequirementBChanging(value);
					this.SendPropertyChanging();
					this._Customer_RequirementB = value;
					this.SendPropertyChanged("Customer_RequirementB");
					this.OnCustomer_RequirementBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_RequirementC", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Customer_RequirementC
		{
			get
			{
				return this._Customer_RequirementC;
			}
			set
			{
				if ((this._Customer_RequirementC != value))
				{
					this.OnCustomer_RequirementCChanging(value);
					this.SendPropertyChanging();
					this._Customer_RequirementC = value;
					this.SendPropertyChanged("Customer_RequirementC");
					this.OnCustomer_RequirementCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_RequirementD", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Customer_RequirementD
		{
			get
			{
				return this._Customer_RequirementD;
			}
			set
			{
				if ((this._Customer_RequirementD != value))
				{
					this.OnCustomer_RequirementDChanging(value);
					this.SendPropertyChanging();
					this._Customer_RequirementD = value;
					this.SendPropertyChanged("Customer_RequirementD");
					this.OnCustomer_RequirementDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeA", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeA
		{
			get
			{
				return this._Test_TypeA;
			}
			set
			{
				if ((this._Test_TypeA != value))
				{
					this.OnTest_TypeAChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeA = value;
					this.SendPropertyChanged("Test_TypeA");
					this.OnTest_TypeAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeB", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeB
		{
			get
			{
				return this._Test_TypeB;
			}
			set
			{
				if ((this._Test_TypeB != value))
				{
					this.OnTest_TypeBChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeB = value;
					this.SendPropertyChanged("Test_TypeB");
					this.OnTest_TypeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeC", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeC
		{
			get
			{
				return this._Test_TypeC;
			}
			set
			{
				if ((this._Test_TypeC != value))
				{
					this.OnTest_TypeCChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeC = value;
					this.SendPropertyChanged("Test_TypeC");
					this.OnTest_TypeCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeD", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeD
		{
			get
			{
				return this._Test_TypeD;
			}
			set
			{
				if ((this._Test_TypeD != value))
				{
					this.OnTest_TypeDChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeD = value;
					this.SendPropertyChanged("Test_TypeD");
					this.OnTest_TypeDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeE", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeE
		{
			get
			{
				return this._Test_TypeE;
			}
			set
			{
				if ((this._Test_TypeE != value))
				{
					this.OnTest_TypeEChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeE = value;
					this.SendPropertyChanged("Test_TypeE");
					this.OnTest_TypeEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeF", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeF
		{
			get
			{
				return this._Test_TypeF;
			}
			set
			{
				if ((this._Test_TypeF != value))
				{
					this.OnTest_TypeFChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeF = value;
					this.SendPropertyChanged("Test_TypeF");
					this.OnTest_TypeFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeG", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeG
		{
			get
			{
				return this._Test_TypeG;
			}
			set
			{
				if ((this._Test_TypeG != value))
				{
					this.OnTest_TypeGChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeG = value;
					this.SendPropertyChanged("Test_TypeG");
					this.OnTest_TypeGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeH", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeH
		{
			get
			{
				return this._Test_TypeH;
			}
			set
			{
				if ((this._Test_TypeH != value))
				{
					this.OnTest_TypeHChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeH = value;
					this.SendPropertyChanged("Test_TypeH");
					this.OnTest_TypeHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> New
		{
			get
			{
				return this._New;
			}
			set
			{
				if ((this._New != value))
				{
					this.OnNewChanging(value);
					this.SendPropertyChanging();
					this._New = value;
					this.SendPropertyChanged("New");
					this.OnNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Used", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Used
		{
			get
			{
				return this._Used;
			}
			set
			{
				if ((this._Used != value))
				{
					this.OnUsedChanging(value);
					this.SendPropertyChanging();
					this._Used = value;
					this.SendPropertyChanged("Used");
					this.OnUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Refurbished", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Refurbished
		{
			get
			{
				return this._Refurbished;
			}
			set
			{
				if ((this._Refurbished != value))
				{
					this.OnRefurbishedChanging(value);
					this.SendPropertyChanging();
					this._Refurbished = value;
					this.SendPropertyChanged("Refurbished");
					this.OnRefurbishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VCA_Image1", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string VCA_Image1
		{
			get
			{
				return this._VCA_Image1;
			}
			set
			{
				if ((this._VCA_Image1 != value))
				{
					this.OnVCA_Image1Changing(value);
					this.SendPropertyChanging();
					this._VCA_Image1 = value;
					this.SendPropertyChanged("VCA_Image1");
					this.OnVCA_Image1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VCA_Image2", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string VCA_Image2
		{
			get
			{
				return this._VCA_Image2;
			}
			set
			{
				if ((this._VCA_Image2 != value))
				{
					this.OnVCA_Image2Changing(value);
					this.SendPropertyChanging();
					this._VCA_Image2 = value;
					this.SendPropertyChanged("VCA_Image2");
					this.OnVCA_Image2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VCA_Image3", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string VCA_Image3
		{
			get
			{
				return this._VCA_Image3;
			}
			set
			{
				if ((this._VCA_Image3 != value))
				{
					this.OnVCA_Image3Changing(value);
					this.SendPropertyChanging();
					this._VCA_Image3 = value;
					this.SendPropertyChanged("VCA_Image3");
					this.OnVCA_Image3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisualComponentSampleQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> VisualComponentSampleQty
		{
			get
			{
				return this._VisualComponentSampleQty;
			}
			set
			{
				if ((this._VisualComponentSampleQty != value))
				{
					this.OnVisualComponentSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._VisualComponentSampleQty = value;
					this.SendPropertyChanged("VisualComponentSampleQty");
					this.OnVisualComponentSampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width_Actual", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Width_Actual
		{
			get
			{
				return this._Width_Actual;
			}
			set
			{
				if ((this._Width_Actual != value))
				{
					this.OnWidth_ActualChanging(value);
					this.SendPropertyChanging();
					this._Width_Actual = value;
					this.SendPropertyChanged("Width_Actual");
					this.OnWidth_ActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWidth", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string UnitWidth
		{
			get
			{
				return this._UnitWidth;
			}
			set
			{
				if ((this._UnitWidth != value))
				{
					this.OnUnitWidthChanging(value);
					this.SendPropertyChanging();
					this._UnitWidth = value;
					this.SendPropertyChanged("UnitWidth");
					this.OnUnitWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass_W", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Pass_W
		{
			get
			{
				return this._Pass_W;
			}
			set
			{
				if ((this._Pass_W != value))
				{
					this.OnPass_WChanging(value);
					this.SendPropertyChanging();
					this._Pass_W = value;
					this.SendPropertyChanged("Pass_W");
					this.OnPass_WChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentsWidth", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentsWidth
		{
			get
			{
				return this._CommentsWidth;
			}
			set
			{
				if ((this._CommentsWidth != value))
				{
					this.OnCommentsWidthChanging(value);
					this.SendPropertyChanging();
					this._CommentsWidth = value;
					this.SendPropertyChanged("CommentsWidth");
					this.OnCommentsWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length_Actual", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Length_Actual
		{
			get
			{
				return this._Length_Actual;
			}
			set
			{
				if ((this._Length_Actual != value))
				{
					this.OnLength_ActualChanging(value);
					this.SendPropertyChanging();
					this._Length_Actual = value;
					this.SendPropertyChanged("Length_Actual");
					this.OnLength_ActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitLength", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string UnitLength
		{
			get
			{
				return this._UnitLength;
			}
			set
			{
				if ((this._UnitLength != value))
				{
					this.OnUnitLengthChanging(value);
					this.SendPropertyChanging();
					this._UnitLength = value;
					this.SendPropertyChanged("UnitLength");
					this.OnUnitLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass_L", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Pass_L
		{
			get
			{
				return this._Pass_L;
			}
			set
			{
				if ((this._Pass_L != value))
				{
					this.OnPass_LChanging(value);
					this.SendPropertyChanging();
					this._Pass_L = value;
					this.SendPropertyChanged("Pass_L");
					this.OnPass_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentsLength", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentsLength
		{
			get
			{
				return this._CommentsLength;
			}
			set
			{
				if ((this._CommentsLength != value))
				{
					this.OnCommentsLengthChanging(value);
					this.SendPropertyChanging();
					this._CommentsLength = value;
					this.SendPropertyChanged("CommentsLength");
					this.OnCommentsLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness_Actual", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Thickness_Actual
		{
			get
			{
				return this._Thickness_Actual;
			}
			set
			{
				if ((this._Thickness_Actual != value))
				{
					this.OnThickness_ActualChanging(value);
					this.SendPropertyChanging();
					this._Thickness_Actual = value;
					this.SendPropertyChanged("Thickness_Actual");
					this.OnThickness_ActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitThickness", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string UnitThickness
		{
			get
			{
				return this._UnitThickness;
			}
			set
			{
				if ((this._UnitThickness != value))
				{
					this.OnUnitThicknessChanging(value);
					this.SendPropertyChanging();
					this._UnitThickness = value;
					this.SendPropertyChanged("UnitThickness");
					this.OnUnitThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass_T", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Pass_T
		{
			get
			{
				return this._Pass_T;
			}
			set
			{
				if ((this._Pass_T != value))
				{
					this.OnPass_TChanging(value);
					this.SendPropertyChanging();
					this._Pass_T = value;
					this.SendPropertyChanged("Pass_T");
					this.OnPass_TChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentsThickness", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentsThickness
		{
			get
			{
				return this._CommentsThickness;
			}
			set
			{
				if ((this._CommentsThickness != value))
				{
					this.OnCommentsThicknessChanging(value);
					this.SendPropertyChanging();
					this._CommentsThickness = value;
					this.SendPropertyChanged("CommentsThickness");
					this.OnCommentsThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentType", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ComponentType
		{
			get
			{
				return this._ComponentType;
			}
			set
			{
				if ((this._ComponentType != value))
				{
					this.OnComponentTypeChanging(value);
					this.SendPropertyChanging();
					this._ComponentType = value;
					this.SendPropertyChanged("ComponentType");
					this.OnComponentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolderBalls_Spheres", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SolderBalls_Spheres
		{
			get
			{
				return this._SolderBalls_Spheres;
			}
			set
			{
				if ((this._SolderBalls_Spheres != value))
				{
					this.OnSolderBalls_SpheresChanging(value);
					this.SendPropertyChanging();
					this._SolderBalls_Spheres = value;
					this.SendPropertyChanged("SolderBalls_Spheres");
					this.OnSolderBalls_SpheresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uniform_Concentricity", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Uniform_Concentricity
		{
			get
			{
				return this._Uniform_Concentricity;
			}
			set
			{
				if ((this._Uniform_Concentricity != value))
				{
					this.OnUniform_ConcentricityChanging(value);
					this.SendPropertyChanging();
					this._Uniform_Concentricity = value;
					this.SendPropertyChanged("Uniform_Concentricity");
					this.OnUniform_ConcentricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crushed_Damages_Spheres", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Crushed_Damages_Spheres
		{
			get
			{
				return this._Crushed_Damages_Spheres;
			}
			set
			{
				if ((this._Crushed_Damages_Spheres != value))
				{
					this.OnCrushed_Damages_SpheresChanging(value);
					this.SendPropertyChanging();
					this._Crushed_Damages_Spheres = value;
					this.SendPropertyChanged("Crushed_Damages_Spheres");
					this.OnCrushed_Damages_SpheresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSolderBalls", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentSolderBalls
		{
			get
			{
				return this._CommentSolderBalls;
			}
			set
			{
				if ((this._CommentSolderBalls != value))
				{
					this.OnCommentSolderBallsChanging(value);
					this.SendPropertyChanging();
					this._CommentSolderBalls = value;
					this.SendPropertyChanged("CommentSolderBalls");
					this.OnCommentSolderBallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentUniformity", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentUniformity
		{
			get
			{
				return this._CommentUniformity;
			}
			set
			{
				if ((this._CommentUniformity != value))
				{
					this.OnCommentUniformityChanging(value);
					this.SendPropertyChanging();
					this._CommentUniformity = value;
					this.SendPropertyChanged("CommentUniformity");
					this.OnCommentUniformityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentDamagedSpheres", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentDamagedSpheres
		{
			get
			{
				return this._CommentDamagedSpheres;
			}
			set
			{
				if ((this._CommentDamagedSpheres != value))
				{
					this.OnCommentDamagedSpheresChanging(value);
					this.SendPropertyChanging();
					this._CommentDamagedSpheres = value;
					this.SendPropertyChanged("CommentDamagedSpheres");
					this.OnCommentDamagedSpheresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lead_Count", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Lead_Count
		{
			get
			{
				return this._Lead_Count;
			}
			set
			{
				if ((this._Lead_Count != value))
				{
					this.OnLead_CountChanging(value);
					this.SendPropertyChanging();
					this._Lead_Count = value;
					this.SendPropertyChanged("Lead_Count");
					this.OnLead_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Lead&PadCondition]", Storage="_Lead_PadCondition", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Lead_PadCondition
		{
			get
			{
				return this._Lead_PadCondition;
			}
			set
			{
				if ((this._Lead_PadCondition != value))
				{
					this.OnLead_PadConditionChanging(value);
					this.SendPropertyChanging();
					this._Lead_PadCondition = value;
					this.SendPropertyChanged("Lead_PadCondition");
					this.OnLead_PadConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadCoplanarity", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LeadCoplanarity
		{
			get
			{
				return this._LeadCoplanarity;
			}
			set
			{
				if ((this._LeadCoplanarity != value))
				{
					this.OnLeadCoplanarityChanging(value);
					this.SendPropertyChanging();
					this._LeadCoplanarity = value;
					this.SendPropertyChanged("LeadCoplanarity");
					this.OnLeadCoplanarityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Oxidation/Discoloration]", Storage="_Oxidation_Discoloration", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Oxidation_Discoloration
		{
			get
			{
				return this._Oxidation_Discoloration;
			}
			set
			{
				if ((this._Oxidation_Discoloration != value))
				{
					this.OnOxidation_DiscolorationChanging(value);
					this.SendPropertyChanging();
					this._Oxidation_Discoloration = value;
					this.SendPropertyChanged("Oxidation_Discoloration");
					this.OnOxidation_DiscolorationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignsExposedBaseMetal", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SignsExposedBaseMetal
		{
			get
			{
				return this._SignsExposedBaseMetal;
			}
			set
			{
				if ((this._SignsExposedBaseMetal != value))
				{
					this.OnSignsExposedBaseMetalChanging(value);
					this.SendPropertyChanging();
					this._SignsExposedBaseMetal = value;
					this.SendPropertyChanged("SignsExposedBaseMetal");
					this.OnSignsExposedBaseMetalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentLeadCount", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CommentLeadCount
		{
			get
			{
				return this._CommentLeadCount;
			}
			set
			{
				if ((this._CommentLeadCount != value))
				{
					this.OnCommentLeadCountChanging(value);
					this.SendPropertyChanging();
					this._CommentLeadCount = value;
					this.SendPropertyChanged("CommentLeadCount");
					this.OnCommentLeadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CommentLead&Pad]", Storage="_CommentLead_Pad", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentLead_Pad
		{
			get
			{
				return this._CommentLead_Pad;
			}
			set
			{
				if ((this._CommentLead_Pad != value))
				{
					this.OnCommentLead_PadChanging(value);
					this.SendPropertyChanging();
					this._CommentLead_Pad = value;
					this.SendPropertyChanged("CommentLead_Pad");
					this.OnCommentLead_PadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentLeadCoplanarity", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentLeadCoplanarity
		{
			get
			{
				return this._CommentLeadCoplanarity;
			}
			set
			{
				if ((this._CommentLeadCoplanarity != value))
				{
					this.OnCommentLeadCoplanarityChanging(value);
					this.SendPropertyChanging();
					this._CommentLeadCoplanarity = value;
					this.SendPropertyChanged("CommentLeadCoplanarity");
					this.OnCommentLeadCoplanarityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentO2Discoloration", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentO2Discoloration
		{
			get
			{
				return this._CommentO2Discoloration;
			}
			set
			{
				if ((this._CommentO2Discoloration != value))
				{
					this.OnCommentO2DiscolorationChanging(value);
					this.SendPropertyChanging();
					this._CommentO2Discoloration = value;
					this.SendPropertyChanged("CommentO2Discoloration");
					this.OnCommentO2DiscolorationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentExpBaseMetal", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommentExpBaseMetal
		{
			get
			{
				return this._CommentExpBaseMetal;
			}
			set
			{
				if ((this._CommentExpBaseMetal != value))
				{
					this.OnCommentExpBaseMetalChanging(value);
					this.SendPropertyChanging();
					this._CommentExpBaseMetal = value;
					this.SendPropertyChanged("CommentExpBaseMetal");
					this.OnCommentExpBaseMetalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VSA_Image1", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string VSA_Image1
		{
			get
			{
				return this._VSA_Image1;
			}
			set
			{
				if ((this._VSA_Image1 != value))
				{
					this.OnVSA_Image1Changing(value);
					this.SendPropertyChanging();
					this._VSA_Image1 = value;
					this.SendPropertyChanged("VSA_Image1");
					this.OnVSA_Image1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VSA_Image2", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string VSA_Image2
		{
			get
			{
				return this._VSA_Image2;
			}
			set
			{
				if ((this._VSA_Image2 != value))
				{
					this.OnVSA_Image2Changing(value);
					this.SendPropertyChanging();
					this._VSA_Image2 = value;
					this.SendPropertyChanged("VSA_Image2");
					this.OnVSA_Image2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VSA_Image3", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string VSA_Image3
		{
			get
			{
				return this._VSA_Image3;
			}
			set
			{
				if ((this._VSA_Image3 != value))
				{
					this.OnVSA_Image3Changing(value);
					this.SendPropertyChanging();
					this._VSA_Image3 = value;
					this.SendPropertyChanged("VSA_Image3");
					this.OnVSA_Image3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisualSurfaceSampleQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> VisualSurfaceSampleQty
		{
			get
			{
				return this._VisualSurfaceSampleQty;
			}
			set
			{
				if ((this._VisualSurfaceSampleQty != value))
				{
					this.OnVisualSurfaceSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._VisualSurfaceSampleQty = value;
					this.SendPropertyChanged("VisualSurfaceSampleQty");
					this.OnVisualSurfaceSampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Top_Pass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Top_Pass
		{
			get
			{
				return this._Top_Pass;
			}
			set
			{
				if ((this._Top_Pass != value))
				{
					this.OnTop_PassChanging(value);
					this.SendPropertyChanging();
					this._Top_Pass = value;
					this.SendPropertyChanged("Top_Pass");
					this.OnTop_PassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bottom_Pass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Bottom_Pass
		{
			get
			{
				return this._Bottom_Pass;
			}
			set
			{
				if ((this._Bottom_Pass != value))
				{
					this.OnBottom_PassChanging(value);
					this.SendPropertyChanging();
					this._Bottom_Pass = value;
					this.SendPropertyChanged("Bottom_Pass");
					this.OnBottom_PassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_Top", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_Top
		{
			get
			{
				return this._Comments_Top;
			}
			set
			{
				if ((this._Comments_Top != value))
				{
					this.OnComments_TopChanging(value);
					this.SendPropertyChanging();
					this._Comments_Top = value;
					this.SendPropertyChanged("Comments_Top");
					this.OnComments_TopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments_Bottom", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Comments_Bottom
		{
			get
			{
				return this._Comments_Bottom;
			}
			set
			{
				if ((this._Comments_Bottom != value))
				{
					this.OnComments_BottomChanging(value);
					this.SendPropertyChanging();
					this._Comments_Bottom = value;
					this.SendPropertyChanged("Comments_Bottom");
					this.OnComments_BottomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogosPartnumbersPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> LogosPartnumbersPass
		{
			get
			{
				return this._LogosPartnumbersPass;
			}
			set
			{
				if ((this._LogosPartnumbersPass != value))
				{
					this.OnLogosPartnumbersPassChanging(value);
					this.SendPropertyChanging();
					this._LogosPartnumbersPass = value;
					this.SendPropertyChanged("LogosPartnumbersPass");
					this.OnLogosPartnumbersPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogosPartnumbersComment", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string LogosPartnumbersComment
		{
			get
			{
				return this._LogosPartnumbersComment;
			}
			set
			{
				if ((this._LogosPartnumbersComment != value))
				{
					this.OnLogosPartnumbersCommentChanging(value);
					this.SendPropertyChanging();
					this._LogosPartnumbersComment = value;
					this.SendPropertyChanged("LogosPartnumbersComment");
					this.OnLogosPartnumbersCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Traceability", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Traceability
		{
			get
			{
				return this._Traceability;
			}
			set
			{
				if ((this._Traceability != value))
				{
					this.OnTraceabilityChanging(value);
					this.SendPropertyChanging();
					this._Traceability = value;
					this.SendPropertyChanged("Traceability");
					this.OnTraceabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderNumber", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SalesOrderNumber
		{
			get
			{
				return this._SalesOrderNumber;
			}
			set
			{
				if ((this._SalesOrderNumber != value))
				{
					this.OnSalesOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNumber = value;
					this.SendPropertyChanged("SalesOrderNumber");
					this.OnSalesOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPNID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MPNID
		{
			get
			{
				return this._MPNID;
			}
			set
			{
				if ((this._MPNID != value))
				{
					if (this._ManufacturerPart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMPNIDChanging(value);
					this.SendPropertyChanging();
					this._MPNID = value;
					this.SendPropertyChanged("MPNID");
					this.OnMPNIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPNID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CPNID
		{
			get
			{
				return this._CPNID;
			}
			set
			{
				if ((this._CPNID != value))
				{
					if (this._CustomerPart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCPNIDChanging(value);
					this.SendPropertyChanging();
					this._CPNID = value;
					this.SendPropertyChanged("CPNID");
					this.OnCPNIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EXTID
		{
			get
			{
				return this._EXTID;
			}
			set
			{
				if ((this._EXTID != value))
				{
					this.OnEXTIDChanging(value);
					this.SendPropertyChanging();
					this._EXTID = value;
					this.SendPropertyChanged("EXTID");
					this.OnEXTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeI", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeI
		{
			get
			{
				return this._Test_TypeI;
			}
			set
			{
				if ((this._Test_TypeI != value))
				{
					this.OnTest_TypeIChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeI = value;
					this.SendPropertyChanged("Test_TypeI");
					this.OnTest_TypeIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_TypeJ", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Test_TypeJ
		{
			get
			{
				return this._Test_TypeJ;
			}
			set
			{
				if ((this._Test_TypeJ != value))
				{
					this.OnTest_TypeJChanging(value);
					this.SendPropertyChanging();
					this._Test_TypeJ = value;
					this.SendPropertyChanged("Test_TypeJ");
					this.OnTest_TypeJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCodeUnltd", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DateCodeUnltd
		{
			get
			{
				return this._DateCodeUnltd;
			}
			set
			{
				if ((this._DateCodeUnltd != value))
				{
					this.OnDateCodeUnltdChanging(value);
					this.SendPropertyChanging();
					this._DateCodeUnltd = value;
					this.SendPropertyChanged("DateCodeUnltd");
					this.OnDateCodeUnltdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summaryNotes", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string summaryNotes
		{
			get
			{
				return this._summaryNotes;
			}
			set
			{
				if ((this._summaryNotes != value))
				{
					this.OnsummaryNotesChanging(value);
					this.SendPropertyChanging();
					this._summaryNotes = value;
					this.SendPropertyChanged("summaryNotes");
					this.OnsummaryNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orddet_line_fullpartnumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string orddet_line_fullpartnumber
		{
			get
			{
				return this._orddet_line_fullpartnumber;
			}
			set
			{
				if ((this._orddet_line_fullpartnumber != value))
				{
					this.Onorddet_line_fullpartnumberChanging(value);
					this.SendPropertyChanging();
					this._orddet_line_fullpartnumber = value;
					this.SendPropertyChanged("orddet_line_fullpartnumber");
					this.Onorddet_line_fullpartnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orddet_line_uid", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string orddet_line_uid
		{
			get
			{
				return this._orddet_line_uid;
			}
			set
			{
				if ((this._orddet_line_uid != value))
				{
					this.Onorddet_line_uidChanging(value);
					this.SendPropertyChanging();
					this._orddet_line_uid = value;
					this.SendPropertyChanged("orddet_line_uid");
					this.Onorddet_line_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid_sales", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string orderid_sales
		{
			get
			{
				return this._orderid_sales;
			}
			set
			{
				if ((this._orderid_sales != value))
				{
					this.Onorderid_salesChanging(value);
					this.SendPropertyChanging();
					this._orderid_sales = value;
					this.SendPropertyChanged("orderid_sales");
					this.Onorderid_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid_purchase", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string orderid_purchase
		{
			get
			{
				return this._orderid_purchase;
			}
			set
			{
				if ((this._orderid_purchase != value))
				{
					this.Onorderid_purchaseChanging(value);
					this.SendPropertyChanging();
					this._orderid_purchase = value;
					this.SendPropertyChanged("orderid_purchase");
					this.Onorderid_purchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agent_uid", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string agent_uid
		{
			get
			{
				return this._agent_uid;
			}
			set
			{
				if ((this._agent_uid != value))
				{
					this.Onagent_uidChanging(value);
					this.SendPropertyChanging();
					this._agent_uid = value;
					this.SendPropertyChanged("agent_uid");
					this.Onagent_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agent_name", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string agent_name
		{
			get
			{
				return this._agent_name;
			}
			set
			{
				if ((this._agent_name != value))
				{
					this.Onagent_nameChanging(value);
					this.SendPropertyChanging();
					this._agent_name = value;
					this.SendPropertyChanged("agent_name");
					this.Onagent_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_imported", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool is_imported
		{
			get
			{
				return this._is_imported;
			}
			set
			{
				if ((this._is_imported != value))
				{
					this.Onis_importedChanging(value);
					this.SendPropertyChanging();
					this._is_imported = value;
					this.SendPropertyChanged("is_imported");
					this.Onis_importedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_completed", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> is_completed
		{
			get
			{
				return this._is_completed;
			}
			set
			{
				if ((this._is_completed != value))
				{
					this.Onis_completedChanging(value);
					this.SendPropertyChanging();
					this._is_completed = value;
					this.SendPropertyChanged("is_completed");
					this.Onis_completedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_completed_by", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string completed_by
		{
			get
			{
				return this._completed_by;
			}
			set
			{
				if ((this._completed_by != value))
				{
					this.Oncompleted_byChanging(value);
					this.SendPropertyChanging();
					this._completed_by = value;
					this.SendPropertyChanged("completed_by");
					this.Oncompleted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_completed_date", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> completed_date
		{
			get
			{
				return this._completed_date;
			}
			set
			{
				if ((this._completed_date != value))
				{
					this.Oncompleted_dateChanging(value);
					this.SendPropertyChanging();
					this._completed_date = value;
					this.SendPropertyChanged("completed_date");
					this.Oncompleted_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_approved", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> is_approved
		{
			get
			{
				return this._is_approved;
			}
			set
			{
				if ((this._is_approved != value))
				{
					this.Onis_approvedChanging(value);
					this.SendPropertyChanging();
					this._is_approved = value;
					this.SendPropertyChanged("is_approved");
					this.Onis_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_by", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string approved_by
		{
			get
			{
				return this._approved_by;
			}
			set
			{
				if ((this._approved_by != value))
				{
					this.Onapproved_byChanging(value);
					this.SendPropertyChanging();
					this._approved_by = value;
					this.SendPropertyChanged("approved_by");
					this.Onapproved_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_date", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> approved_date
		{
			get
			{
				return this._approved_date;
			}
			set
			{
				if ((this._approved_date != value))
				{
					this.Onapproved_dateChanging(value);
					this.SendPropertyChanging();
					this._approved_date = value;
					this.SendPropertyChanged("approved_date");
					this.Onapproved_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_demo", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> is_demo
		{
			get
			{
				return this._is_demo;
			}
			set
			{
				if ((this._is_demo != value))
				{
					this.Onis_demoChanging(value);
					this.SendPropertyChanging();
					this._is_demo = value;
					this.SendPropertyChanged("is_demo");
					this.Onis_demoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demo_source_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> demo_source_id
		{
			get
			{
				return this._demo_source_id;
			}
			set
			{
				if ((this._demo_source_id != value))
				{
					this.Ondemo_source_idChanging(value);
					this.SendPropertyChanging();
					this._demo_source_id = value;
					this.SendPropertyChanged("demo_source_id");
					this.Ondemo_source_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_XRF", Storage="_XRFs", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<XRF> XRFs
		{
			get
			{
				return this._XRFs;
			}
			set
			{
				this._XRFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_DateCode", Storage="_DateCodes", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<DateCode> DateCodes
		{
			get
			{
				return this._DateCodes;
			}
			set
			{
				this._DateCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_Decapsulation", Storage="_Decapsulations", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<Decapsulation> Decapsulations
		{
			get
			{
				return this._Decapsulations;
			}
			set
			{
				this._Decapsulations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_EPROM", Storage="_EPROMs", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<EPROM> EPROMs
		{
			get
			{
				return this._EPROMs;
			}
			set
			{
				this._EPROMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_ExtendedTesting", Storage="_ExtendedTestings", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<ExtendedTesting> ExtendedTestings
		{
			get
			{
				return this._ExtendedTestings;
			}
			set
			{
				this._ExtendedTestings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_MarkingPermanency", Storage="_MarkingPermanencies", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<MarkingPermanency> MarkingPermanencies
		{
			get
			{
				return this._MarkingPermanencies;
			}
			set
			{
				this._MarkingPermanencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_SentryVI", Storage="_SentryVIs", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<SentryVI> SentryVIs
		{
			get
			{
				return this._SentryVIs;
			}
			set
			{
				this._SentryVIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_Solderability", Storage="_Solderabilities", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<Solderability> Solderabilities
		{
			get
			{
				return this._Solderabilities;
			}
			set
			{
				this._Solderabilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_XRay", Storage="_XRays", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<XRay> XRays
		{
			get
			{
				return this._XRays;
			}
			set
			{
				this._XRays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_Summary_new", Storage="_Summary_news", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<Summary_new> Summary_news
		{
			get
			{
				return this._Summary_news;
			}
			set
			{
				this._Summary_news.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_BasicElectrical", Storage="_BasicElectricals", ThisKey="ValidationReportID", OtherKey="ValidationReportID")]
		public EntitySet<BasicElectrical> BasicElectricals
		{
			get
			{
				return this._BasicElectricals;
			}
			set
			{
				this._BasicElectricals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerPart_ValidationReport", Storage="_CustomerPart", ThisKey="CPNID", OtherKey="CPNID", IsForeignKey=true)]
		public CustomerPart CustomerPart
		{
			get
			{
				return this._CustomerPart.Entity;
			}
			set
			{
				CustomerPart previousValue = this._CustomerPart.Entity;
				if (((previousValue != value) 
							|| (this._CustomerPart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerPart.Entity = null;
						previousValue.ValidationReports.Remove(this);
					}
					this._CustomerPart.Entity = value;
					if ((value != null))
					{
						value.ValidationReports.Add(this);
						this._CPNID = value.CPNID;
					}
					else
					{
						this._CPNID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerPart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManufacturerPart_ValidationReport", Storage="_ManufacturerPart", ThisKey="MPNID", OtherKey="MPNID", IsForeignKey=true)]
		public ManufacturerPart ManufacturerPart
		{
			get
			{
				return this._ManufacturerPart.Entity;
			}
			set
			{
				ManufacturerPart previousValue = this._ManufacturerPart.Entity;
				if (((previousValue != value) 
							|| (this._ManufacturerPart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ManufacturerPart.Entity = null;
						previousValue.ValidationReports.Remove(this);
					}
					this._ManufacturerPart.Entity = value;
					if ((value != null))
					{
						value.ValidationReports.Add(this);
						this._MPNID = value.MPNID;
					}
					else
					{
						this._MPNID = default(int);
					}
					this.SendPropertyChanged("ManufacturerPart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XRFs(XRF entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_XRFs(XRF entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_DateCodes(DateCode entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_DateCodes(DateCode entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_Decapsulations(Decapsulation entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_Decapsulations(Decapsulation entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_EPROMs(EPROM entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_EPROMs(EPROM entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_ExtendedTestings(ExtendedTesting entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_ExtendedTestings(ExtendedTesting entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_MarkingPermanencies(MarkingPermanency entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_MarkingPermanencies(MarkingPermanency entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_SentryVIs(SentryVI entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_SentryVIs(SentryVI entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_Solderabilities(Solderability entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_Solderabilities(Solderability entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_XRays(XRay entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_XRays(XRay entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_Summary_news(Summary_new entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_Summary_news(Summary_new entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
		
		private void attach_BasicElectricals(BasicElectrical entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = this;
		}
		
		private void detach_BasicElectricals(BasicElectrical entity)
		{
			this.SendPropertyChanging();
			entity.ValidationReport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XRay")]
	public partial class XRay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XRayID;
		
		private System.Nullable<int> _XRaySampleQty;
		
		private System.Nullable<short> _DiePresentPass;
		
		private string _DiePresentComments;
		
		private System.Nullable<short> _BondWiresPresentPass;
		
		private string _BondWiresPresentComment;
		
		private System.Nullable<short> _Damaged_MissingWiresPass;
		
		private string _Damaged_MissingWiresComment;
		
		private System.Nullable<short> _DieLeadUniformityPass;
		
		private string _DieLeadUniformityComment;
		
		private System.Nullable<short> _DieFRameSize_LocationPass;
		
		private string _XRay_Image1;
		
		private string _XRay_Image2;
		
		private string _XRay_Image3;
		
		private string _XRay_Image4;
		
		private System.Nullable<int> _ValidationReportID;
		
		private System.Data.Linq.Binary _upsize_ts;
		
		private string _DieFrameSize_LocationComment;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXRayIDChanging(int value);
    partial void OnXRayIDChanged();
    partial void OnXRaySampleQtyChanging(System.Nullable<int> value);
    partial void OnXRaySampleQtyChanged();
    partial void OnDiePresentPassChanging(System.Nullable<short> value);
    partial void OnDiePresentPassChanged();
    partial void OnDiePresentCommentsChanging(string value);
    partial void OnDiePresentCommentsChanged();
    partial void OnBondWiresPresentPassChanging(System.Nullable<short> value);
    partial void OnBondWiresPresentPassChanged();
    partial void OnBondWiresPresentCommentChanging(string value);
    partial void OnBondWiresPresentCommentChanged();
    partial void OnDamaged_MissingWiresPassChanging(System.Nullable<short> value);
    partial void OnDamaged_MissingWiresPassChanged();
    partial void OnDamaged_MissingWiresCommentChanging(string value);
    partial void OnDamaged_MissingWiresCommentChanged();
    partial void OnDieLeadUniformityPassChanging(System.Nullable<short> value);
    partial void OnDieLeadUniformityPassChanged();
    partial void OnDieLeadUniformityCommentChanging(string value);
    partial void OnDieLeadUniformityCommentChanged();
    partial void OnDieFRameSize_LocationPassChanging(System.Nullable<short> value);
    partial void OnDieFRameSize_LocationPassChanged();
    partial void OnXRay_Image1Changing(string value);
    partial void OnXRay_Image1Changed();
    partial void OnXRay_Image2Changing(string value);
    partial void OnXRay_Image2Changed();
    partial void OnXRay_Image3Changing(string value);
    partial void OnXRay_Image3Changed();
    partial void OnXRay_Image4Changing(string value);
    partial void OnXRay_Image4Changed();
    partial void OnValidationReportIDChanging(System.Nullable<int> value);
    partial void OnValidationReportIDChanged();
    partial void Onupsize_tsChanging(System.Data.Linq.Binary value);
    partial void Onupsize_tsChanged();
    partial void OnDieFrameSize_LocationCommentChanging(string value);
    partial void OnDieFrameSize_LocationCommentChanged();
    #endregion
		
		public XRay()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRayID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int XRayID
		{
			get
			{
				return this._XRayID;
			}
			set
			{
				if ((this._XRayID != value))
				{
					this.OnXRayIDChanging(value);
					this.SendPropertyChanging();
					this._XRayID = value;
					this.SendPropertyChanged("XRayID");
					this.OnXRayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRaySampleQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> XRaySampleQty
		{
			get
			{
				return this._XRaySampleQty;
			}
			set
			{
				if ((this._XRaySampleQty != value))
				{
					this.OnXRaySampleQtyChanging(value);
					this.SendPropertyChanging();
					this._XRaySampleQty = value;
					this.SendPropertyChanged("XRaySampleQty");
					this.OnXRaySampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiePresentPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DiePresentPass
		{
			get
			{
				return this._DiePresentPass;
			}
			set
			{
				if ((this._DiePresentPass != value))
				{
					this.OnDiePresentPassChanging(value);
					this.SendPropertyChanging();
					this._DiePresentPass = value;
					this.SendPropertyChanged("DiePresentPass");
					this.OnDiePresentPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiePresentComments", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DiePresentComments
		{
			get
			{
				return this._DiePresentComments;
			}
			set
			{
				if ((this._DiePresentComments != value))
				{
					this.OnDiePresentCommentsChanging(value);
					this.SendPropertyChanging();
					this._DiePresentComments = value;
					this.SendPropertyChanged("DiePresentComments");
					this.OnDiePresentCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BondWiresPresentPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> BondWiresPresentPass
		{
			get
			{
				return this._BondWiresPresentPass;
			}
			set
			{
				if ((this._BondWiresPresentPass != value))
				{
					this.OnBondWiresPresentPassChanging(value);
					this.SendPropertyChanging();
					this._BondWiresPresentPass = value;
					this.SendPropertyChanged("BondWiresPresentPass");
					this.OnBondWiresPresentPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BondWiresPresentComment", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string BondWiresPresentComment
		{
			get
			{
				return this._BondWiresPresentComment;
			}
			set
			{
				if ((this._BondWiresPresentComment != value))
				{
					this.OnBondWiresPresentCommentChanging(value);
					this.SendPropertyChanging();
					this._BondWiresPresentComment = value;
					this.SendPropertyChanged("BondWiresPresentComment");
					this.OnBondWiresPresentCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damaged_MissingWiresPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Damaged_MissingWiresPass
		{
			get
			{
				return this._Damaged_MissingWiresPass;
			}
			set
			{
				if ((this._Damaged_MissingWiresPass != value))
				{
					this.OnDamaged_MissingWiresPassChanging(value);
					this.SendPropertyChanging();
					this._Damaged_MissingWiresPass = value;
					this.SendPropertyChanged("Damaged_MissingWiresPass");
					this.OnDamaged_MissingWiresPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damaged_MissingWiresComment", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Damaged_MissingWiresComment
		{
			get
			{
				return this._Damaged_MissingWiresComment;
			}
			set
			{
				if ((this._Damaged_MissingWiresComment != value))
				{
					this.OnDamaged_MissingWiresCommentChanging(value);
					this.SendPropertyChanging();
					this._Damaged_MissingWiresComment = value;
					this.SendPropertyChanged("Damaged_MissingWiresComment");
					this.OnDamaged_MissingWiresCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieLeadUniformityPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DieLeadUniformityPass
		{
			get
			{
				return this._DieLeadUniformityPass;
			}
			set
			{
				if ((this._DieLeadUniformityPass != value))
				{
					this.OnDieLeadUniformityPassChanging(value);
					this.SendPropertyChanging();
					this._DieLeadUniformityPass = value;
					this.SendPropertyChanged("DieLeadUniformityPass");
					this.OnDieLeadUniformityPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieLeadUniformityComment", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DieLeadUniformityComment
		{
			get
			{
				return this._DieLeadUniformityComment;
			}
			set
			{
				if ((this._DieLeadUniformityComment != value))
				{
					this.OnDieLeadUniformityCommentChanging(value);
					this.SendPropertyChanging();
					this._DieLeadUniformityComment = value;
					this.SendPropertyChanged("DieLeadUniformityComment");
					this.OnDieLeadUniformityCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieFRameSize_LocationPass", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DieFRameSize_LocationPass
		{
			get
			{
				return this._DieFRameSize_LocationPass;
			}
			set
			{
				if ((this._DieFRameSize_LocationPass != value))
				{
					this.OnDieFRameSize_LocationPassChanging(value);
					this.SendPropertyChanging();
					this._DieFRameSize_LocationPass = value;
					this.SendPropertyChanged("DieFRameSize_LocationPass");
					this.OnDieFRameSize_LocationPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRay_Image1", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string XRay_Image1
		{
			get
			{
				return this._XRay_Image1;
			}
			set
			{
				if ((this._XRay_Image1 != value))
				{
					this.OnXRay_Image1Changing(value);
					this.SendPropertyChanging();
					this._XRay_Image1 = value;
					this.SendPropertyChanged("XRay_Image1");
					this.OnXRay_Image1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRay_Image2", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string XRay_Image2
		{
			get
			{
				return this._XRay_Image2;
			}
			set
			{
				if ((this._XRay_Image2 != value))
				{
					this.OnXRay_Image2Changing(value);
					this.SendPropertyChanging();
					this._XRay_Image2 = value;
					this.SendPropertyChanged("XRay_Image2");
					this.OnXRay_Image2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRay_Image3", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string XRay_Image3
		{
			get
			{
				return this._XRay_Image3;
			}
			set
			{
				if ((this._XRay_Image3 != value))
				{
					this.OnXRay_Image3Changing(value);
					this.SendPropertyChanging();
					this._XRay_Image3 = value;
					this.SendPropertyChanged("XRay_Image3");
					this.OnXRay_Image3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRay_Image4", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string XRay_Image4
		{
			get
			{
				return this._XRay_Image4;
			}
			set
			{
				if ((this._XRay_Image4 != value))
				{
					this.OnXRay_Image4Changing(value);
					this.SendPropertyChanging();
					this._XRay_Image4 = value;
					this.SendPropertyChanged("XRay_Image4");
					this.OnXRay_Image4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upsize_ts", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary upsize_ts
		{
			get
			{
				return this._upsize_ts;
			}
			set
			{
				if ((this._upsize_ts != value))
				{
					this.Onupsize_tsChanging(value);
					this.SendPropertyChanging();
					this._upsize_ts = value;
					this.SendPropertyChanged("upsize_ts");
					this.Onupsize_tsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieFrameSize_LocationComment", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DieFrameSize_LocationComment
		{
			get
			{
				return this._DieFrameSize_LocationComment;
			}
			set
			{
				if ((this._DieFrameSize_LocationComment != value))
				{
					this.OnDieFrameSize_LocationCommentChanging(value);
					this.SendPropertyChanging();
					this._DieFrameSize_LocationComment = value;
					this.SendPropertyChanged("DieFrameSize_LocationComment");
					this.OnDieFrameSize_LocationCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_XRay", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true)]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.XRays.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.XRays.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Summary_new")]
	public partial class Summary_new : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SummaryID;
		
		private System.DateTime _date_created;
		
		private int _ValidationReportID;
		
		private string _ExtVisLogosPartsResult;
		
		private string _ExtVisLogosPartsComment;
		
		private string _ExtVisDimensionalResult;
		
		private string _ExtVisDimensionalComment;
		
		private string _ExtVisLeadPkgResult;
		
		private string _ExtVisLeadPkgComment;
		
		private string _ExtVisSurfaceAltResult;
		
		private string _ExtVisSurfaceAltComment;
		
		private string _MarkingAcetoneResult;
		
		private string _MarkingAcetoneComment;
		
		private string _MarkingScrapeResult;
		
		private string _MarkingScrapeComment;
		
		private string _MarkingAlterationResult;
		
		private string _MarkingAlterationComment;
		
		private string _XrayDieWireResult;
		
		private string _XrayDieWireComment;
		
		private string _HeatedMethResult;
		
		private string _HeatedMethComment;
		
		private string _HeatedDynaResult;
		
		private string _HeatedDynaComment;
		
		private string _HeatedSecondaryResult;
		
		private string _HeatedSecondaryComment;
		
		private string _DecapWireBondResult;
		
		private string _DecapWireBondComment;
		
		private string _DecapDieMarkingResult;
		
		private string _DecapDieMarkingComment;
		
		private string _XRFLeadMatsResult;
		
		private string _XRFLeadMatsComment;
		
		private string _XRFForeignResult;
		
		private string _XRFForeignComment;
		
		private string _SolPassedResult;
		
		private string _SolPassedComment;
		
		private string _SolWettingResult;
		
		private string _SolWettingComment;
		
		private string _BasicElectricalResult;
		
		private string _BasicElectricalComment;
		
		private string _SentryVIResult;
		
		private string _SentryVIComment;
		
		private string _ExtendedTestingResult;
		
		private string _ExtendedTestingComment;
		
		private string _EPROMChecksumResult;
		
		private string _EPROMCheckSumComment;
		
		private string _EPROMProgramValidationResult;
		
		private string _EPROMProgramValidationComment;
		
		private string _MoistureBakingResult;
		
		private string _MoistureBakingComment;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSummaryIDChanging(int value);
    partial void OnSummaryIDChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void OnValidationReportIDChanging(int value);
    partial void OnValidationReportIDChanged();
    partial void OnExtVisLogosPartsResultChanging(string value);
    partial void OnExtVisLogosPartsResultChanged();
    partial void OnExtVisLogosPartsCommentChanging(string value);
    partial void OnExtVisLogosPartsCommentChanged();
    partial void OnExtVisDimensionalResultChanging(string value);
    partial void OnExtVisDimensionalResultChanged();
    partial void OnExtVisDimensionalCommentChanging(string value);
    partial void OnExtVisDimensionalCommentChanged();
    partial void OnExtVisLeadPkgResultChanging(string value);
    partial void OnExtVisLeadPkgResultChanged();
    partial void OnExtVisLeadPkgCommentChanging(string value);
    partial void OnExtVisLeadPkgCommentChanged();
    partial void OnExtVisSurfaceAltResultChanging(string value);
    partial void OnExtVisSurfaceAltResultChanged();
    partial void OnExtVisSurfaceAltCommentChanging(string value);
    partial void OnExtVisSurfaceAltCommentChanged();
    partial void OnMarkingAcetoneResultChanging(string value);
    partial void OnMarkingAcetoneResultChanged();
    partial void OnMarkingAcetoneCommentChanging(string value);
    partial void OnMarkingAcetoneCommentChanged();
    partial void OnMarkingScrapeResultChanging(string value);
    partial void OnMarkingScrapeResultChanged();
    partial void OnMarkingScrapeCommentChanging(string value);
    partial void OnMarkingScrapeCommentChanged();
    partial void OnMarkingAlterationResultChanging(string value);
    partial void OnMarkingAlterationResultChanged();
    partial void OnMarkingAlterationCommentChanging(string value);
    partial void OnMarkingAlterationCommentChanged();
    partial void OnXrayDieWireResultChanging(string value);
    partial void OnXrayDieWireResultChanged();
    partial void OnXrayDieWireCommentChanging(string value);
    partial void OnXrayDieWireCommentChanged();
    partial void OnHeatedMethResultChanging(string value);
    partial void OnHeatedMethResultChanged();
    partial void OnHeatedMethCommentChanging(string value);
    partial void OnHeatedMethCommentChanged();
    partial void OnHeatedDynaResultChanging(string value);
    partial void OnHeatedDynaResultChanged();
    partial void OnHeatedDynaCommentChanging(string value);
    partial void OnHeatedDynaCommentChanged();
    partial void OnHeatedSecondaryResultChanging(string value);
    partial void OnHeatedSecondaryResultChanged();
    partial void OnHeatedSecondaryCommentChanging(string value);
    partial void OnHeatedSecondaryCommentChanged();
    partial void OnDecapWireBondResultChanging(string value);
    partial void OnDecapWireBondResultChanged();
    partial void OnDecapWireBondCommentChanging(string value);
    partial void OnDecapWireBondCommentChanged();
    partial void OnDecapDieMarkingResultChanging(string value);
    partial void OnDecapDieMarkingResultChanged();
    partial void OnDecapDieMarkingCommentChanging(string value);
    partial void OnDecapDieMarkingCommentChanged();
    partial void OnXRFLeadMatsResultChanging(string value);
    partial void OnXRFLeadMatsResultChanged();
    partial void OnXRFLeadMatsCommentChanging(string value);
    partial void OnXRFLeadMatsCommentChanged();
    partial void OnXRFForeignResultChanging(string value);
    partial void OnXRFForeignResultChanged();
    partial void OnXRFForeignCommentChanging(string value);
    partial void OnXRFForeignCommentChanged();
    partial void OnSolPassedResultChanging(string value);
    partial void OnSolPassedResultChanged();
    partial void OnSolPassedCommentChanging(string value);
    partial void OnSolPassedCommentChanged();
    partial void OnSolWettingResultChanging(string value);
    partial void OnSolWettingResultChanged();
    partial void OnSolWettingCommentChanging(string value);
    partial void OnSolWettingCommentChanged();
    partial void OnBasicElectricalResultChanging(string value);
    partial void OnBasicElectricalResultChanged();
    partial void OnBasicElectricalCommentChanging(string value);
    partial void OnBasicElectricalCommentChanged();
    partial void OnSentryVIResultChanging(string value);
    partial void OnSentryVIResultChanged();
    partial void OnSentryVICommentChanging(string value);
    partial void OnSentryVICommentChanged();
    partial void OnExtendedTestingResultChanging(string value);
    partial void OnExtendedTestingResultChanged();
    partial void OnExtendedTestingCommentChanging(string value);
    partial void OnExtendedTestingCommentChanged();
    partial void OnEPROMChecksumResultChanging(string value);
    partial void OnEPROMChecksumResultChanged();
    partial void OnEPROMCheckSumCommentChanging(string value);
    partial void OnEPROMCheckSumCommentChanged();
    partial void OnEPROMProgramValidationResultChanging(string value);
    partial void OnEPROMProgramValidationResultChanged();
    partial void OnEPROMProgramValidationCommentChanging(string value);
    partial void OnEPROMProgramValidationCommentChanged();
    partial void OnMoistureBakingResultChanging(string value);
    partial void OnMoistureBakingResultChanged();
    partial void OnMoistureBakingCommentChanging(string value);
    partial void OnMoistureBakingCommentChanged();
    #endregion
		
		public Summary_new()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SummaryID
		{
			get
			{
				return this._SummaryID;
			}
			set
			{
				if ((this._SummaryID != value))
				{
					this.OnSummaryIDChanging(value);
					this.SendPropertyChanging();
					this._SummaryID = value;
					this.SendPropertyChanged("SummaryID");
					this.OnSummaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int NOT NULL")]
		public int ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisLogosPartsResult", DbType="NVarChar(50)")]
		public string ExtVisLogosPartsResult
		{
			get
			{
				return this._ExtVisLogosPartsResult;
			}
			set
			{
				if ((this._ExtVisLogosPartsResult != value))
				{
					this.OnExtVisLogosPartsResultChanging(value);
					this.SendPropertyChanging();
					this._ExtVisLogosPartsResult = value;
					this.SendPropertyChanged("ExtVisLogosPartsResult");
					this.OnExtVisLogosPartsResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisLogosPartsComment", DbType="NVarChar(255)")]
		public string ExtVisLogosPartsComment
		{
			get
			{
				return this._ExtVisLogosPartsComment;
			}
			set
			{
				if ((this._ExtVisLogosPartsComment != value))
				{
					this.OnExtVisLogosPartsCommentChanging(value);
					this.SendPropertyChanging();
					this._ExtVisLogosPartsComment = value;
					this.SendPropertyChanged("ExtVisLogosPartsComment");
					this.OnExtVisLogosPartsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisDimensionalResult", DbType="NVarChar(50)")]
		public string ExtVisDimensionalResult
		{
			get
			{
				return this._ExtVisDimensionalResult;
			}
			set
			{
				if ((this._ExtVisDimensionalResult != value))
				{
					this.OnExtVisDimensionalResultChanging(value);
					this.SendPropertyChanging();
					this._ExtVisDimensionalResult = value;
					this.SendPropertyChanged("ExtVisDimensionalResult");
					this.OnExtVisDimensionalResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisDimensionalComment", DbType="NVarChar(255)")]
		public string ExtVisDimensionalComment
		{
			get
			{
				return this._ExtVisDimensionalComment;
			}
			set
			{
				if ((this._ExtVisDimensionalComment != value))
				{
					this.OnExtVisDimensionalCommentChanging(value);
					this.SendPropertyChanging();
					this._ExtVisDimensionalComment = value;
					this.SendPropertyChanged("ExtVisDimensionalComment");
					this.OnExtVisDimensionalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisLeadPkgResult", DbType="NVarChar(50)")]
		public string ExtVisLeadPkgResult
		{
			get
			{
				return this._ExtVisLeadPkgResult;
			}
			set
			{
				if ((this._ExtVisLeadPkgResult != value))
				{
					this.OnExtVisLeadPkgResultChanging(value);
					this.SendPropertyChanging();
					this._ExtVisLeadPkgResult = value;
					this.SendPropertyChanged("ExtVisLeadPkgResult");
					this.OnExtVisLeadPkgResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisLeadPkgComment", DbType="NVarChar(255)")]
		public string ExtVisLeadPkgComment
		{
			get
			{
				return this._ExtVisLeadPkgComment;
			}
			set
			{
				if ((this._ExtVisLeadPkgComment != value))
				{
					this.OnExtVisLeadPkgCommentChanging(value);
					this.SendPropertyChanging();
					this._ExtVisLeadPkgComment = value;
					this.SendPropertyChanged("ExtVisLeadPkgComment");
					this.OnExtVisLeadPkgCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisSurfaceAltResult", DbType="NVarChar(50)")]
		public string ExtVisSurfaceAltResult
		{
			get
			{
				return this._ExtVisSurfaceAltResult;
			}
			set
			{
				if ((this._ExtVisSurfaceAltResult != value))
				{
					this.OnExtVisSurfaceAltResultChanging(value);
					this.SendPropertyChanging();
					this._ExtVisSurfaceAltResult = value;
					this.SendPropertyChanged("ExtVisSurfaceAltResult");
					this.OnExtVisSurfaceAltResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtVisSurfaceAltComment", DbType="NVarChar(255)")]
		public string ExtVisSurfaceAltComment
		{
			get
			{
				return this._ExtVisSurfaceAltComment;
			}
			set
			{
				if ((this._ExtVisSurfaceAltComment != value))
				{
					this.OnExtVisSurfaceAltCommentChanging(value);
					this.SendPropertyChanging();
					this._ExtVisSurfaceAltComment = value;
					this.SendPropertyChanged("ExtVisSurfaceAltComment");
					this.OnExtVisSurfaceAltCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingAcetoneResult", DbType="NVarChar(50)")]
		public string MarkingAcetoneResult
		{
			get
			{
				return this._MarkingAcetoneResult;
			}
			set
			{
				if ((this._MarkingAcetoneResult != value))
				{
					this.OnMarkingAcetoneResultChanging(value);
					this.SendPropertyChanging();
					this._MarkingAcetoneResult = value;
					this.SendPropertyChanged("MarkingAcetoneResult");
					this.OnMarkingAcetoneResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingAcetoneComment", DbType="NVarChar(255)")]
		public string MarkingAcetoneComment
		{
			get
			{
				return this._MarkingAcetoneComment;
			}
			set
			{
				if ((this._MarkingAcetoneComment != value))
				{
					this.OnMarkingAcetoneCommentChanging(value);
					this.SendPropertyChanging();
					this._MarkingAcetoneComment = value;
					this.SendPropertyChanged("MarkingAcetoneComment");
					this.OnMarkingAcetoneCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingScrapeResult", DbType="NVarChar(50)")]
		public string MarkingScrapeResult
		{
			get
			{
				return this._MarkingScrapeResult;
			}
			set
			{
				if ((this._MarkingScrapeResult != value))
				{
					this.OnMarkingScrapeResultChanging(value);
					this.SendPropertyChanging();
					this._MarkingScrapeResult = value;
					this.SendPropertyChanged("MarkingScrapeResult");
					this.OnMarkingScrapeResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingScrapeComment", DbType="NVarChar(255)")]
		public string MarkingScrapeComment
		{
			get
			{
				return this._MarkingScrapeComment;
			}
			set
			{
				if ((this._MarkingScrapeComment != value))
				{
					this.OnMarkingScrapeCommentChanging(value);
					this.SendPropertyChanging();
					this._MarkingScrapeComment = value;
					this.SendPropertyChanged("MarkingScrapeComment");
					this.OnMarkingScrapeCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingAlterationResult", DbType="NVarChar(50)")]
		public string MarkingAlterationResult
		{
			get
			{
				return this._MarkingAlterationResult;
			}
			set
			{
				if ((this._MarkingAlterationResult != value))
				{
					this.OnMarkingAlterationResultChanging(value);
					this.SendPropertyChanging();
					this._MarkingAlterationResult = value;
					this.SendPropertyChanged("MarkingAlterationResult");
					this.OnMarkingAlterationResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkingAlterationComment", DbType="NVarChar(255)")]
		public string MarkingAlterationComment
		{
			get
			{
				return this._MarkingAlterationComment;
			}
			set
			{
				if ((this._MarkingAlterationComment != value))
				{
					this.OnMarkingAlterationCommentChanging(value);
					this.SendPropertyChanging();
					this._MarkingAlterationComment = value;
					this.SendPropertyChanged("MarkingAlterationComment");
					this.OnMarkingAlterationCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XrayDieWireResult", DbType="NVarChar(50)")]
		public string XrayDieWireResult
		{
			get
			{
				return this._XrayDieWireResult;
			}
			set
			{
				if ((this._XrayDieWireResult != value))
				{
					this.OnXrayDieWireResultChanging(value);
					this.SendPropertyChanging();
					this._XrayDieWireResult = value;
					this.SendPropertyChanged("XrayDieWireResult");
					this.OnXrayDieWireResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XrayDieWireComment", DbType="NVarChar(255)")]
		public string XrayDieWireComment
		{
			get
			{
				return this._XrayDieWireComment;
			}
			set
			{
				if ((this._XrayDieWireComment != value))
				{
					this.OnXrayDieWireCommentChanging(value);
					this.SendPropertyChanging();
					this._XrayDieWireComment = value;
					this.SendPropertyChanged("XrayDieWireComment");
					this.OnXrayDieWireCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedMethResult", DbType="NVarChar(50)")]
		public string HeatedMethResult
		{
			get
			{
				return this._HeatedMethResult;
			}
			set
			{
				if ((this._HeatedMethResult != value))
				{
					this.OnHeatedMethResultChanging(value);
					this.SendPropertyChanging();
					this._HeatedMethResult = value;
					this.SendPropertyChanged("HeatedMethResult");
					this.OnHeatedMethResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedMethComment", DbType="NVarChar(255)")]
		public string HeatedMethComment
		{
			get
			{
				return this._HeatedMethComment;
			}
			set
			{
				if ((this._HeatedMethComment != value))
				{
					this.OnHeatedMethCommentChanging(value);
					this.SendPropertyChanging();
					this._HeatedMethComment = value;
					this.SendPropertyChanged("HeatedMethComment");
					this.OnHeatedMethCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedDynaResult", DbType="NVarChar(50)")]
		public string HeatedDynaResult
		{
			get
			{
				return this._HeatedDynaResult;
			}
			set
			{
				if ((this._HeatedDynaResult != value))
				{
					this.OnHeatedDynaResultChanging(value);
					this.SendPropertyChanging();
					this._HeatedDynaResult = value;
					this.SendPropertyChanged("HeatedDynaResult");
					this.OnHeatedDynaResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedDynaComment", DbType="NVarChar(255)")]
		public string HeatedDynaComment
		{
			get
			{
				return this._HeatedDynaComment;
			}
			set
			{
				if ((this._HeatedDynaComment != value))
				{
					this.OnHeatedDynaCommentChanging(value);
					this.SendPropertyChanging();
					this._HeatedDynaComment = value;
					this.SendPropertyChanged("HeatedDynaComment");
					this.OnHeatedDynaCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedSecondaryResult", DbType="NVarChar(50)")]
		public string HeatedSecondaryResult
		{
			get
			{
				return this._HeatedSecondaryResult;
			}
			set
			{
				if ((this._HeatedSecondaryResult != value))
				{
					this.OnHeatedSecondaryResultChanging(value);
					this.SendPropertyChanging();
					this._HeatedSecondaryResult = value;
					this.SendPropertyChanged("HeatedSecondaryResult");
					this.OnHeatedSecondaryResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatedSecondaryComment", DbType="NVarChar(255)")]
		public string HeatedSecondaryComment
		{
			get
			{
				return this._HeatedSecondaryComment;
			}
			set
			{
				if ((this._HeatedSecondaryComment != value))
				{
					this.OnHeatedSecondaryCommentChanging(value);
					this.SendPropertyChanging();
					this._HeatedSecondaryComment = value;
					this.SendPropertyChanged("HeatedSecondaryComment");
					this.OnHeatedSecondaryCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecapWireBondResult", DbType="NVarChar(50)")]
		public string DecapWireBondResult
		{
			get
			{
				return this._DecapWireBondResult;
			}
			set
			{
				if ((this._DecapWireBondResult != value))
				{
					this.OnDecapWireBondResultChanging(value);
					this.SendPropertyChanging();
					this._DecapWireBondResult = value;
					this.SendPropertyChanged("DecapWireBondResult");
					this.OnDecapWireBondResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecapWireBondComment", DbType="NVarChar(255)")]
		public string DecapWireBondComment
		{
			get
			{
				return this._DecapWireBondComment;
			}
			set
			{
				if ((this._DecapWireBondComment != value))
				{
					this.OnDecapWireBondCommentChanging(value);
					this.SendPropertyChanging();
					this._DecapWireBondComment = value;
					this.SendPropertyChanged("DecapWireBondComment");
					this.OnDecapWireBondCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecapDieMarkingResult", DbType="NVarChar(50)")]
		public string DecapDieMarkingResult
		{
			get
			{
				return this._DecapDieMarkingResult;
			}
			set
			{
				if ((this._DecapDieMarkingResult != value))
				{
					this.OnDecapDieMarkingResultChanging(value);
					this.SendPropertyChanging();
					this._DecapDieMarkingResult = value;
					this.SendPropertyChanged("DecapDieMarkingResult");
					this.OnDecapDieMarkingResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecapDieMarkingComment", DbType="NVarChar(255)")]
		public string DecapDieMarkingComment
		{
			get
			{
				return this._DecapDieMarkingComment;
			}
			set
			{
				if ((this._DecapDieMarkingComment != value))
				{
					this.OnDecapDieMarkingCommentChanging(value);
					this.SendPropertyChanging();
					this._DecapDieMarkingComment = value;
					this.SendPropertyChanged("DecapDieMarkingComment");
					this.OnDecapDieMarkingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFLeadMatsResult", DbType="NVarChar(50)")]
		public string XRFLeadMatsResult
		{
			get
			{
				return this._XRFLeadMatsResult;
			}
			set
			{
				if ((this._XRFLeadMatsResult != value))
				{
					this.OnXRFLeadMatsResultChanging(value);
					this.SendPropertyChanging();
					this._XRFLeadMatsResult = value;
					this.SendPropertyChanged("XRFLeadMatsResult");
					this.OnXRFLeadMatsResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFLeadMatsComment", DbType="NVarChar(255)")]
		public string XRFLeadMatsComment
		{
			get
			{
				return this._XRFLeadMatsComment;
			}
			set
			{
				if ((this._XRFLeadMatsComment != value))
				{
					this.OnXRFLeadMatsCommentChanging(value);
					this.SendPropertyChanging();
					this._XRFLeadMatsComment = value;
					this.SendPropertyChanged("XRFLeadMatsComment");
					this.OnXRFLeadMatsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFForeignResult", DbType="NVarChar(50)")]
		public string XRFForeignResult
		{
			get
			{
				return this._XRFForeignResult;
			}
			set
			{
				if ((this._XRFForeignResult != value))
				{
					this.OnXRFForeignResultChanging(value);
					this.SendPropertyChanging();
					this._XRFForeignResult = value;
					this.SendPropertyChanged("XRFForeignResult");
					this.OnXRFForeignResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XRFForeignComment", DbType="NVarChar(255)")]
		public string XRFForeignComment
		{
			get
			{
				return this._XRFForeignComment;
			}
			set
			{
				if ((this._XRFForeignComment != value))
				{
					this.OnXRFForeignCommentChanging(value);
					this.SendPropertyChanging();
					this._XRFForeignComment = value;
					this.SendPropertyChanged("XRFForeignComment");
					this.OnXRFForeignCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolPassedResult", DbType="NVarChar(50)")]
		public string SolPassedResult
		{
			get
			{
				return this._SolPassedResult;
			}
			set
			{
				if ((this._SolPassedResult != value))
				{
					this.OnSolPassedResultChanging(value);
					this.SendPropertyChanging();
					this._SolPassedResult = value;
					this.SendPropertyChanged("SolPassedResult");
					this.OnSolPassedResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolPassedComment", DbType="NVarChar(255)")]
		public string SolPassedComment
		{
			get
			{
				return this._SolPassedComment;
			}
			set
			{
				if ((this._SolPassedComment != value))
				{
					this.OnSolPassedCommentChanging(value);
					this.SendPropertyChanging();
					this._SolPassedComment = value;
					this.SendPropertyChanged("SolPassedComment");
					this.OnSolPassedCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolWettingResult", DbType="NVarChar(50)")]
		public string SolWettingResult
		{
			get
			{
				return this._SolWettingResult;
			}
			set
			{
				if ((this._SolWettingResult != value))
				{
					this.OnSolWettingResultChanging(value);
					this.SendPropertyChanging();
					this._SolWettingResult = value;
					this.SendPropertyChanged("SolWettingResult");
					this.OnSolWettingResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolWettingComment", DbType="NVarChar(255)")]
		public string SolWettingComment
		{
			get
			{
				return this._SolWettingComment;
			}
			set
			{
				if ((this._SolWettingComment != value))
				{
					this.OnSolWettingCommentChanging(value);
					this.SendPropertyChanging();
					this._SolWettingComment = value;
					this.SendPropertyChanged("SolWettingComment");
					this.OnSolWettingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicElectricalResult", DbType="NVarChar(50)")]
		public string BasicElectricalResult
		{
			get
			{
				return this._BasicElectricalResult;
			}
			set
			{
				if ((this._BasicElectricalResult != value))
				{
					this.OnBasicElectricalResultChanging(value);
					this.SendPropertyChanging();
					this._BasicElectricalResult = value;
					this.SendPropertyChanged("BasicElectricalResult");
					this.OnBasicElectricalResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicElectricalComment", DbType="NVarChar(255)")]
		public string BasicElectricalComment
		{
			get
			{
				return this._BasicElectricalComment;
			}
			set
			{
				if ((this._BasicElectricalComment != value))
				{
					this.OnBasicElectricalCommentChanging(value);
					this.SendPropertyChanging();
					this._BasicElectricalComment = value;
					this.SendPropertyChanged("BasicElectricalComment");
					this.OnBasicElectricalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentryVIResult", DbType="NVarChar(50)")]
		public string SentryVIResult
		{
			get
			{
				return this._SentryVIResult;
			}
			set
			{
				if ((this._SentryVIResult != value))
				{
					this.OnSentryVIResultChanging(value);
					this.SendPropertyChanging();
					this._SentryVIResult = value;
					this.SendPropertyChanged("SentryVIResult");
					this.OnSentryVIResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentryVIComment", DbType="NVarChar(255)")]
		public string SentryVIComment
		{
			get
			{
				return this._SentryVIComment;
			}
			set
			{
				if ((this._SentryVIComment != value))
				{
					this.OnSentryVICommentChanging(value);
					this.SendPropertyChanging();
					this._SentryVIComment = value;
					this.SendPropertyChanged("SentryVIComment");
					this.OnSentryVICommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedTestingResult", DbType="NVarChar(50)")]
		public string ExtendedTestingResult
		{
			get
			{
				return this._ExtendedTestingResult;
			}
			set
			{
				if ((this._ExtendedTestingResult != value))
				{
					this.OnExtendedTestingResultChanging(value);
					this.SendPropertyChanging();
					this._ExtendedTestingResult = value;
					this.SendPropertyChanged("ExtendedTestingResult");
					this.OnExtendedTestingResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedTestingComment", DbType="NVarChar(255)")]
		public string ExtendedTestingComment
		{
			get
			{
				return this._ExtendedTestingComment;
			}
			set
			{
				if ((this._ExtendedTestingComment != value))
				{
					this.OnExtendedTestingCommentChanging(value);
					this.SendPropertyChanging();
					this._ExtendedTestingComment = value;
					this.SendPropertyChanged("ExtendedTestingComment");
					this.OnExtendedTestingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMChecksumResult", DbType="NVarChar(50)")]
		public string EPROMChecksumResult
		{
			get
			{
				return this._EPROMChecksumResult;
			}
			set
			{
				if ((this._EPROMChecksumResult != value))
				{
					this.OnEPROMChecksumResultChanging(value);
					this.SendPropertyChanging();
					this._EPROMChecksumResult = value;
					this.SendPropertyChanged("EPROMChecksumResult");
					this.OnEPROMChecksumResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMCheckSumComment", DbType="NVarChar(255)")]
		public string EPROMCheckSumComment
		{
			get
			{
				return this._EPROMCheckSumComment;
			}
			set
			{
				if ((this._EPROMCheckSumComment != value))
				{
					this.OnEPROMCheckSumCommentChanging(value);
					this.SendPropertyChanging();
					this._EPROMCheckSumComment = value;
					this.SendPropertyChanged("EPROMCheckSumComment");
					this.OnEPROMCheckSumCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMProgramValidationResult", DbType="NVarChar(50)")]
		public string EPROMProgramValidationResult
		{
			get
			{
				return this._EPROMProgramValidationResult;
			}
			set
			{
				if ((this._EPROMProgramValidationResult != value))
				{
					this.OnEPROMProgramValidationResultChanging(value);
					this.SendPropertyChanging();
					this._EPROMProgramValidationResult = value;
					this.SendPropertyChanged("EPROMProgramValidationResult");
					this.OnEPROMProgramValidationResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPROMProgramValidationComment", DbType="NVarChar(255)")]
		public string EPROMProgramValidationComment
		{
			get
			{
				return this._EPROMProgramValidationComment;
			}
			set
			{
				if ((this._EPROMProgramValidationComment != value))
				{
					this.OnEPROMProgramValidationCommentChanging(value);
					this.SendPropertyChanging();
					this._EPROMProgramValidationComment = value;
					this.SendPropertyChanged("EPROMProgramValidationComment");
					this.OnEPROMProgramValidationCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoistureBakingResult", DbType="NVarChar(255)")]
		public string MoistureBakingResult
		{
			get
			{
				return this._MoistureBakingResult;
			}
			set
			{
				if ((this._MoistureBakingResult != value))
				{
					this.OnMoistureBakingResultChanging(value);
					this.SendPropertyChanging();
					this._MoistureBakingResult = value;
					this.SendPropertyChanged("MoistureBakingResult");
					this.OnMoistureBakingResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoistureBakingComment", DbType="NVarChar(255)")]
		public string MoistureBakingComment
		{
			get
			{
				return this._MoistureBakingComment;
			}
			set
			{
				if ((this._MoistureBakingComment != value))
				{
					this.OnMoistureBakingCommentChanging(value);
					this.SendPropertyChanging();
					this._MoistureBakingComment = value;
					this.SendPropertyChanged("MoistureBakingComment");
					this.OnMoistureBakingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_Summary_new", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.Summary_news.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.Summary_news.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(int);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoistureBaking")]
	public partial class MoistureBaking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _unique_id;
		
		private int _validationreportid;
		
		private System.DateTime _date_created;
		
		private string _strategic_sales_work_order_number;
		
		private string _process;
		
		private string _bake_duration;
		
		private string _msl;
		
		private string _bake_temperature;
		
		private System.Nullable<int> _total_quantity;
		
		private string _result;
		
		private string _result_comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onunique_idChanging(int value);
    partial void Onunique_idChanged();
    partial void OnvalidationreportidChanging(int value);
    partial void OnvalidationreportidChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Onstrategic_sales_work_order_numberChanging(string value);
    partial void Onstrategic_sales_work_order_numberChanged();
    partial void OnprocessChanging(string value);
    partial void OnprocessChanged();
    partial void Onbake_durationChanging(string value);
    partial void Onbake_durationChanged();
    partial void OnmslChanging(string value);
    partial void OnmslChanged();
    partial void Onbake_temperatureChanging(string value);
    partial void Onbake_temperatureChanged();
    partial void Ontotal_quantityChanging(System.Nullable<int> value);
    partial void Ontotal_quantityChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void Onresult_commentChanging(string value);
    partial void Onresult_commentChanged();
    #endregion
		
		public MoistureBaking()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unique_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int unique_id
		{
			get
			{
				return this._unique_id;
			}
			set
			{
				if ((this._unique_id != value))
				{
					this.Onunique_idChanging(value);
					this.SendPropertyChanging();
					this._unique_id = value;
					this.SendPropertyChanged("unique_id");
					this.Onunique_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validationreportid", DbType="Int NOT NULL")]
		public int validationreportid
		{
			get
			{
				return this._validationreportid;
			}
			set
			{
				if ((this._validationreportid != value))
				{
					this.OnvalidationreportidChanging(value);
					this.SendPropertyChanging();
					this._validationreportid = value;
					this.SendPropertyChanged("validationreportid");
					this.OnvalidationreportidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strategic_sales_work_order_number", DbType="NVarChar(255)")]
		public string strategic_sales_work_order_number
		{
			get
			{
				return this._strategic_sales_work_order_number;
			}
			set
			{
				if ((this._strategic_sales_work_order_number != value))
				{
					this.Onstrategic_sales_work_order_numberChanging(value);
					this.SendPropertyChanging();
					this._strategic_sales_work_order_number = value;
					this.SendPropertyChanged("strategic_sales_work_order_number");
					this.Onstrategic_sales_work_order_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_process", DbType="NVarChar(255)")]
		public string process
		{
			get
			{
				return this._process;
			}
			set
			{
				if ((this._process != value))
				{
					this.OnprocessChanging(value);
					this.SendPropertyChanging();
					this._process = value;
					this.SendPropertyChanged("process");
					this.OnprocessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bake_duration", DbType="NVarChar(255)")]
		public string bake_duration
		{
			get
			{
				return this._bake_duration;
			}
			set
			{
				if ((this._bake_duration != value))
				{
					this.Onbake_durationChanging(value);
					this.SendPropertyChanging();
					this._bake_duration = value;
					this.SendPropertyChanged("bake_duration");
					this.Onbake_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msl", DbType="NVarChar(255)")]
		public string msl
		{
			get
			{
				return this._msl;
			}
			set
			{
				if ((this._msl != value))
				{
					this.OnmslChanging(value);
					this.SendPropertyChanging();
					this._msl = value;
					this.SendPropertyChanged("msl");
					this.OnmslChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bake_temperature", DbType="NVarChar(255)")]
		public string bake_temperature
		{
			get
			{
				return this._bake_temperature;
			}
			set
			{
				if ((this._bake_temperature != value))
				{
					this.Onbake_temperatureChanging(value);
					this.SendPropertyChanging();
					this._bake_temperature = value;
					this.SendPropertyChanged("bake_temperature");
					this.Onbake_temperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_quantity", DbType="Int")]
		public System.Nullable<int> total_quantity
		{
			get
			{
				return this._total_quantity;
			}
			set
			{
				if ((this._total_quantity != value))
				{
					this.Ontotal_quantityChanging(value);
					this.SendPropertyChanging();
					this._total_quantity = value;
					this.SendPropertyChanged("total_quantity");
					this.Ontotal_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="NVarChar(255)")]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result_comment", DbType="NVarChar(MAX)")]
		public string result_comment
		{
			get
			{
				return this._result_comment;
			}
			set
			{
				if ((this._result_comment != value))
				{
					this.Onresult_commentChanging(value);
					this.SendPropertyChanging();
					this._result_comment = value;
					this.SendPropertyChanged("result_comment");
					this.Onresult_commentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BasicElectrical")]
	public partial class BasicElectrical : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ValidationReportID;
		
		private string _Category;
		
		private string _Title;
		
		private string _Image;
		
		private int _SampleQty;
		
		private string _Test1;
		
		private string _Cond1;
		
		private string _Res1;
		
		private string _Actual1;
		
		private string _Test2;
		
		private string _Cond2;
		
		private string _Res2;
		
		private string _Actual2;
		
		private string _Test3;
		
		private string _Cond3;
		
		private string _Res3;
		
		private string _Actual3;
		
		private string _Test4;
		
		private string _Cond4;
		
		private string _Res4;
		
		private string _Actual4;
		
		private string _Test5;
		
		private string _Cond5;
		
		private string _Res5;
		
		private string _Actual5;
		
		private string _Test6;
		
		private string _Cond6;
		
		private string _Res6;
		
		private string _Actual6;
		
		private string _Test7;
		
		private string _Cond7;
		
		private string _Res7;
		
		private string _Actual7;
		
		private string _Test8;
		
		private string _Cond8;
		
		private string _Res8;
		
		private string _Actual8;
		
		private string _Test9;
		
		private string _Cond9;
		
		private string _Res9;
		
		private string _Actual9;
		
		private string _Test10;
		
		private string _Cond10;
		
		private string _Res10;
		
		private string _Actual10;
		
		private System.DateTime _timestamp;
		
		private string _notes;
		
		private string _CategoryOther;
		
		private string _TestingResult;
		
		private EntityRef<ValidationReport> _ValidationReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValidationReportIDChanging(int value);
    partial void OnValidationReportIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnSampleQtyChanging(int value);
    partial void OnSampleQtyChanged();
    partial void OnTest1Changing(string value);
    partial void OnTest1Changed();
    partial void OnCond1Changing(string value);
    partial void OnCond1Changed();
    partial void OnRes1Changing(string value);
    partial void OnRes1Changed();
    partial void OnActual1Changing(string value);
    partial void OnActual1Changed();
    partial void OnTest2Changing(string value);
    partial void OnTest2Changed();
    partial void OnCond2Changing(string value);
    partial void OnCond2Changed();
    partial void OnRes2Changing(string value);
    partial void OnRes2Changed();
    partial void OnActual2Changing(string value);
    partial void OnActual2Changed();
    partial void OnTest3Changing(string value);
    partial void OnTest3Changed();
    partial void OnCond3Changing(string value);
    partial void OnCond3Changed();
    partial void OnRes3Changing(string value);
    partial void OnRes3Changed();
    partial void OnActual3Changing(string value);
    partial void OnActual3Changed();
    partial void OnTest4Changing(string value);
    partial void OnTest4Changed();
    partial void OnCond4Changing(string value);
    partial void OnCond4Changed();
    partial void OnRes4Changing(string value);
    partial void OnRes4Changed();
    partial void OnActual4Changing(string value);
    partial void OnActual4Changed();
    partial void OnTest5Changing(string value);
    partial void OnTest5Changed();
    partial void OnCond5Changing(string value);
    partial void OnCond5Changed();
    partial void OnRes5Changing(string value);
    partial void OnRes5Changed();
    partial void OnActual5Changing(string value);
    partial void OnActual5Changed();
    partial void OnTest6Changing(string value);
    partial void OnTest6Changed();
    partial void OnCond6Changing(string value);
    partial void OnCond6Changed();
    partial void OnRes6Changing(string value);
    partial void OnRes6Changed();
    partial void OnActual6Changing(string value);
    partial void OnActual6Changed();
    partial void OnTest7Changing(string value);
    partial void OnTest7Changed();
    partial void OnCond7Changing(string value);
    partial void OnCond7Changed();
    partial void OnRes7Changing(string value);
    partial void OnRes7Changed();
    partial void OnActual7Changing(string value);
    partial void OnActual7Changed();
    partial void OnTest8Changing(string value);
    partial void OnTest8Changed();
    partial void OnCond8Changing(string value);
    partial void OnCond8Changed();
    partial void OnRes8Changing(string value);
    partial void OnRes8Changed();
    partial void OnActual8Changing(string value);
    partial void OnActual8Changed();
    partial void OnTest9Changing(string value);
    partial void OnTest9Changed();
    partial void OnCond9Changing(string value);
    partial void OnCond9Changed();
    partial void OnRes9Changing(string value);
    partial void OnRes9Changed();
    partial void OnActual9Changing(string value);
    partial void OnActual9Changed();
    partial void OnTest10Changing(string value);
    partial void OnTest10Changed();
    partial void OnCond10Changing(string value);
    partial void OnCond10Changed();
    partial void OnRes10Changing(string value);
    partial void OnRes10Changed();
    partial void OnActual10Changing(string value);
    partial void OnActual10Changed();
    partial void OntimestampChanging(System.DateTime value);
    partial void OntimestampChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnCategoryOtherChanging(string value);
    partial void OnCategoryOtherChanged();
    partial void OnTestingResultChanging(string value);
    partial void OnTestingResultChanged();
    #endregion
		
		public BasicElectrical()
		{
			this._ValidationReport = default(EntityRef<ValidationReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationReportID", DbType="Int NOT NULL")]
		public int ValidationReportID
		{
			get
			{
				return this._ValidationReportID;
			}
			set
			{
				if ((this._ValidationReportID != value))
				{
					if (this._ValidationReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationReportID = value;
					this.SendPropertyChanged("ValidationReportID");
					this.OnValidationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(200)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleQty", DbType="Int NOT NULL")]
		public int SampleQty
		{
			get
			{
				return this._SampleQty;
			}
			set
			{
				if ((this._SampleQty != value))
				{
					this.OnSampleQtyChanging(value);
					this.SendPropertyChanging();
					this._SampleQty = value;
					this.SendPropertyChanged("SampleQty");
					this.OnSampleQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test1", DbType="NVarChar(255)")]
		public string Test1
		{
			get
			{
				return this._Test1;
			}
			set
			{
				if ((this._Test1 != value))
				{
					this.OnTest1Changing(value);
					this.SendPropertyChanging();
					this._Test1 = value;
					this.SendPropertyChanged("Test1");
					this.OnTest1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond1", DbType="VarChar(50)")]
		public string Cond1
		{
			get
			{
				return this._Cond1;
			}
			set
			{
				if ((this._Cond1 != value))
				{
					this.OnCond1Changing(value);
					this.SendPropertyChanging();
					this._Cond1 = value;
					this.SendPropertyChanged("Cond1");
					this.OnCond1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res1", DbType="VarChar(50)")]
		public string Res1
		{
			get
			{
				return this._Res1;
			}
			set
			{
				if ((this._Res1 != value))
				{
					this.OnRes1Changing(value);
					this.SendPropertyChanging();
					this._Res1 = value;
					this.SendPropertyChanged("Res1");
					this.OnRes1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual1", DbType="VarChar(50)")]
		public string Actual1
		{
			get
			{
				return this._Actual1;
			}
			set
			{
				if ((this._Actual1 != value))
				{
					this.OnActual1Changing(value);
					this.SendPropertyChanging();
					this._Actual1 = value;
					this.SendPropertyChanged("Actual1");
					this.OnActual1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test2", DbType="VarChar(50)")]
		public string Test2
		{
			get
			{
				return this._Test2;
			}
			set
			{
				if ((this._Test2 != value))
				{
					this.OnTest2Changing(value);
					this.SendPropertyChanging();
					this._Test2 = value;
					this.SendPropertyChanged("Test2");
					this.OnTest2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond2", DbType="VarChar(50)")]
		public string Cond2
		{
			get
			{
				return this._Cond2;
			}
			set
			{
				if ((this._Cond2 != value))
				{
					this.OnCond2Changing(value);
					this.SendPropertyChanging();
					this._Cond2 = value;
					this.SendPropertyChanged("Cond2");
					this.OnCond2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res2", DbType="VarChar(50)")]
		public string Res2
		{
			get
			{
				return this._Res2;
			}
			set
			{
				if ((this._Res2 != value))
				{
					this.OnRes2Changing(value);
					this.SendPropertyChanging();
					this._Res2 = value;
					this.SendPropertyChanged("Res2");
					this.OnRes2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual2", DbType="VarChar(50)")]
		public string Actual2
		{
			get
			{
				return this._Actual2;
			}
			set
			{
				if ((this._Actual2 != value))
				{
					this.OnActual2Changing(value);
					this.SendPropertyChanging();
					this._Actual2 = value;
					this.SendPropertyChanged("Actual2");
					this.OnActual2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test3", DbType="VarChar(50)")]
		public string Test3
		{
			get
			{
				return this._Test3;
			}
			set
			{
				if ((this._Test3 != value))
				{
					this.OnTest3Changing(value);
					this.SendPropertyChanging();
					this._Test3 = value;
					this.SendPropertyChanged("Test3");
					this.OnTest3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond3", DbType="VarChar(50)")]
		public string Cond3
		{
			get
			{
				return this._Cond3;
			}
			set
			{
				if ((this._Cond3 != value))
				{
					this.OnCond3Changing(value);
					this.SendPropertyChanging();
					this._Cond3 = value;
					this.SendPropertyChanged("Cond3");
					this.OnCond3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res3", DbType="VarChar(50)")]
		public string Res3
		{
			get
			{
				return this._Res3;
			}
			set
			{
				if ((this._Res3 != value))
				{
					this.OnRes3Changing(value);
					this.SendPropertyChanging();
					this._Res3 = value;
					this.SendPropertyChanged("Res3");
					this.OnRes3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual3", DbType="VarChar(50)")]
		public string Actual3
		{
			get
			{
				return this._Actual3;
			}
			set
			{
				if ((this._Actual3 != value))
				{
					this.OnActual3Changing(value);
					this.SendPropertyChanging();
					this._Actual3 = value;
					this.SendPropertyChanged("Actual3");
					this.OnActual3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test4", DbType="VarChar(50)")]
		public string Test4
		{
			get
			{
				return this._Test4;
			}
			set
			{
				if ((this._Test4 != value))
				{
					this.OnTest4Changing(value);
					this.SendPropertyChanging();
					this._Test4 = value;
					this.SendPropertyChanged("Test4");
					this.OnTest4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond4", DbType="VarChar(50)")]
		public string Cond4
		{
			get
			{
				return this._Cond4;
			}
			set
			{
				if ((this._Cond4 != value))
				{
					this.OnCond4Changing(value);
					this.SendPropertyChanging();
					this._Cond4 = value;
					this.SendPropertyChanged("Cond4");
					this.OnCond4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res4", DbType="VarChar(50)")]
		public string Res4
		{
			get
			{
				return this._Res4;
			}
			set
			{
				if ((this._Res4 != value))
				{
					this.OnRes4Changing(value);
					this.SendPropertyChanging();
					this._Res4 = value;
					this.SendPropertyChanged("Res4");
					this.OnRes4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual4", DbType="VarChar(50)")]
		public string Actual4
		{
			get
			{
				return this._Actual4;
			}
			set
			{
				if ((this._Actual4 != value))
				{
					this.OnActual4Changing(value);
					this.SendPropertyChanging();
					this._Actual4 = value;
					this.SendPropertyChanged("Actual4");
					this.OnActual4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test5", DbType="VarChar(50)")]
		public string Test5
		{
			get
			{
				return this._Test5;
			}
			set
			{
				if ((this._Test5 != value))
				{
					this.OnTest5Changing(value);
					this.SendPropertyChanging();
					this._Test5 = value;
					this.SendPropertyChanged("Test5");
					this.OnTest5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond5", DbType="VarChar(50)")]
		public string Cond5
		{
			get
			{
				return this._Cond5;
			}
			set
			{
				if ((this._Cond5 != value))
				{
					this.OnCond5Changing(value);
					this.SendPropertyChanging();
					this._Cond5 = value;
					this.SendPropertyChanged("Cond5");
					this.OnCond5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res5", DbType="VarChar(50)")]
		public string Res5
		{
			get
			{
				return this._Res5;
			}
			set
			{
				if ((this._Res5 != value))
				{
					this.OnRes5Changing(value);
					this.SendPropertyChanging();
					this._Res5 = value;
					this.SendPropertyChanged("Res5");
					this.OnRes5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual5", DbType="VarChar(50)")]
		public string Actual5
		{
			get
			{
				return this._Actual5;
			}
			set
			{
				if ((this._Actual5 != value))
				{
					this.OnActual5Changing(value);
					this.SendPropertyChanging();
					this._Actual5 = value;
					this.SendPropertyChanged("Actual5");
					this.OnActual5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test6", DbType="VarChar(50)")]
		public string Test6
		{
			get
			{
				return this._Test6;
			}
			set
			{
				if ((this._Test6 != value))
				{
					this.OnTest6Changing(value);
					this.SendPropertyChanging();
					this._Test6 = value;
					this.SendPropertyChanged("Test6");
					this.OnTest6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond6", DbType="VarChar(50)")]
		public string Cond6
		{
			get
			{
				return this._Cond6;
			}
			set
			{
				if ((this._Cond6 != value))
				{
					this.OnCond6Changing(value);
					this.SendPropertyChanging();
					this._Cond6 = value;
					this.SendPropertyChanged("Cond6");
					this.OnCond6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res6", DbType="VarChar(50)")]
		public string Res6
		{
			get
			{
				return this._Res6;
			}
			set
			{
				if ((this._Res6 != value))
				{
					this.OnRes6Changing(value);
					this.SendPropertyChanging();
					this._Res6 = value;
					this.SendPropertyChanged("Res6");
					this.OnRes6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual6", DbType="VarChar(50)")]
		public string Actual6
		{
			get
			{
				return this._Actual6;
			}
			set
			{
				if ((this._Actual6 != value))
				{
					this.OnActual6Changing(value);
					this.SendPropertyChanging();
					this._Actual6 = value;
					this.SendPropertyChanged("Actual6");
					this.OnActual6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test7", DbType="VarChar(50)")]
		public string Test7
		{
			get
			{
				return this._Test7;
			}
			set
			{
				if ((this._Test7 != value))
				{
					this.OnTest7Changing(value);
					this.SendPropertyChanging();
					this._Test7 = value;
					this.SendPropertyChanged("Test7");
					this.OnTest7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond7", DbType="VarChar(50)")]
		public string Cond7
		{
			get
			{
				return this._Cond7;
			}
			set
			{
				if ((this._Cond7 != value))
				{
					this.OnCond7Changing(value);
					this.SendPropertyChanging();
					this._Cond7 = value;
					this.SendPropertyChanged("Cond7");
					this.OnCond7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res7", DbType="VarChar(50)")]
		public string Res7
		{
			get
			{
				return this._Res7;
			}
			set
			{
				if ((this._Res7 != value))
				{
					this.OnRes7Changing(value);
					this.SendPropertyChanging();
					this._Res7 = value;
					this.SendPropertyChanged("Res7");
					this.OnRes7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual7", DbType="VarChar(50)")]
		public string Actual7
		{
			get
			{
				return this._Actual7;
			}
			set
			{
				if ((this._Actual7 != value))
				{
					this.OnActual7Changing(value);
					this.SendPropertyChanging();
					this._Actual7 = value;
					this.SendPropertyChanged("Actual7");
					this.OnActual7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test8", DbType="VarChar(50)")]
		public string Test8
		{
			get
			{
				return this._Test8;
			}
			set
			{
				if ((this._Test8 != value))
				{
					this.OnTest8Changing(value);
					this.SendPropertyChanging();
					this._Test8 = value;
					this.SendPropertyChanged("Test8");
					this.OnTest8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond8", DbType="VarChar(50)")]
		public string Cond8
		{
			get
			{
				return this._Cond8;
			}
			set
			{
				if ((this._Cond8 != value))
				{
					this.OnCond8Changing(value);
					this.SendPropertyChanging();
					this._Cond8 = value;
					this.SendPropertyChanged("Cond8");
					this.OnCond8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res8", DbType="VarChar(50)")]
		public string Res8
		{
			get
			{
				return this._Res8;
			}
			set
			{
				if ((this._Res8 != value))
				{
					this.OnRes8Changing(value);
					this.SendPropertyChanging();
					this._Res8 = value;
					this.SendPropertyChanged("Res8");
					this.OnRes8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual8", DbType="VarChar(50)")]
		public string Actual8
		{
			get
			{
				return this._Actual8;
			}
			set
			{
				if ((this._Actual8 != value))
				{
					this.OnActual8Changing(value);
					this.SendPropertyChanging();
					this._Actual8 = value;
					this.SendPropertyChanged("Actual8");
					this.OnActual8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test9", DbType="VarChar(50)")]
		public string Test9
		{
			get
			{
				return this._Test9;
			}
			set
			{
				if ((this._Test9 != value))
				{
					this.OnTest9Changing(value);
					this.SendPropertyChanging();
					this._Test9 = value;
					this.SendPropertyChanged("Test9");
					this.OnTest9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond9", DbType="VarChar(50)")]
		public string Cond9
		{
			get
			{
				return this._Cond9;
			}
			set
			{
				if ((this._Cond9 != value))
				{
					this.OnCond9Changing(value);
					this.SendPropertyChanging();
					this._Cond9 = value;
					this.SendPropertyChanged("Cond9");
					this.OnCond9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res9", DbType="VarChar(50)")]
		public string Res9
		{
			get
			{
				return this._Res9;
			}
			set
			{
				if ((this._Res9 != value))
				{
					this.OnRes9Changing(value);
					this.SendPropertyChanging();
					this._Res9 = value;
					this.SendPropertyChanged("Res9");
					this.OnRes9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual9", DbType="VarChar(50)")]
		public string Actual9
		{
			get
			{
				return this._Actual9;
			}
			set
			{
				if ((this._Actual9 != value))
				{
					this.OnActual9Changing(value);
					this.SendPropertyChanging();
					this._Actual9 = value;
					this.SendPropertyChanged("Actual9");
					this.OnActual9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test10", DbType="VarChar(50)")]
		public string Test10
		{
			get
			{
				return this._Test10;
			}
			set
			{
				if ((this._Test10 != value))
				{
					this.OnTest10Changing(value);
					this.SendPropertyChanging();
					this._Test10 = value;
					this.SendPropertyChanged("Test10");
					this.OnTest10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cond10", DbType="VarChar(50)")]
		public string Cond10
		{
			get
			{
				return this._Cond10;
			}
			set
			{
				if ((this._Cond10 != value))
				{
					this.OnCond10Changing(value);
					this.SendPropertyChanging();
					this._Cond10 = value;
					this.SendPropertyChanged("Cond10");
					this.OnCond10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Res10", DbType="VarChar(50)")]
		public string Res10
		{
			get
			{
				return this._Res10;
			}
			set
			{
				if ((this._Res10 != value))
				{
					this.OnRes10Changing(value);
					this.SendPropertyChanging();
					this._Res10 = value;
					this.SendPropertyChanged("Res10");
					this.OnRes10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual10", DbType="VarChar(50)")]
		public string Actual10
		{
			get
			{
				return this._Actual10;
			}
			set
			{
				if ((this._Actual10 != value))
				{
					this.OnActual10Changing(value);
					this.SendPropertyChanging();
					this._Actual10 = value;
					this.SendPropertyChanged("Actual10");
					this.OnActual10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOther", DbType="NVarChar(MAX)")]
		public string CategoryOther
		{
			get
			{
				return this._CategoryOther;
			}
			set
			{
				if ((this._CategoryOther != value))
				{
					this.OnCategoryOtherChanging(value);
					this.SendPropertyChanging();
					this._CategoryOther = value;
					this.SendPropertyChanged("CategoryOther");
					this.OnCategoryOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingResult", DbType="NVarChar(10)")]
		public string TestingResult
		{
			get
			{
				return this._TestingResult;
			}
			set
			{
				if ((this._TestingResult != value))
				{
					this.OnTestingResultChanging(value);
					this.SendPropertyChanging();
					this._TestingResult = value;
					this.SendPropertyChanged("TestingResult");
					this.OnTestingResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidationReport_BasicElectrical", Storage="_ValidationReport", ThisKey="ValidationReportID", OtherKey="ValidationReportID", IsForeignKey=true)]
		public ValidationReport ValidationReport
		{
			get
			{
				return this._ValidationReport.Entity;
			}
			set
			{
				ValidationReport previousValue = this._ValidationReport.Entity;
				if (((previousValue != value) 
							|| (this._ValidationReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidationReport.Entity = null;
						previousValue.BasicElectricals.Remove(this);
					}
					this._ValidationReport.Entity = value;
					if ((value != null))
					{
						value.BasicElectricals.Add(this);
						this._ValidationReportID = value.ValidationReportID;
					}
					else
					{
						this._ValidationReportID = default(int);
					}
					this.SendPropertyChanged("ValidationReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
