<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pFolder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>